%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1410.i039.041.S.m004.c11.data analysis isometric.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: IvAN
%%CreationDate: 10/30/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-10-30T21:27:15+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-10-30T21:27:15+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-10-30T21:27:14+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A5fnUPEOxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvQdL/KiDUbXSo4tdjTXNasnvtO0t7e&#xA;SkgjDkp64JUH903UZiy1NE7ekGrc+GiEgPV6pCwK/ShLb8srhvJFp5vvL9bWwnuEjuI/SaSSG2eR&#xA;oRckKasPUWgWm/jhOo9ZgBuwGkPhjITQv7O9HzflPYNrGi6RYeYUurvWYorxAbWSJY7GWF5vrDMz&#xA;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&#xA;q4knFLsUOxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:34b59be7-cde6-6043-9aab-9b8ee65beb20</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:34b59be7-cde6-6043-9aab-9b8ee65beb20</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:cc63b68f-7f5a-b74e-9f37-4bcfc2b10a87</stRef:instanceID>
            <stRef:documentID>xmp.did:cc63b68f-7f5a-b74e-9f37-4bcfc2b10a87</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3c5151d4-5031-c248-a159-6fe59347d3e3</stEvt:instanceID>
                  <stEvt:when>2014-10-30T21:30:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cc63b68f-7f5a-b74e-9f37-4bcfc2b10a87</stEvt:instanceID>
                  <stEvt:when>2014-10-30T21:31:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34b59be7-cde6-6043-9aab-9b8ee65beb20</stEvt:instanceID>
                  <stEvt:when>2014-10-30T21:27:15+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.00392157 .352941 .509804 rgb
f
gsave
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
clp
gsave
-10 7.69965 mo
457 7.69965 li
457 459 li
-10 459 li
-10 7.69965 li
clp
0 158.612 mo
0 157.417 li
9.70314 151.778 li
10.7275 151.184 li
37.1899 135.805 li
38.2139 135.21 li
64.6855 119.826 li
65.71 119.231 li
92.1729 103.852 li
93.1963 103.257 li
119.659 87.8789 li
120.685 87.2832 li
147.155 71.8993 li
148.18 71.3058 li
174.643 55.9263 li
175.667 55.3315 li
202.138 39.9478 li
203.163 39.3521 li
229.624 23.9741 li
230.648 23.3784 li
257.629 7.69965 li
258.66 8.29535 li
231.681 23.9741 li
230.656 24.5688 li
204.194 39.9478 li
203.17 40.5426 li
176.697 55.9263 li
175.673 56.522 li
149.212 71.8993 li
148.187 72.495 li
121.715 87.8789 li
121.715 87.878 li
120.69 88.4736 li
94.2285 103.852 li
93.2031 104.447 li
66.7411 119.826 li
65.7158 120.421 li
39.2461 135.805 li
38.2207 136.4 li
11.7588 151.778 li
10.7344 152.374 li
0 158.612 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .447059 .584314 ]
/C1 [.00392157 .352941 .509804 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-RU8h-RU8g-71&d-71#b,pai`,U=W\,U=W[,9nEX,9e<U+sJ3T+X&!P+X%sN+<VdL+<M[I+!2RH*Zc@D
*Zc=B*??.@*?6%=*#oq;)]K_8)]K\6)B'M4)&X;0)&X;/(`4),(`4&*(Ddl(()@Z$()@Z#'bqGu'bh>r
'GM5q',)#m',(uk&eYfi&eP]f&J5Td&.fBa&.f?_%hB0]%h9'Z%LrsX%1NaU%1N^S$k*OQ$O[=M$O[=L
$47+I$4."F#mgnE#RC\A#RC\@#6tJ=#6kA:"pP89"U,&5"U,#3"9\i1"9S`.!s8W,!WiE)!WiB'!<E3%
~>
<~EH,u<EH,u<EH,u;E,]c8E,]c8E,]`6Df9Q4Df9Q4DJj?0DJj?0DJj?/D/F-,D/F-,D/F**Ci!p(Ci!p(
CMR^$CMR^$CMR^#C2.KuC2.KuC2.HsBk_9qBk_9qBP;'mBP;'mBP;'lB4kjiB4kjiB4kggAnGXeAnGXe
AS#FaAS#FaAS#F`A7T4]A7T4]A7T1[@q0"Y@q0"Y@U`eU@U`eU@U`eT@:<SQ@:<SQ@:<PO?smAM?smAM
?XI/I?XI/I?XI/H?=$rE?=$rE?=$oC?!U`A?!U`A>[1N=>[1N=>[1N<>?b<9>?b<9>?b97>$>*5>$>*5
~>
<~Pa%DsPa%DsPa%DsPa%AqPEV2oPEV2oPEV2nP*1ukP*1ukP*1ukP*(lhOcbcgOcbcgOcb`eOH>QcOH>Qc
OH>QcO,o?_O,o?_O,o?_O,f6\NfK-[NfK-[NfK-ZNK&pWNK&pWNK&pWN/W^SN/W^SN/W^SN/W[QMi3LO
Mi3LOMi3LNMMd:KMMd:KMMd:KMM[1HM2@(GM2@(GM2@%ELkpkCLkpkCLkpkCLPLY?LPLY?LPLY?LPCP<
L5(G;L5(G;L5(G:KnY57KnY57KnY57KS5#3KS5#3KS5#3KS4u1K7ef/K7ef/K7ef.JqAT+JqAT+JqAT+
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
0 286.828 mo
0 285.633 li
10.4126 279.582 li
11.437 278.987 li
37.8994 263.608 li
38.9336 263.008 li
65.3954 247.63 li
65.396 247.63 li
65.3965 247.63 li
66.4198 247.034 li
92.8819 231.656 li
93.9072 231.06 li
120.379 215.677 li
121.404 215.081 li
147.864 199.703 li
147.865 199.702 li
147.866 199.703 li
148.89 199.108 li
175.36 183.726 li
175.361 183.725 li
175.362 183.726 li
176.386 183.13 li
176.384 183.129 li
176.385 183.129 li
202.849 167.751 li
203.874 167.155 li
230.334 151.777 li
230.335 151.777 li
230.337 151.777 li
231.36 151.182 li
257.831 135.798 li
258.856 135.203 li
285.317 119.824 li
286.344 119.229 li
286.343 119.229 li
312.814 103.847 li
313.839 103.25 li
340.3 87.8721 li
341.325 87.2772 li
368.304 71.5986 li
369.336 72.1943 li
342.355 87.8721 li
341.332 88.4697 li
314.869 103.847 li
313.845 104.44 li
287.373 119.824 li
286.349 120.42 li
259.887 135.798 li
258.862 136.394 li
232.392 151.777 li
231.366 152.372 li
204.903 167.751 li
203.88 168.346 li
177.417 183.726 li
176.392 184.319 li
149.922 199.703 li
148.896 200.299 li
122.435 215.677 li
121.409 216.272 li
94.9384 231.656 li
93.914 232.251 li
67.4512 247.63 li
66.4258 248.225 li
39.9658 263.603 li
38.9307 264.204 li
12.4683 279.582 li
11.4435 280.178 li
0 286.828 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 222.725 mo
0 221.52 li
10.0532 215.678 li
11.0776 215.083 li
37.5396 199.704 li
38.5635 199.109 li
65.0352 183.726 li
66.0605 183.129 li
92.5225 167.751 li
92.523 167.751 li
92.5234 167.751 li
93.0846 167.424 li
93.5458 167.156 li
120.019 151.772 li
121.043 151.178 li
147.506 135.798 li
148.53 135.203 li
174.991 119.824 li
174.992 119.824 li
174.993 119.824 li
176.017 119.229 li
202.487 103.847 li
203.513 103.251 li
229.976 87.8721 li
231.001 87.2772 li
257.471 71.8937 li
258.495 71.2969 li
284.958 55.9189 li
285.982 55.3257 li
312.961 39.646 li
314.001 40.2476 li
287.023 55.9248 li
285.998 56.522 li
259.537 71.8993 li
258.512 72.495 li
232.04 87.878 li
231.016 88.4736 li
204.553 103.852 li
203.529 104.446 li
177.059 119.83 li
176.033 120.426 li
149.57 135.804 li
148.546 136.399 li
122.082 151.778 li
121.06 152.374 li
94.588 167.757 li
93.5625 168.352 li
67.1015 183.73 li
66.0771 184.325 li
39.6046 199.709 li
38.5791 200.305 li
12.1187 215.683 li
11.0938 216.278 li
0 222.725 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 318.89 mo
0 317.696 li
10.6016 311.535 li
10.6019 311.535 li
10.6022 311.535 li
11.627 310.94 li
38.0888 295.561 li
39.1123 294.966 li
65.5742 279.588 li
65.5752 279.587 li
65.5762 279.588 li
66.6103 278.987 li
93.0713 263.608 li
94.0968 263.014 li
120.559 247.635 li
121.582 247.04 li
148.055 231.656 li
149.08 231.06 li
175.541 215.683 li
175.541 215.682 li
175.542 215.683 li
176.565 215.087 li
203.036 199.703 li
203.037 199.702 li
203.038 199.703 li
204.062 199.108 li
230.524 183.73 li
231.549 183.135 li
258.012 167.757 li
259.037 167.161 li
285.507 151.777 li
286.532 151.182 li
312.994 135.804 li
314.019 135.209 li
340.489 119.824 li
341.515 119.229 li
367.977 103.852 li
369.001 103.256 li
395.98 87.5762 li
397.011 88.1728 li
370.032 103.852 li
369.007 104.446 li
342.546 119.824 li
341.521 120.42 li
315.05 135.804 li
314.024 136.399 li
287.561 151.777 li
286.539 152.372 li
260.066 167.757 li
259.042 168.352 li
232.58 183.73 li
231.556 184.325 li
205.092 199.703 li
204.068 200.299 li
177.598 215.683 li
176.572 216.278 li
150.109 231.656 li
149.087 232.251 li
122.614 247.635 li
121.59 248.23 li
95.127 263.608 li
94.1035 264.204 li
67.6406 279.582 li
66.6064 280.184 li
40.1436 295.561 li
39.1183 296.156 li
12.6577 311.535 li
11.6333 312.13 li
0 318.89 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 190.663 mo
0 189.469 li
9.87251 183.731 li
9.87277 183.731 li
10.898 183.136 li
37.3691 167.752 li
37.3698 167.752 li
38.3945 167.156 li
64.8564 151.778 li
64.8569 151.778 li
65.8799 151.184 li
92.3515 135.799 li
93.376 135.204 li
119.84 119.826 li
120.864 119.231 li
147.325 103.852 li
148.351 103.256 li
174.822 87.8721 li
175.846 87.2772 li
202.31 71.8993 li
203.333 71.3027 li
229.805 55.9205 li
230.829 55.3257 li
257.292 39.9478 li
258.316 39.3521 li
285.295 23.6725 li
286.326 24.2681 li
259.347 39.9478 li
258.322 40.5426 li
231.86 55.9205 li
230.836 56.5162 li
204.364 71.8993 li
203.339 72.495 li
176.878 87.8729 li
175.852 88.4697 li
149.381 103.852 li
148.357 104.446 li
121.895 119.826 li
120.87 120.421 li
94.4072 135.799 li
93.3837 136.395 li
66.9121 151.778 li
65.8868 152.374 li
39.4248 167.752 li
38.4014 168.347 li
11.9287 183.731 li
10.9043 184.326 li
0 190.663 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 254.776 mo
0 253.582 li
10.2319 247.635 li
10.2321 247.635 li
11.2666 247.034 li
37.728 231.656 li
37.7285 231.656 li
38.7528 231.06 li
65.2158 215.683 li
66.2402 215.087 li
92.712 199.703 li
92.7124 199.703 li
93.7364 199.108 li
120.198 183.73 li
121.223 183.135 li
147.693 167.751 li
148.719 167.156 li
175.182 151.777 li
176.207 151.182 li
202.668 135.804 li
203.693 135.209 li
230.165 119.824 li
231.188 119.229 li
257.65 103.852 li
258.676 103.256 li
285.148 87.8721 li
286.172 87.2772 li
312.634 71.8993 li
313.659 71.3027 li
340.638 55.6255 li
341.67 56.2211 li
314.688 71.8993 li
313.664 72.495 li
287.203 87.8721 li
286.178 88.4697 li
259.706 103.852 li
258.682 104.446 li
232.219 119.824 li
231.195 120.42 li
204.725 135.804 li
203.7 136.399 li
177.236 151.777 li
176.214 152.372 li
149.751 167.751 li
148.726 168.347 li
122.254 183.73 li
121.231 184.325 li
94.7676 199.703 li
93.7432 200.299 li
67.2705 215.683 li
66.2461 216.278 li
39.7852 231.656 li
38.7608 232.251 li
12.298 247.63 li
11.2636 248.23 li
0 254.776 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 350.941 mo
0 349.746 li
10.771 343.487 li
10.7715 343.487 li
11.7959 342.893 li
38.2686 327.509 li
39.292 326.913 li
65.7549 311.535 li
66.7793 310.94 li
93.2401 295.561 li
93.2412 295.561 li
94.2754 294.96 li
120.738 279.582 li
121.762 278.987 li
148.225 263.608 li
149.249 263.014 li
175.721 247.63 li
175.721 247.63 li
176.746 247.034 li
203.207 231.656 li
204.232 231.06 li
230.703 215.677 li
230.704 215.676 li
231.727 215.081 li
258.19 199.703 li
259.215 199.108 li
285.678 183.73 li
286.702 183.135 li
313.173 167.751 li
314.198 167.155 li
340.66 151.777 li
341.685 151.182 li
368.155 135.798 li
369.181 135.203 li
395.643 119.824 li
396.668 119.229 li
423.646 103.551 li
424.679 104.146 li
397.698 119.824 li
396.673 120.42 li
370.212 135.798 li
369.187 136.394 li
342.716 151.777 li
341.691 152.372 li
315.228 167.751 li
314.205 168.346 li
287.733 183.73 li
286.709 184.325 li
260.246 199.703 li
259.223 200.299 li
232.76 215.677 li
231.734 216.272 li
205.264 231.656 li
204.239 232.251 li
177.776 247.63 li
176.753 248.225 li
150.28 263.608 li
149.256 264.204 li
122.794 279.582 li
121.769 280.178 li
95.3076 295.556 li
94.2725 296.156 li
67.8105 311.535 li
66.7853 312.13 li
40.3242 327.509 li
39.2998 328.103 li
12.8271 343.487 li
11.8027 344.083 li
0 350.941 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
93.7813 391.411 mo
67.1455 376.035 li
68.1709 375.44 li
94.8047 390.816 li
93.7813 391.411 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.643 119.824 mo
369.007 104.446 li
370.032 103.852 li
396.668 119.229 li
395.643 119.824 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
229.805 55.9205 mo
203.17 40.5426 li
204.194 39.9478 li
230.829 55.3257 li
229.805 55.9205 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
229.624 23.9741 mo
202.469 8.29535 li
203.494 7.69965 li
230.648 23.3784 li
229.624 23.9741 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
257.292 39.9478 mo
230.656 24.5688 li
231.681 23.9741 li
258.316 39.3521 li
257.292 39.9478 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
202.138 39.9478 mo
202.138 39.9478 li
174.982 24.2681 li
176.008 23.6743 li
203.163 39.3521 li
202.138 39.9478 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
284.958 55.9189 mo
258.323 40.5426 li
259.347 39.9478 li
285.982 55.3257 li
284.958 55.9189 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
174.643 55.9263 mo
174.643 55.9263 li
147.486 40.2485 li
148.511 39.6519 li
175.667 55.3315 li
174.643 55.9263 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
312.634 71.8993 mo
285.998 56.522 li
287.023 55.9248 li
313.659 71.3027 li
312.634 71.8993 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
257.471 71.8937 mo
230.836 56.5162 li
231.861 55.9205 li
258.495 71.2969 li
257.471 71.8937 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
202.31 71.8993 mo
175.673 56.522 li
176.697 55.9263 li
203.333 71.3027 li
202.31 71.8993 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
147.155 71.8993 mo
147.155 71.8993 li
120 56.2211 li
121.023 55.6265 li
148.18 71.3058 li
147.155 71.8993 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
340.3 87.8721 mo
340.3 87.8721 li
313.666 72.495 li
314.689 71.8993 li
341.325 87.2772 li
340.3 87.8721 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
285.148 87.8721 mo
258.512 72.495 li
259.537 71.8993 li
286.172 87.2772 li
285.148 87.8721 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
229.976 87.8721 mo
229.976 87.8721 li
203.341 72.495 li
204.364 71.8993 li
231.001 87.2772 li
229.976 87.8721 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
174.822 87.8729 mo
148.187 72.495 li
149.212 71.8993 li
175.847 87.2772 li
175.846 87.2772 li
174.822 87.8721 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
119.659 87.878 mo
92.5039 72.2021 li
93.5274 71.6045 li
120.685 87.2832 li
119.659 87.878 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
367.977 103.852 mo
367.977 103.852 li
341.332 88.4697 li
342.357 87.8721 li
369.001 103.256 li
367.977 103.852 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
312.814 103.847 mo
312.814 103.847 li
286.179 88.4697 li
287.203 87.8721 li
313.839 103.25 li
312.814 103.847 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
257.65 103.852 mo
231.016 88.4736 li
232.041 87.878 li
258.676 103.256 li
257.65 103.852 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
202.487 103.847 mo
202.487 103.847 li
175.854 88.4697 li
176.878 87.8729 li
203.513 103.25 li
202.487 103.847 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
147.325 103.852 mo
120.69 88.4736 li
121.715 87.878 li
148.351 103.256 li
147.325 103.852 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
92.1729 103.852 mo
92.1729 103.852 li
65.0165 88.1728 li
66.042 87.5791 li
93.1963 103.257 li
92.1729 103.852 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
340.489 119.824 mo
340.489 119.824 li
313.847 104.44 li
314.87 103.847 li
341.515 119.229 li
340.489 119.824 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
285.317 119.824 mo
285.317 119.824 li
258.683 104.446 li
259.707 103.852 li
286.343 119.229 li
286.344 119.229 li
285.317 119.824 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
230.165 119.824 mo
203.529 104.446 li
204.554 103.852 li
231.19 119.229 li
231.188 119.229 li
230.165 119.824 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
174.993 119.824 mo
174.992 119.824 li
148.357 104.446 li
149.383 103.852 li
176.017 119.229 li
174.993 119.824 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
119.84 119.826 mo
93.2031 104.447 li
94.2285 103.852 li
120.864 119.231 li
119.84 119.826 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
64.6855 119.826 mo
64.6855 119.826 li
37.5288 104.148 li
38.5537 103.554 li
65.71 119.231 li
64.6855 119.826 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
423.31 135.798 mo
396.675 120.42 li
397.698 119.824 li
424.335 135.203 li
423.31 135.798 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
368.155 135.798 mo
341.521 120.42 li
342.546 119.824 li
369.181 135.203 li
368.155 135.798 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
312.994 135.804 mo
312.994 135.804 li
286.349 120.42 li
287.374 119.824 li
314.019 135.209 li
312.994 135.804 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
257.831 135.798 mo
257.831 135.798 li
231.196 120.42 li
232.221 119.824 li
258.856 135.203 li
257.831 135.798 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
202.668 135.804 mo
176.033 120.426 li
177.059 119.83 li
203.693 135.209 li
202.668 135.804 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
147.506 135.798 mo
147.506 135.798 li
120.871 120.421 li
121.895 119.826 li
148.53 135.203 li
147.506 135.798 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
92.3515 135.799 mo
65.7158 120.421 li
66.7411 119.826 li
93.376 135.204 li
92.3515 135.799 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
37.1899 135.805 mo
37.1899 135.805 li
10.0342 120.126 li
11.0581 119.53 li
38.2139 135.21 li
37.1899 135.805 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
341.02 215.681 mo
314.386 200.303 li
315.409 199.708 li
342.046 215.085 li
341.5 215.403 li
341.02 215.681 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
313.534 231.655 mo
286.898 216.276 li
287.923 215.682 li
314.559 231.06 li
313.534 231.655 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
286.046 247.63 mo
259.411 232.251 li
260.435 231.656 li
287.071 247.034 li
286.046 247.63 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
258.551 263.608 mo
231.915 248.23 li
232.94 247.634 li
259.576 263.013 li
258.551 263.608 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
231.065 279.581 mo
204.43 264.203 li
205.453 263.607 li
232.09 278.984 li
231.142 279.536 li
231.065 279.581 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
203.568 295.561 mo
176.934 280.184 li
177.957 279.587 li
204.592 294.965 li
204.591 294.966 li
203.568 295.561 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
176.082 311.535 mo
149.445 296.156 li
150.471 295.561 li
177.105 310.94 li
177.105 310.94 li
177.105 310.94 li
176.082 311.535 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
148.584 327.514 mo
121.948 312.136 li
122.982 311.534 li
149.619 326.913 li
149.618 326.913 li
148.583 327.513 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
121.098 343.487 mo
94.4628 328.109 li
95.4872 327.514 li
122.122 342.893 li
121.098 343.487 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
93.6112 359.461 mo
66.9766 344.083 li
68 343.487 li
94.6356 358.866 li
94.6348 358.866 li
93.6112 359.461 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
66.1143 375.44 mo
39.4795 360.063 li
40.5039 359.467 li
67.1387 374.844 li
66.1143 375.44 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
40.167 391.714 mo
39.1348 391.117 li
66.1133 375.44 li
66.1143 375.44 li
67.1387 374.844 li
93.6112 359.461 li
94.6348 358.866 li
121.098 343.487 li
122.122 342.893 li
148.583 327.514 li
148.583 327.513 li
149.618 326.913 li
176.08 311.535 li
176.082 311.535 li
177.105 310.94 li
177.105 310.94 li
203.568 295.561 li
204.591 294.966 li
204.592 294.965 li
231.064 279.582 li
231.065 279.581 li
231.142 279.536 li
232.088 278.987 li
258.551 263.608 li
259.575 263.014 li
286.046 247.63 li
287.071 247.034 li
313.534 231.656 li
314.558 231.06 li
341.019 215.682 li
341.02 215.681 li
341.5 215.403 li
342.045 215.087 li
368.517 199.703 li
369.542 199.108 li
396.003 183.73 li
397.028 183.135 li
423.498 167.751 li
423.498 167.751 li
423.499 167.751 li
424.523 167.155 li
450 152.349 li
450 153.544 li
425.555 167.751 li
424.53 168.346 li
398.06 183.729 li
398.06 183.729 li
397.034 184.325 li
370.571 199.703 li
369.549 200.298 li
369.548 200.299 li
343.075 215.682 li
342.052 216.276 li
315.59 231.655 li
315.59 231.655 li
314.723 232.159 li
314.564 232.251 li
288.101 247.63 li
287.077 248.225 li
260.606 263.608 li
259.582 264.203 li
259.582 264.204 li
233.12 279.581 li
233.12 279.581 li
232.096 280.177 li
232.096 280.178 li
205.623 295.561 li
204.598 296.156 li
178.137 311.535 li
177.111 312.13 li
150.649 327.509 li
149.614 328.109 li
123.154 343.487 li
122.129 344.083 li
95.666 359.461 li
94.6426 360.057 li
68.1699 375.44 li
67.1455 376.035 li
40.167 391.714 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 151.208 mo
424.351 136.399 li
425.374 135.804 li
450 150.021 li
450 151.208 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
12.5 375.739 mo
11.4594 375.138 li
38.4385 359.461 li
39.4639 358.866 li
39.4629 358.866 li
65.9355 343.481 li
66.96 342.887 li
93.4209 327.509 li
94.4463 326.913 li
120.908 311.535 li
120.909 311.535 li
120.909 311.535 li
121.943 310.934 li
148.405 295.556 li
149.429 294.96 li
175.892 279.582 li
176.916 278.987 li
203.388 263.603 li
204.413 263.008 li
230.873 247.63 li
230.875 247.629 li
230.876 247.63 li
231.899 247.034 li
258.37 231.65 li
259.396 231.055 li
285.858 215.677 li
286.883 215.081 li
313.344 199.703 li
314.369 199.108 li
340.841 183.724 li
341.865 183.129 li
368.327 167.751 li
369.352 167.155 li
395.822 151.772 li
396.848 151.176 li
423.31 135.798 li
424.335 135.203 li
450 120.287 li
450 121.492 li
425.374 135.804 li
424.35 136.399 li
397.889 151.777 li
396.863 152.372 li
370.393 167.755 li
370.393 167.755 li
370.061 167.948 li
369.367 168.351 li
342.904 183.73 li
341.88 184.325 li
315.408 199.708 li
314.384 200.303 li
287.923 215.682 li
286.897 216.276 li
260.435 231.656 li
259.409 232.251 li
232.94 247.634 li
231.915 248.23 li
205.452 263.607 li
204.428 264.203 li
177.956 279.587 li
176.931 280.184 li
150.471 295.561 li
149.445 296.155 li
122.982 311.534 li
121.948 312.136 li
95.4863 327.514 li
94.4628 328.109 li
68 343.487 li
66.9746 344.083 li
40.5039 359.467 li
39.4795 360.063 li
12.5 375.739 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.822 151.772 mo
395.822 151.772 li
369.187 136.394 li
370.213 135.798 li
396.848 151.176 li
395.822 151.772 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
340.66 151.777 mo
314.024 136.399 li
315.05 135.804 li
341.685 151.182 li
341.685 151.182 li
340.66 151.777 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
285.507 151.777 mo
285.507 151.777 li
258.863 136.394 li
259.887 135.798 li
286.532 151.182 li
285.507 151.777 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
230.337 151.777 mo
230.335 151.777 li
203.7 136.399 li
204.725 135.804 li
231.36 151.182 li
230.337 151.777 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
175.182 151.777 mo
148.546 136.399 li
149.57 135.804 li
176.207 151.182 li
175.182 151.777 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
120.019 151.772 mo
120.019 151.772 li
93.3837 136.395 li
94.4072 135.799 li
121.043 151.178 li
120.019 151.772 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
64.8573 151.778 mo
38.2207 136.4 li
39.2461 135.805 li
65.881 151.184 li
65.8799 151.184 li
64.8569 151.778 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
9.70314 151.778 mo
9.70314 151.778 li
0 146.176 li
0 144.99 li
10.7275 151.184 li
9.70314 151.778 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
67.833 407.686 mo
66.8027 407.091 li
93.7813 391.414 li
94.8047 390.816 li
121.277 375.433 li
122.302 374.837 li
148.764 359.459 li
149.788 358.863 li
176.25 343.485 li
177.285 342.885 li
203.746 327.506 li
204.772 326.911 li
231.234 311.534 li
232.26 310.938 li
258.73 295.555 li
258.731 295.554 li
258.731 295.555 li
259.756 294.958 li
286.217 279.581 li
287.242 278.984 li
313.712 263.603 li
313.712 263.602 li
313.713 263.603 li
314.737 263.008 li
341.2 247.628 li
342.225 247.033 li
368.686 231.655 li
368.687 231.655 li
368.688 231.655 li
369.712 231.06 li
396.183 215.676 li
397.207 215.081 li
423.67 199.702 li
424.694 199.106 li
450 184.4 li
450 185.595 li
425.725 199.702 li
424.7 200.298 li
398.237 215.676 li
397.214 216.27 li
370.743 231.655 li
369.718 232.25 li
343.256 247.628 li
342.232 248.224 li
315.768 263.603 li
314.744 264.197 li
314.744 264.198 li
288.272 279.581 li
287.248 280.177 li
260.786 295.555 li
259.762 296.149 li
233.289 311.534 li
232.265 312.129 li
205.803 327.506 li
204.778 328.103 li
178.317 343.48 li
177.282 344.082 li
150.82 359.459 li
149.795 360.054 li
123.333 375.433 li
122.31 376.028 li
95.8395 391.413 li
95.8369 391.411 li
94.8115 392.007 li
67.833 407.686 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
423.499 167.751 mo
423.499 167.751 li
396.864 152.372 li
397.889 151.777 li
424.523 167.155 li
423.499 167.751 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
368.327 167.751 mo
368.327 167.751 li
341.691 152.372 li
342.716 151.777 li
369.352 167.155 li
368.327 167.751 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
313.173 167.751 mo
286.539 152.372 li
287.562 151.777 li
314.198 167.155 li
313.173 167.751 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
258.012 167.757 mo
258.012 167.757 li
231.366 152.372 li
232.392 151.777 li
259.037 167.161 li
258.012 167.757 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
202.849 167.751 mo
202.849 167.751 li
176.214 152.372 li
177.238 151.777 li
203.874 167.155 li
202.849 167.751 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
147.693 167.751 mo
121.06 152.374 li
122.085 151.778 li
148.719 167.156 li
147.693 167.751 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
92.5234 167.751 mo
92.5234 167.751 li
65.8868 152.374 li
66.9121 151.778 li
93.5469 167.155 li
93.0846 167.424 li
92.5234 167.751 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
37.3705 167.752 mo
10.7344 152.374 li
11.7588 151.778 li
38.3945 167.156 li
37.3698 167.752 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 183.05 mo
424.531 168.346 li
425.557 167.751 li
450 181.863 li
450 183.05 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
396.003 183.73 mo
396.003 183.73 li
369.368 168.352 li
370.061 167.948 li
370.393 167.755 li
397.028 183.135 li
396.003 183.73 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
340.841 183.724 mo
340.841 183.724 li
314.205 168.346 li
315.228 167.751 li
341.865 183.129 li
340.841 183.724 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
285.678 183.73 mo
259.043 168.352 li
260.066 167.757 li
286.703 183.135 li
286.702 183.135 li
285.678 183.73 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
230.524 183.73 mo
230.524 183.73 li
203.881 168.346 li
204.904 167.751 li
231.549 183.135 li
230.524 183.73 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
175.362 183.726 mo
175.361 183.725 li
148.726 168.347 li
149.751 167.752 li
176.384 183.129 li
176.386 183.13 li
175.362 183.726 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
120.198 183.73 mo
93.5636 168.352 li
94.588 167.757 li
121.224 183.135 li
121.223 183.135 li
120.198 183.73 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
65.0361 183.724 mo
38.4014 168.347 li
39.4267 167.752 li
66.0605 183.129 li
65.0361 183.724 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
9.87303 183.731 mo
0 178.031 li
0 176.844 li
10.898 183.136 li
9.87277 183.731 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
423.67 199.702 mo
423.67 199.702 li
397.034 184.325 li
398.06 183.729 li
424.694 199.106 li
423.67 199.702 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
368.517 199.703 mo
368.517 199.703 li
341.882 184.325 li
342.905 183.73 li
369.542 199.108 li
368.517 199.703 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
313.344 199.703 mo
313.344 199.703 li
286.709 184.325 li
287.733 183.73 li
314.369 199.108 li
313.344 199.703 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
258.19 199.703 mo
231.556 184.325 li
232.58 183.73 li
259.215 199.108 li
258.19 199.703 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
203.038 199.703 mo
203.037 199.702 li
176.392 184.32 li
177.417 183.726 li
204.062 199.108 li
203.038 199.703 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
147.866 199.703 mo
147.865 199.702 li
121.231 184.325 li
122.254 183.73 li
148.89 199.108 li
147.866 199.703 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
92.7129 199.703 mo
66.0771 184.325 li
67.1015 183.73 li
93.7373 199.108 li
93.7364 199.108 li
92.7124 199.703 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
37.5396 199.703 mo
10.9043 184.326 li
11.9292 183.731 li
38.5635 199.109 li
37.5396 199.703 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
160.518 450 mo
158.442 450 li
176.79 439.338 li
177.814 438.742 li
204.287 423.358 li
204.288 423.358 li
204.288 423.358 li
205.313 422.763 li
205.312 422.762 li
231.773 407.385 li
232.799 406.79 li
259.259 391.411 li
259.26 391.411 li
259.261 391.411 li
260.295 390.81 li
286.757 375.433 li
287.781 374.837 li
314.243 359.459 li
314.244 359.459 li
314.244 359.459 li
315.269 358.863 li
341.739 343.48 li
342.765 342.885 li
369.227 327.506 li
370.251 326.911 li
396.722 311.528 li
397.747 310.932 li
424.209 295.555 li
424.209 295.554 li
424.21 295.555 li
425.235 294.958 li
425.234 294.957 li
450 280.566 li
450 281.772 li
426.275 295.56 li
425.249 296.155 li
398.787 311.534 li
397.764 312.129 li
371.291 327.512 li
370.266 328.108 li
343.805 343.485 li
342.78 344.082 li
316.309 359.465 li
315.283 360.06 li
288.821 375.438 li
287.798 376.033 li
261.335 391.411 li
260.301 392.013 li
233.838 407.391 li
232.813 407.986 li
206.353 423.364 li
205.327 423.959 li
178.856 439.344 li
177.831 439.938 li
160.518 450 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
258.91 327.512 mo
232.266 312.129 li
233.289 311.534 li
259.935 326.917 li
259.934 326.917 li
259.935 326.917 li
258.91 327.512 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
231.424 343.485 mo
204.778 328.103 li
205.803 327.506 li
232.448 342.891 li
232.447 342.891 li
231.423 343.485 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
203.927 359.465 mo
177.282 344.082 li
178.317 343.48 li
204.962 358.863 li
203.927 359.465 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
176.44 375.438 mo
149.795 360.054 li
150.82 359.459 li
177.464 374.843 li
177.463 374.843 li
176.44 375.438 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
95.5088 423.664 mo
94.4775 423.07 li
121.456 407.391 li
121.457 407.39 li
121.457 407.391 li
122.481 406.796 li
148.952 391.411 li
148.953 391.411 li
148.953 391.411 li
149.977 390.816 li
176.44 375.438 li
177.463 374.843 li
203.927 359.465 li
204.962 358.863 li
231.422 343.485 li
231.423 343.485 li
231.423 343.485 li
232.447 342.891 li
258.91 327.512 li
259.935 326.917 li
259.934 326.917 li
286.405 311.534 li
286.406 311.534 li
286.407 311.534 li
287.432 310.938 li
313.893 295.56 li
314.918 294.964 li
341.389 279.581 li
341.389 279.581 li
341.39 279.581 li
342.414 278.984 li
342.413 278.984 li
368.875 263.607 li
369.9 263.013 li
396.362 247.634 li
396.363 247.634 li
396.363 247.634 li
397.387 247.038 li
423.859 231.655 li
424.883 231.06 li
450 216.463 li
450 217.657 li
425.914 231.655 li
424.891 232.25 li
398.418 247.634 li
397.393 248.23 li
370.932 263.607 li
369.907 264.203 li
343.443 279.581 li
342.42 280.177 li
315.948 295.56 li
314.924 296.155 li
288.462 311.534 li
287.436 312.129 li
260.965 327.512 li
259.94 328.108 li
233.477 343.485 li
232.454 344.082 li
205.992 359.459 li
204.957 360.06 li
178.495 375.438 li
177.472 376.033 li
151.01 391.411 li
149.984 392.007 li
123.513 407.391 li
122.487 407.986 li
95.5088 423.664 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 214.905 mo
424.7 200.298 li
425.725 199.702 li
450 213.716 li
450 214.905 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
396.183 215.676 mo
396.183 215.676 li
369.549 200.298 li
370.571 199.703 li
397.208 215.08 li
396.183 215.676 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
285.858 215.677 mo
285.858 215.677 li
259.223 200.299 li
260.247 199.703 li
286.883 215.081 li
285.858 215.677 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
230.704 215.677 mo
204.068 200.299 li
205.094 199.703 li
231.729 215.081 li
231.727 215.081 li
230.704 215.676 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
175.542 215.683 mo
175.542 215.683 li
148.896 200.299 li
149.922 199.703 li
176.565 215.087 li
175.542 215.683 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
120.379 215.677 mo
120.379 215.677 li
93.7432 200.299 li
94.7676 199.703 li
121.404 215.081 li
120.379 215.677 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
65.2158 215.683 mo
38.5791 200.305 li
39.6046 199.709 li
66.2412 215.087 li
66.2402 215.087 li
65.2158 215.683 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
10.0532 215.678 mo
10.0532 215.678 li
0 209.874 li
0 208.687 li
11.0776 215.083 li
10.0532 215.678 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
215.67 450 mo
213.615 450 li
231.963 439.338 li
232.988 438.742 li
259.449 423.364 li
259.45 423.364 li
259.45 423.364 li
260.475 422.769 li
286.935 407.391 li
286.936 407.39 li
286.937 407.391 li
287.972 406.79 li
287.971 406.789 li
314.433 391.411 li
315.457 390.816 li
341.92 375.438 li
342.943 374.843 li
369.416 359.458 li
369.417 359.458 li
369.417 359.458 li
369.971 359.135 li
370.439 358.863 li
396.901 343.485 li
396.902 343.485 li
396.902 343.485 li
397.928 342.889 li
424.398 327.506 li
424.398 327.506 li
424.398 327.506 li
425.422 326.911 li
450 312.627 li
450 313.822 li
426.454 327.506 li
425.428 328.103 li
398.959 343.485 li
397.934 344.079 li
371.472 359.458 li
370.446 360.053 li
370.447 360.053 li
370.446 360.054 li
343.975 375.438 li
342.95 376.032 li
342.949 376.033 li
316.488 391.411 li
315.464 392.007 li
289.001 407.385 li
287.967 407.986 li
261.504 423.364 li
260.48 423.959 li
234.019 439.338 li
232.993 439.933 li
215.67 450 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
423.859 231.655 mo
423.859 231.655 li
397.215 216.27 li
398.237 215.676 li
424.883 231.06 li
423.859 231.655 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
368.688 231.655 mo
368.688 231.655 li
342.052 216.276 li
343.076 215.682 li
369.712 231.06 li
368.688 231.655 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
258.37 231.65 mo
258.37 231.65 li
231.734 216.272 li
232.76 215.677 li
259.396 231.055 li
258.37 231.65 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
203.207 231.656 mo
176.572 216.278 li
177.598 215.683 li
204.232 231.06 li
203.207 231.656 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
148.055 231.656 mo
148.055 231.656 li
121.41 216.272 li
122.435 215.677 li
149.08 231.06 li
148.055 231.656 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
92.8819 231.656 mo
92.8819 231.656 li
66.248 216.278 li
67.2705 215.683 li
93.9072 231.06 li
92.8819 231.656 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
37.729 231.656 mo
11.0938 216.278 li
12.1187 215.684 li
38.7528 231.06 li
37.7285 231.656 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
270.824 450 mo
268.769 450 li
287.116 439.338 li
287.117 439.338 li
287.117 439.338 li
288.142 438.742 li
314.602 423.364 li
315.638 422.763 li
342.1 407.385 li
343.124 406.79 li
369.586 391.411 li
370.611 390.816 li
397.082 375.433 li
397.768 375.034 li
398.108 374.836 li
424.568 359.458 li
424.569 359.458 li
424.569 359.458 li
425.594 358.863 li
450 344.679 li
450 345.875 li
426.625 359.458 li
425.601 360.054 li
399.139 375.432 li
399.138 375.431 li
398.113 376.026 li
371.641 391.411 li
370.617 392.007 li
344.155 407.385 li
343.13 407.981 li
316.668 423.358 li
315.634 423.959 li
289.171 439.338 li
288.147 439.933 li
270.824 450 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 246.747 mo
424.891 232.25 li
425.914 231.655 li
450 245.562 li
450 246.747 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
396.363 247.634 mo
396.363 247.634 li
369.718 232.25 li
370.743 231.655 li
397.387 247.038 li
396.363 247.634 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
341.2 247.628 mo
341.2 247.628 li
314.566 232.25 li
314.723 232.159 li
315.59 231.655 li
342.225 247.033 li
341.2 247.628 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
230.876 247.63 mo
230.875 247.629 li
204.239 232.251 li
205.264 231.656 li
231.899 247.034 li
230.876 247.63 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
175.722 247.63 mo
149.087 232.251 li
150.111 231.656 li
176.746 247.034 li
175.721 247.63 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
120.559 247.635 mo
120.559 247.635 li
93.914 232.251 li
94.9395 231.656 li
121.582 247.04 li
120.559 247.635 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
65.3965 247.63 mo
65.3965 247.63 li
38.7608 232.251 li
39.7852 231.656 li
66.4198 247.034 li
65.3965 247.63 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
10.2324 247.635 mo
0 241.727 li
0 240.529 li
11.2671 247.034 li
11.2666 247.034 li
10.2321 247.635 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
424.03 263.607 mo
397.395 248.23 li
398.418 247.634 li
425.055 263.013 li
424.03 263.607 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
368.875 263.607 mo
368.875 263.607 li
342.232 248.224 li
343.256 247.628 li
369.9 263.013 li
368.875 263.607 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
313.713 263.603 mo
313.713 263.603 li
287.078 248.225 li
288.102 247.63 li
314.737 263.008 li
313.713 263.603 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
203.388 263.603 mo
203.388 263.603 li
176.753 248.225 li
177.778 247.63 li
204.413 263.008 li
203.388 263.603 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
148.225 263.608 mo
121.59 248.23 li
122.614 247.635 li
149.249 263.014 li
148.225 263.608 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
93.0713 263.608 mo
93.0713 263.608 li
66.4258 248.225 li
67.4512 247.63 li
94.0968 263.014 li
93.0713 263.608 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
37.8994 263.608 mo
37.8994 263.608 li
11.2636 248.23 li
12.298 247.63 li
38.9336 263.008 li
37.8994 263.608 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 278.602 mo
425.062 264.203 li
426.084 263.607 li
450 277.414 li
450 278.602 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
396.543 279.581 mo
369.907 264.203 li
370.932 263.607 li
397.567 278.984 li
396.543 279.581 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
341.39 279.581 mo
341.39 279.581 li
314.744 264.197 li
315.768 263.603 li
342.413 278.984 li
342.414 278.984 li
341.39 279.581 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
286.217 279.581 mo
286.217 279.581 li
259.582 264.203 li
260.606 263.608 li
287.242 278.984 li
286.217 279.581 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
175.892 279.582 mo
175.892 279.582 li
149.256 264.204 li
150.28 263.608 li
176.916 278.987 li
175.892 279.582 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
120.738 279.582 mo
94.1035 264.204 li
95.127 263.608 li
121.763 278.987 li
121.762 278.987 li
120.738 279.582 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
65.5762 279.588 mo
65.5752 279.587 li
38.9307 264.204 li
39.9658 263.603 li
66.6103 278.987 li
65.5762 279.588 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
10.4126 279.582 mo
10.4126 279.582 li
0 273.57 li
0 272.384 li
11.437 278.987 li
10.4126 279.582 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
424.21 295.555 mo
424.21 295.555 li
397.573 280.177 li
398.599 279.581 li
425.234 294.957 li
425.235 294.958 li
424.21 295.555 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
369.056 295.555 mo
342.42 280.177 li
343.444 279.581 li
370.081 294.958 li
370.08 294.958 li
369.056 295.555 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
313.893 295.56 mo
313.893 295.56 li
287.248 280.177 li
288.272 279.581 li
314.918 294.964 li
313.893 295.56 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
258.731 295.555 mo
258.731 295.555 li
232.096 280.177 li
233.12 279.581 li
259.756 294.958 li
258.731 295.555 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
148.405 295.556 mo
148.405 295.556 li
121.769 280.178 li
122.794 279.582 li
149.429 294.96 li
148.405 295.556 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
93.2412 295.561 mo
66.6064 280.184 li
67.6406 279.582 li
94.2764 294.96 li
94.2754 294.96 li
93.2412 295.561 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
38.0888 295.561 mo
38.0888 295.561 li
11.4439 280.178 li
12.4688 279.582 li
39.1123 294.966 li
38.0888 295.561 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 310.443 mo
425.251 296.155 li
426.275 295.56 li
450 309.256 li
450 310.443 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
396.722 311.528 mo
396.722 311.528 li
370.087 296.149 li
371.11 295.555 li
397.747 310.932 li
396.722 311.528 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
341.56 311.534 mo
314.925 296.155 li
315.948 295.56 li
342.585 310.938 li
342.584 310.938 li
341.56 311.534 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
286.407 311.534 mo
286.406 311.534 li
259.762 296.149 li
260.786 295.555 li
287.432 310.938 li
286.407 311.534 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
231.234 311.534 mo
231.234 311.534 li
204.6 296.156 li
205.623 295.561 li
232.26 310.938 li
231.234 311.534 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
120.909 311.535 mo
120.909 311.535 li
94.2725 296.156 li
95.3076 295.556 li
121.943 310.934 li
120.909 311.535 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
65.7549 311.535 mo
39.1183 296.156 li
40.1436 295.561 li
66.7793 310.94 li
65.7549 311.535 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
10.6022 311.535 mo
10.6022 311.535 li
0 305.414 li
0 304.227 li
11.627 310.94 li
10.6022 311.535 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
424.398 327.506 mo
424.398 327.506 li
397.764 312.129 li
398.787 311.534 li
425.422 326.911 li
424.398 327.506 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
369.227 327.506 mo
369.227 327.506 li
342.591 312.129 li
343.616 311.534 li
370.251 326.911 li
369.227 327.506 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
314.073 327.506 mo
287.438 312.129 li
288.462 311.534 li
315.099 326.911 li
314.073 327.506 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
203.746 327.506 mo
203.746 327.506 li
177.111 312.13 li
178.137 311.535 li
204.772 326.911 li
203.746 327.506 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
93.4209 327.509 mo
93.4209 327.509 li
66.7871 312.13 li
67.8115 311.535 li
94.4463 326.913 li
93.4209 327.509 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
38.2686 327.509 mo
11.6333 312.13 li
12.6577 311.535 li
39.292 326.913 li
38.2686 327.509 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 342.288 mo
425.428 328.103 li
426.454 327.506 li
450 341.101 li
450 342.288 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
396.902 343.485 mo
396.902 343.485 li
370.268 328.108 li
371.291 327.512 li
397.928 342.889 li
396.902 343.485 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
341.739 343.48 mo
341.739 343.48 li
315.105 328.103 li
316.129 327.506 li
342.765 342.885 li
341.739 343.48 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
286.577 343.485 mo
259.941 328.108 li
260.966 327.512 li
287.601 342.891 li
286.577 343.485 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
176.25 343.485 mo
176.25 343.485 li
149.616 328.109 li
150.651 327.509 li
177.285 342.885 li
176.25 343.485 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
65.9355 343.481 mo
65.9355 343.481 li
39.2998 328.103 li
40.3242 327.509 li
66.96 342.887 li
65.9355 343.481 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
10.7721 343.487 mo
0 337.268 li
0 336.081 li
11.7965 342.893 li
11.7959 342.893 li
10.7715 343.487 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
424.569 359.458 mo
424.569 359.458 li
397.934 344.079 li
398.959 343.485 li
425.594 358.863 li
424.569 359.458 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
369.417 359.458 mo
369.417 359.458 li
342.78 344.082 li
343.806 343.485 li
370.44 358.862 li
369.971 359.135 li
369.417 359.458 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
314.244 359.459 mo
314.244 359.459 li
287.608 344.082 li
288.633 343.485 li
315.269 358.863 li
314.244 359.459 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
259.09 359.459 mo
232.454 344.082 li
233.479 343.485 li
260.115 358.863 li
259.09 359.459 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
148.764 359.459 mo
148.764 359.459 li
122.129 344.083 li
123.154 343.487 li
149.788 358.863 li
148.764 359.459 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
38.4385 359.461 mo
38.4385 359.461 li
11.8027 344.083 li
12.8271 343.487 li
39.4629 358.866 li
39.4639 358.866 li
38.4385 359.461 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
397.083 375.431 mo
370.447 360.053 li
370.446 360.053 li
371.472 359.458 li
398.108 374.836 li
397.768 375.034 li
397.083 375.431 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
450 374.142 mo
425.601 360.054 li
426.625 359.458 li
450 372.954 li
450 374.142 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
341.92 375.438 mo
341.92 375.438 li
315.284 360.06 li
316.309 359.465 li
342.943 374.843 li
341.92 375.438 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
286.757 375.433 mo
286.757 375.433 li
260.121 360.054 li
261.146 359.459 li
287.781 374.837 li
286.757 375.433 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
231.594 375.438 mo
204.958 360.06 li
205.992 359.459 li
232.629 374.837 li
232.628 374.837 li
231.594 375.438 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
121.277 375.433 mo
121.277 375.433 li
94.6426 360.057 li
95.668 359.461 li
122.302 374.837 li
121.277 375.433 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
369.586 391.411 mo
369.586 391.411 li
342.95 376.032 li
343.975 375.438 li
370.611 390.816 li
369.586 391.411 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
425.269 391.706 mo
398.113 376.026 li
399.138 375.431 li
399.139 375.432 li
426.294 391.11 li
425.269 391.706 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
314.433 391.411 mo
314.433 391.411 li
287.798 376.033 li
288.821 375.438 li
315.457 390.816 li
314.433 391.411 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
259.261 391.411 mo
259.26 391.411 li
232.625 376.033 li
233.66 375.433 li
260.295 390.81 li
259.261 391.411 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
204.107 391.411 mo
177.472 376.033 li
178.495 375.438 li
205.132 390.816 li
204.107 391.411 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
148.953 391.411 mo
148.953 391.411 li
122.31 376.028 li
123.334 375.433 li
149.977 390.816 li
148.953 391.411 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
342.1 407.385 mo
342.1 407.385 li
315.464 392.007 li
316.488 391.411 li
343.124 406.79 li
342.1 407.385 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
397.772 407.685 mo
370.618 392.007 li
371.642 391.411 li
398.798 407.09 li
397.772 407.685 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
286.937 407.391 mo
286.937 407.391 li
260.301 392.013 li
261.335 391.411 li
287.971 406.789 li
287.972 406.79 li
286.937 407.391 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
231.773 407.385 mo
231.773 407.385 li
205.138 392.007 li
206.162 391.411 li
232.799 406.79 li
231.773 407.385 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
176.621 407.385 mo
149.984 392.007 li
151.01 391.411 li
177.644 406.79 li
176.621 407.385 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
121.457 407.391 mo
121.457 407.391 li
94.8115 392.007 li
95.8369 391.411 li
95.8395 391.413 li
122.481 406.796 li
121.457 407.391 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
314.602 423.364 mo
314.602 423.364 li
287.967 407.986 li
289.001 407.385 li
315.638 422.763 li
314.602 423.364 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
370.287 423.658 mo
343.131 407.981 li
344.155 407.385 li
371.31 423.063 li
370.287 423.658 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
259.45 423.364 mo
259.45 423.364 li
232.815 407.986 li
233.839 407.391 li
260.475 422.769 li
259.45 423.364 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
204.288 423.358 mo
204.288 423.358 li
177.65 407.981 li
178.676 407.385 li
205.312 422.762 li
205.313 422.763 li
204.288 423.358 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
149.124 423.364 mo
122.487 407.986 li
123.513 407.391 li
150.148 422.769 li
149.124 423.364 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
287.117 439.338 mo
287.117 439.338 li
260.481 423.959 li
261.505 423.364 li
288.142 438.742 li
287.117 439.338 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
342.79 439.638 mo
315.635 423.959 li
316.668 423.358 li
343.824 439.036 li
342.79 439.638 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
231.963 439.338 mo
231.963 439.338 li
205.328 423.959 li
206.353 423.364 li
232.988 438.742 li
231.963 439.338 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
176.79 439.338 mo
176.79 439.338 li
150.155 423.959 li
151.18 423.364 li
177.814 438.742 li
176.79 439.338 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
123.176 439.639 mo
122.145 439.044 li
149.124 423.364 li
150.148 422.769 li
176.621 407.385 li
177.644 406.79 li
204.107 391.411 li
205.132 390.816 li
231.593 375.438 li
231.594 375.438 li
232.628 374.837 li
259.09 359.459 li
260.115 358.863 li
286.577 343.485 li
287.601 342.891 li
314.073 327.506 li
315.099 326.911 li
341.56 311.534 li
341.56 311.534 li
342.584 310.938 li
369.056 295.555 li
370.08 294.958 li
396.543 279.581 li
397.567 278.984 li
424.029 263.607 li
424.03 263.607 li
425.055 263.013 li
450 248.515 li
450 249.709 li
426.084 263.607 li
425.062 264.203 li
398.599 279.581 li
397.573 280.177 li
371.11 295.555 li
370.087 296.149 li
343.616 311.534 li
342.591 312.129 li
316.129 327.506 li
315.105 328.103 li
288.632 343.485 li
287.608 344.082 li
261.146 359.459 li
260.121 360.054 li
233.66 375.433 li
232.625 376.033 li
206.162 391.411 li
205.138 392.007 li
178.676 407.385 li
177.65 407.981 li
151.18 423.364 li
150.155 423.959 li
123.176 439.639 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
252.486 450 mo
250.431 450 li
232.994 439.933 li
234.019 439.338 li
252.486 450 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
307.64 450 mo
305.584 450 li
288.147 439.933 li
289.172 439.338 li
307.64 450 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
197.313 450 mo
195.258 450 li
177.831 439.938 li
178.856 439.344 li
197.313 450 li
level3{
gsave
clp
[272.526 0 0 272.526 217.385 255.207 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[272.526 0 0 272.526 217.385 255.207 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
grestore
306.204 118.743 mo
306.205 119.396 305.775 120.05 304.917 120.546 cv
296.035 125.673 li
296.029 123.64 li
296.029 123.299 295.812 122.961 295.396 122.688 cv
298.499 120.896 li
298.841 120.699 299.012 120.438 299.011 120.176 cv
298.999 116.003 li
298.998 115.746 298.831 115.489 298.495 115.293 cv
264.004 95.2495 li
263.327 94.8552 262.214 94.8581 261.537 95.2495 cv
253.345 99.9782 li
253.342 99.3768 253.341 98.7825 253.339 98.2639 cv
253.339 98.1211 253.245 97.9782 253.059 97.8696 cv
252.678 97.6482 252.063 97.6482 251.686 97.8667 cv
245.83 101.248 li
245.637 101.36 245.54 101.505 245.54 101.65 cv
245.549 104.48 li
241.277 106.946 li
240.935 107.144 240.763 107.404 240.763 107.666 cv
240.77 110.161 li
237.139 108.051 li
236.297 107.561 235.876 106.919 235.873 106.273 cv
235.877 107.664 235.882 109.056 235.886 110.447 cv
235.887 111.091 236.309 111.736 237.15 112.224 cv
278.633 136.332 li
280.332 137.319 283.11 137.317 284.815 136.332 cv
304.93 124.72 li
305.788 124.225 306.217 123.57 306.215 122.916 cv
306.211 121.525 306.207 120.135 306.204 118.743 cv
cp
.0313726 .172549 .266667 rgb
f
298.495 115.293 mo
264.004 95.2495 li
263.327 94.8552 262.214 94.8581 261.537 95.2495 cv
241.277 106.946 li
240.596 107.339 240.592 107.981 241.269 108.374 cv
275.761 128.419 li
276.439 128.812 277.546 128.812 278.229 128.419 cv
298.488 116.723 li
299.164 116.332 299.172 115.687 298.495 115.293 cv
cp
.984314 .670588 .12549 rgb
f
271.35 107.407 mo
269.833 106.514 li
264.894 110.786 li
266.141 111.521 li
271.35 107.407 li
cp
261.234 110.033 mo
268.073 104.09 li
279.709 110.911 li
280.549 111.454 280.734 112.367 280.157 113.217 cv
279.923 113.573 279.569 113.89 279.132 114.143 cv
278.189 114.682 277.024 114.87 276.061 114.652 cv
274.566 114.317 273.967 113.126 274.731 111.996 cv
274.973 111.639 275.341 111.317 275.783 111.062 cv
276.104 110.876 276.466 110.726 276.843 110.626 cv
272.2 107.9 li
267.037 112.041 li
273.333 115.733 li
274.177 116.272 274.358 117.189 273.781 118.039 cv
273.541 118.397 273.173 118.723 272.724 118.982 cv
271.817 119.499 270.648 119.69 269.685 119.472 cv
268.193 119.136 267.59 117.942 268.36 116.814 cv
268.601 116.457 268.968 116.136 269.408 115.882 cv
269.731 115.696 270.091 115.546 270.471 115.445 cv
261.234 110.033 li
cp
1 1 1 rgb
f
291.728 122.619 mo
292.718 122.048 294.313 122.045 295.298 122.616 cv
296.282 123.189 296.271 124.113 295.281 124.685 cv
291.635 126.791 li
290.643 127.362 289.047 127.365 288.065 126.793 cv
287.08 126.222 287.09 125.296 288.08 124.725 cv
291.728 122.619 li
cp
.972549 .976471 .988235 rgb
f
245.83 101.248 mo
245.446 101.47 245.445 101.825 245.825 102.047 cv
246.201 102.264 246.815 102.264 247.199 102.044 cv
253.055 98.6625 li
253.432 98.4439 253.435 98.0882 253.059 97.8696 cv
252.678 97.6482 252.063 97.6482 251.686 97.8667 cv
245.83 101.248 li
cp
295.281 124.685 mo
296.271 124.113 296.282 123.189 295.298 122.616 cv
294.313 122.045 292.718 122.048 291.728 122.619 cv
288.08 124.725 li
287.09 125.296 287.08 126.222 288.065 126.793 cv
289.047 127.365 290.643 127.362 291.635 126.791 cv
295.281 124.685 li
cp
298.495 115.293 mo
264.004 95.2495 li
263.327 94.8552 262.214 94.8581 261.537 95.2495 cv
241.277 106.946 li
240.596 107.339 240.592 107.981 241.269 108.374 cv
275.761 128.419 li
276.439 128.812 277.546 128.812 278.229 128.419 cv
298.488 116.723 li
299.164 116.332 299.172 115.687 298.495 115.293 cv
cp
257.272 92.8581 mo
258.977 91.8737 261.759 91.8737 263.454 92.8581 cv
304.938 116.965 li
306.635 117.952 306.622 119.562 304.917 120.546 cv
284.803 132.159 li
283.099 133.144 280.32 133.145 278.621 132.158 cv
237.139 108.051 li
235.444 107.067 235.453 105.454 237.157 104.47 cv
257.272 92.8581 li
cp
.0627451 .215686 .345098 rgb
f
251.686 97.8667 mo
252.063 97.6482 252.678 97.6482 253.059 97.8696 cv
253.435 98.0882 253.432 98.4439 253.055 98.6625 cv
247.199 102.044 li
246.815 102.264 246.201 102.264 245.825 102.047 cv
245.445 101.825 245.446 101.47 245.83 101.248 cv
251.686 97.8667 li
cp
.972549 .976471 .988235 rgb
f
235.629 248.171 mo
207.56 250.829 li
208.782 232.67 li
235.629 248.171 li
cp
.819608 .862745 .901961 rgb
f
207.56 250.829 mo
206.338 250.944 li
208.782 232.67 li
207.56 250.829 li
cp
.670588 .745098 .811765 rgb
f
235.629 248.171 mo
207.534 251.21 li
207.56 250.829 li
235.629 248.171 li
cp
f
207.534 251.21 mo
206.284 251.346 li
206.338 250.944 li
207.56 250.829 li
207.534 251.21 li
cp
.54902 .643137 .733333 rgb
f
207.534 251.21 mo
207.321 254.375 li
201.86 254.509 li
202.089 253.785 li
205.983 253.602 li
206.284 251.346 li
207.534 251.21 li
cp
.760784 .811765 .854902 rgb
f
202.089 253.785 mo
201.86 254.509 li
201.201 254.526 li
201.396 253.818 li
202.089 253.785 li
cp
.54902 .643137 .733333 rgb
f
201.396 253.818 mo
201.201 254.526 li
169.851 255.294 li
201.396 253.818 li
cp
.670588 .745098 .811765 rgb
f
208.782 232.67 mo
206.338 250.944 li
206.284 251.346 li
205.983 253.602 li
202.089 253.785 li
201.396 253.818 li
169.851 255.294 li
208.782 232.67 li
cp
.996078 .996078 1 rgb
f
201.201 254.526 mo
201.86 254.509 li
196.7 270.795 li
201.201 254.526 li
cp
.670588 .745098 .811765 rgb
f
235.629 248.171 mo
196.7 270.795 li
201.86 254.509 li
207.321 254.375 li
207.534 251.21 li
235.629 248.171 li
cp
.929412 .941176 .94902 rgb
f
235.629 248.171 mo
235.622 250.572 li
196.693 273.195 li
196.7 270.795 li
235.629 248.171 li
cp
.658824 .741176 .8 rgb
f
196.7 270.795 mo
196.693 273.195 li
169.844 257.695 li
169.851 255.294 li
196.7 270.795 li
cp
f
169.851 255.294 mo
201.201 254.526 li
196.7 270.795 li
169.851 255.294 li
cp
.819608 .862745 .901961 rgb
f
88.6656 21.6921 mo
90.5034 22.7581 li
70.554 34.2768 li
70.6163 57.1976 li
68.7786 56.1296 li
68.7143 33.2091 li
88.6656 21.6921 li
cp
.321569 .556863 .533333 rgb
f
79.7702 36.9137 mo
78.3662 37.7243 77.1041 39.5744 76.7936 41.3949 cv
76.4376 43.5024 77.4883 44.7738 79.1353 44.2376 cv
79.3583 44.1664 79.5791 44.0661 79.7957 43.9404 cv
81.2009 43.1275 82.4642 41.2777 82.7735 39.4559 cv
83.1295 37.3487 82.0805 36.0779 80.4283 36.6164 cv
80.2049 36.6877 79.987 36.7879 79.7702 36.9137 cv
cp
.537255 .776471 .756863 rgb
f
79.1353 44.2376 mo
79.3583 44.1664 79.5791 44.0661 79.7957 43.9404 cv
81.2009 43.1275 82.4642 41.2777 82.7735 39.4559 cv
83.1295 37.3487 82.0805 36.0779 80.4283 36.6164 cv
80.2049 36.6877 79.987 36.7879 79.7702 36.9137 cv
78.3662 37.7243 77.1041 39.5744 76.7936 41.3949 cv
76.4376 43.5024 77.4883 44.7738 79.1353 44.2376 cv
cp
72.3773 41.8567 mo
72.4041 41.7025 72.5005 41.5514 72.6487 41.4707 cv
74.5825 40.3406 li
74.818 39.6721 75.1159 39.0131 75.4565 38.3843 cv
74.7941 36.6749 li
74.7256 36.5942 74.7674 36.4072 74.883 36.2549 cv
76.2792 34.4149 li
76.4248 34.282 li
76.6074 34.2865 li
77.9886 35.0547 li
78.4752 34.5913 78.9821 34.1938 79.503 33.8695 cv
80.3166 31.3789 li
80.3407 31.2479 80.4406 31.1137 80.5546 31.0493 cv
80.6075 31.0242 li
82.2323 30.4984 li
82.3692 30.453 82.4567 30.5408 82.4329 30.6934 cv
82.4502 32.9093 li
82.913 32.9165 83.3388 33.0157 83.7138 33.1912 cv
85.5284 31.3844 li
85.6397 31.2854 li
85.8517 31.305 li
86.7534 32.394 li
86.8246 32.4861 86.8057 32.6705 86.7005 32.8071 cv
85.3445 35.1697 li
85.5042 35.639 85.5992 36.1684 85.6195 36.7546 cv
87.3785 36.6821 li
87.4951 36.6488 87.5712 36.7536 87.5383 36.9297 cv
87.1898 39 li
87.1633 39.1492 87.0666 39.3001 86.921 39.3814 cv
84.9846 40.5121 li
84.7501 41.1787 84.4512 41.8394 84.1116 42.4671 cv
84.7746 44.1765 li
84.8403 44.2585 84.7997 44.4447 84.6835 44.5984 cv
83.2892 46.4372 li
83.1419 46.5698 li
82.9571 46.5688 li
81.5798 45.7977 li
81.0919 46.2598 80.5837 46.6577 80.0641 46.9872 cv
79.2509 49.4729 li
79.2264 49.6 79.1317 49.7329 79.0226 49.7965 cv
78.9553 49.826 li
77.337 50.3531 li
77.1979 50.3998 77.112 50.3119 77.1358 50.1584 cv
77.1169 47.9424 li
76.6531 47.9376 76.2283 47.8364 75.8546 47.661 cv
74.0374 49.4661 li
73.927 49.5653 li
73.7171 49.5457 li
72.8173 48.4562 li
72.7398 48.3684 72.7614 48.1812 72.8653 48.0503 cv
74.2223 45.6824 li
74.0629 45.2135 73.9705 44.6834 73.9424 44.1004 cv
72.1889 44.1684 li
72.072 44.2029 71.9962 44.0981 72.0289 43.9211 cv
72.3773 41.8567 li
cp
1 1 1 rgb
f
72.1889 44.1684 mo
73.9424 44.1004 li
73.9705 44.6834 74.0629 45.2135 74.2223 45.6824 cv
72.8653 48.0503 li
72.7614 48.1812 72.7398 48.3684 72.8173 48.4562 cv
73.7171 49.5457 li
73.927 49.5653 li
74.0374 49.4661 li
75.8546 47.661 li
76.2283 47.8364 76.6531 47.9376 77.1169 47.9424 cv
77.1358 50.1584 li
77.112 50.3119 77.1979 50.3998 77.337 50.3531 cv
78.9553 49.826 li
79.0226 49.7965 li
79.1317 49.7329 79.2264 49.6 79.2509 49.4729 cv
80.0641 46.9872 li
80.5837 46.6577 81.0919 46.2598 81.5798 45.7977 cv
82.9571 46.5688 li
83.1419 46.5698 li
83.2892 46.4372 li
84.6835 44.5984 li
84.7997 44.4447 84.8403 44.2585 84.7746 44.1765 cv
84.1116 42.4671 li
84.4512 41.8394 84.7501 41.1787 84.9846 40.5121 cv
86.9628 39.3602 li
87.0666 39.3001 87.1633 39.1492 87.1898 39 cv
87.5383 36.9297 li
87.5712 36.7536 87.4951 36.6488 87.3785 36.6821 cv
85.6195 36.7546 li
85.5992 36.1684 85.5042 35.639 85.3445 35.1697 cv
86.7005 32.8071 li
86.8057 32.6705 86.8246 32.4861 86.7534 32.394 cv
85.8517 31.305 li
85.6397 31.2854 li
85.5284 31.3844 li
83.7138 33.1912 li
83.3388 33.0157 82.913 32.9165 82.4502 32.9093 cv
82.4329 30.6934 li
82.4567 30.5408 82.3692 30.453 82.2323 30.4984 cv
80.6075 31.0242 li
80.5546 31.0493 li
80.4406 31.1137 80.3407 31.2479 80.3166 31.3789 cv
79.503 33.8695 li
78.9821 34.1938 78.4752 34.5913 77.9886 35.0547 cv
76.6074 34.2865 li
76.4248 34.282 li
76.2792 34.4149 li
74.883 36.2549 li
74.7674 36.4072 74.7256 36.5942 74.7941 36.6749 cv
75.4565 38.3843 li
75.1159 39.0131 74.818 39.6721 74.5825 40.3406 cv
72.6053 41.4903 li
72.5005 41.5514 72.4041 41.7025 72.3773 41.8567 cv
72.0289 43.9211 li
71.9962 44.0981 72.072 44.2029 72.1889 44.1684 cv
cp
90.5677 45.6789 mo
70.6163 57.1976 li
70.554 34.2768 li
90.5034 22.7581 li
90.5677 45.6789 li
cp
.537255 .776471 .756863 rgb
f
21.269 102.286 mo
18.6555 100.769 li
18.5629 68.1723 li
21.1764 69.6905 li
21.269 102.286 li
cp
.827451 .513726 .0509804 rgb
f
21.1764 69.6905 mo
18.5629 68.1723 li
46.9308 51.794 li
49.5452 53.3128 li
21.1764 69.6905 li
cp
f
49.5452 53.3128 mo
49.6369 85.9093 li
21.269 102.286 li
21.1764 69.6905 li
49.5452 53.3128 li
cp
.984314 .670588 .12549 rgb
f
43.8218 71.7062 mo
44.0061 71.5993 44.1541 71.6847 44.1541 71.8967 cv
44.156 72.9504 li
44.156 73.16 44.0118 73.4164 43.8256 73.5219 cv
42.9071 74.0518 li
42.7256 74.1578 42.5767 74.0733 42.5767 73.8618 cv
42.5738 72.8096 li
42.5738 72.5976 42.7199 72.3422 42.9061 72.2362 cv
43.8218 71.7062 li
cp
1 1 1 rgb
f
38.9644 68.7576 mo
39.0561 68.7055 39.1459 68.6827 39.228 68.7008 cv
39.4457 68.7443 39.5068 69.044 39.3588 69.3812 cv
36.203 76.6362 li
36.2392 76.7311 36.2641 76.8457 36.2641 76.9818 cv
36.2641 77.5055 35.9643 78.1153 35.5441 78.5 cv
36.9315 84.9377 li
36.8533 85.1325 li
36.7253 85.1124 li
35.3388 78.6686 li
35.2558 78.7302 li
34.9416 78.9106 34.658 78.8978 34.4738 78.7449 cv
31.9586 80.1954 li
31.6092 80.3978 31.3246 80.2355 31.3208 79.8345 cv
31.3208 79.4344 31.6054 78.9431 31.9548 78.7406 cv
34.468 77.2912 li
34.6503 76.9192 34.9359 76.5855 35.2472 76.4032 cv
35.4916 76.3048 li
38.571 69.2303 li
38.6618 69.0197 38.8126 68.8464 38.9644 68.7576 cv
cp
f
27.6827 81.2481 mo
27.8652 81.1435 28.0217 81.2233 28.0217 81.4348 cv
28.0255 82.4808 li
28.0255 82.6918 27.8718 82.9578 27.6885 83.0628 cv
26.7756 83.5899 li
26.5923 83.6959 26.4396 83.608 26.4396 83.397 cv
26.4358 82.351 li
26.4358 82.1395 26.5885 81.8812 26.7728 81.7752 cv
27.6827 81.2481 li
cp
f
35.6062 66.7667 mo
35.7904 66.6607 35.9366 66.7467 35.9394 66.9568 cv
35.9404 68.0104 li
35.9413 68.2205 35.7934 68.4764 35.6109 68.5815 cv
34.6943 69.1124 li
34.5109 69.2174 34.363 69.1333 34.361 68.9213 cv
34.3592 67.8677 li
34.3572 67.658 34.5062 67.4026 34.6876 67.2967 cv
35.6062 66.7667 li
cp
f
35.2835 89.1777 mo
29.7701 92.3613 25.2832 89.8042 25.2651 83.4614 cv
25.2469 77.1241 29.7052 69.405 35.2195 66.2215 cv
40.7328 63.038 45.2226 65.5951 45.2369 71.9301 cv
45.255 78.2713 40.7959 85.9948 35.2835 89.1777 cv
cp
35.2137 64.5008 mo
28.8725 68.1623 23.7487 77.0386 23.7688 84.3251 cv
23.7888 91.6193 28.947 94.5608 35.2891 90.8979 cv
41.6304 87.2356 46.7541 78.3606 46.7351 71.0665 cv
46.714 63.7795 41.5559 60.8399 35.2137 64.5008 cv
cp
f
35.6616 86.0864 mo
35.8449 85.9809 35.9938 86.0649 35.9938 86.2768 cv
35.9967 87.3243 li
35.9967 87.5406 35.8487 87.7961 35.6664 87.902 cv
34.7487 88.432 li
34.5664 88.538 34.4183 88.4516 34.4183 88.2358 cv
34.4127 87.1883 li
34.4127 86.9787 34.5606 86.7228 34.7421 86.6163 cv
35.6616 86.0864 li
cp
f
360.148 19.5366 mo
361.942 19.5366 362.618 17.7123 362.618 14.81 cv
362.618 10.9389 361.691 9.97695 360.148 9.97695 cv
356.985 9.97695 li
356.985 19.5366 li
360.148 19.5366 li
cp
354.218 7.53655 mo
360.366 7.53655 li
364.53 7.53655 365.385 11.2455 365.385 14.8295 cv
365.385 19.0893 363.897 22.0043 360.366 22.0043 cv
354.218 22.0043 li
354.218 7.53655 li
cp
.996078 .996078 1 rgb
f
373.985 16.3461 mo
372.36 11.183 li
370.62 16.3461 li
373.985 16.3461 li
cp
370.767 7.53655 mo
373.916 7.53655 li
378.614 22.0043 li
375.668 22.0043 li
374.64 18.7983 li
369.902 18.7983 li
368.858 22.0043 li
365.885 22.0043 li
370.767 7.53655 li
cp
f
377.631 7.53655 mo
388.325 7.53655 li
388.325 10.0864 li
384.302 10.0864 li
384.302 22.0043 li
381.536 22.0043 li
381.536 10.0864 li
377.631 10.0864 li
377.631 7.53655 li
cp
f
395.234 16.3461 mo
393.609 11.183 li
391.87 16.3461 li
395.234 16.3461 li
cp
392.016 7.53655 mo
395.165 7.53655 li
399.863 22.0043 li
396.917 22.0043 li
395.889 18.7983 li
391.151 18.7983 li
390.107 22.0043 li
387.134 22.0043 li
392.016 7.53655 li
cp
f
361.789 40.0678 mo
360.163 34.9047 li
358.423 40.0678 li
361.789 40.0678 li
cp
358.571 31.2573 mo
361.718 31.2573 li
366.417 45.725 li
363.471 45.725 li
362.444 42.519 li
357.706 42.519 li
356.662 45.725 li
353.689 45.725 li
358.571 31.2573 li
cp
f
367.897 31.2573 mo
370.704 31.2573 li
376.444 40.6059 li
376.444 31.2573 li
379.21 31.2573 li
379.21 45.725 li
376.444 45.725 li
370.683 36.4858 li
370.683 45.725 li
367.897 45.725 li
367.897 31.2573 li
cp
f
388.869 40.0678 mo
387.244 34.9047 li
385.504 40.0678 li
388.869 40.0678 li
cp
385.651 31.2573 mo
388.799 31.2573 li
393.498 45.725 li
390.552 45.725 li
389.524 42.519 li
384.787 42.519 li
383.742 45.725 li
380.77 45.725 li
385.651 31.2573 li
cp
f
394.978 31.2573 mo
397.745 31.2573 li
397.745 42.1479 li
397.745 43.1957 398.396 43.1752 398.97 43.1752 cv
403.93 43.1752 li
403.93 45.725 li
397.992 45.725 li
396.415 45.725 394.978 45.142 394.978 42.9086 cv
394.978 31.2573 li
cp
f
406.338 31.2573 mo
409.161 38.1957 li
412.248 31.2573 li
415.262 31.2573 li
410.5 41.2387 li
410.5 45.725 li
407.734 45.725 li
407.734 41.2387 li
403.324 31.2573 li
406.338 31.2573 li
cp
f
416.006 34.8745 mo
416.006 32.0082 417.707 31.1723 419.919 31.1391 cv
422 31.0952 424.371 31.3735 425.513 31.7114 cv
425.513 33.8862 li
424.249 33.7748 421.398 33.6879 420.68 33.6879 cv
419.471 33.6625 418.774 33.7465 418.774 35.0922 cv
418.774 35.7983 li
418.774 36.9448 419.212 37.1918 420.333 37.1918 cv
422.617 37.1918 li
425.453 37.1918 426.038 39.4272 426.038 41.0258 cv
426.038 41.9907 li
426.038 45.2739 423.992 45.8832 422.035 45.8832 cv
419.566 45.8832 417.948 45.7319 416.453 45.2914 cv
416.453 43.1166 li
417.243 43.1957 419.653 43.3344 421.491 43.3344 cv
422.323 43.3344 423.271 43.1967 423.271 42.0873 cv
423.271 41.309 li
423.271 40.4868 423.022 39.9594 421.965 39.9594 cv
419.742 39.9594 li
416.253 39.9594 416.006 37.3823 416.006 36.1254 cv
416.006 34.8745 li
cp
f
427.89 31.2573 mo
430.657 31.2573 li
430.657 45.725 li
427.89 45.725 li
427.89 31.2573 li
cp
f
432.512 34.8745 mo
432.512 32.0082 434.212 31.1723 436.425 31.1391 cv
438.506 31.0952 440.878 31.3735 442.019 31.7114 cv
442.019 33.8862 li
440.754 33.7748 437.904 33.6879 437.186 33.6879 cv
435.977 33.6625 435.28 33.7465 435.28 35.0922 cv
435.28 35.7983 li
435.28 36.9448 435.718 37.1918 436.838 37.1918 cv
439.124 37.1918 li
441.958 37.1918 442.543 39.4272 442.543 41.0258 cv
442.543 41.9907 li
442.543 45.2739 440.498 45.8832 438.541 45.8832 cv
436.072 45.8832 434.455 45.7319 432.958 45.2914 cv
432.958 43.1166 li
433.749 43.1957 436.16 43.3344 437.997 43.3344 cv
438.83 43.3344 439.777 43.1967 439.777 42.0873 cv
439.777 41.309 li
439.777 40.4868 439.528 39.9594 438.471 39.9594 cv
436.249 39.9594 li
432.759 39.9594 432.512 37.3823 432.512 36.1254 cv
432.512 34.8745 li
cp
f
282.621 402.67 mo
282.608 407.45 li
279.981 402.817 li
279.996 398.035 li
282.621 402.67 li
cp
.105882 .129412 .152941 rgb
f
287.991 399.536 mo
282.621 402.67 li
279.996 398.035 li
287.991 399.536 li
cp
.207843 .25098 .301961 rgb
f
288.01 399.537 mo
301.608 407.39 li
296.22 410.52 li
282.621 402.67 li
288.01 399.537 li
cp
.984314 .670588 .12549 rgb
f
296.22 410.52 mo
296.206 415.302 li
282.608 407.45 li
282.621 402.67 li
296.22 410.52 li
cp
.552941 .341176 0 rgb
f
302.868 407.263 mo
296.007 411.252 li
296.22 410.52 li
301.608 407.39 li
302.868 407.263 li
cp
.207843 .25098 .301961 rgb
f
320.883 425.613 mo
320.867 430.395 li
295.993 416.033 li
296.007 411.252 li
320.883 425.613 li
cp
.717647 .239216 .203922 rgb
f
296.007 411.252 mo
302.868 407.263 li
327.745 421.626 li
320.883 425.613 li
296.007 411.252 li
cp
.921569 .352941 .286275 rgb
f
329.517 422.649 mo
322.654 426.637 li
321.227 427.466 li
321.084 427.548 li
320.637 427.81 319.91 427.804 319.462 427.544 cv
317.945 426.67 li
310.6 422.428 li
309.788 421.96 li
309.687 421.896 li
309.261 421.65 308.678 421.585 308.112 421.533 cv
307.558 421.48 307.028 421.443 306.708 421.26 cv
306.551 421.169 306.447 421.044 306.417 420.862 cv
306.262 419.991 308.612 419.875 310.158 420.371 cv
311.073 420.67 311.935 421.167 311.979 421.193 cv
312.354 421.409 li
319.699 425.65 li
320.261 425.975 li
320.883 425.613 li
327.745 421.626 li
329.517 422.649 li
cp
.207843 .25098 .301961 rgb
f
321.227 427.466 mo
321.084 427.548 li
320.979 427.61 320.854 427.655 320.725 427.687 cv
320.594 427.707 li
320.504 427.722 320.412 427.735 320.32 427.737 cv
320.16 427.73 li
319.912 427.7 li
319.757 427.659 li
319.652 427.628 319.55 427.595 319.462 427.544 cv
317.945 426.67 li
310.6 422.428 li
309.788 421.96 li
309.687 421.896 li
309.454 421.785 li
309.405 421.771 li
309.232 421.708 309.045 421.661 308.849 421.626 cv
308.704 421.603 li
308.51 421.574 308.309 421.552 308.112 421.533 cv
307.906 421.513 307.709 421.493 307.52 421.471 cv
307.399 421.456 li
307.212 421.428 307.046 421.391 306.901 421.339 cv
306.708 421.26 li
306.551 421.169 306.447 421.044 306.417 420.862 cv
306.41 420.78 li
306.395 425.562 li
306.402 425.642 li
306.434 425.824 306.538 425.949 306.696 426.04 cv
306.835 426.107 li
306.889 426.121 li
307.034 426.171 307.201 426.209 307.384 426.236 cv
307.515 426.251 li
307.701 426.275 307.896 426.294 308.099 426.313 cv
308.302 426.332 308.508 426.356 308.707 426.387 cv
308.827 426.404 li
309.026 426.44 309.217 426.488 309.392 426.553 cv
309.489 426.59 309.588 426.627 309.674 426.677 cv
309.775 426.742 li
310.585 427.208 li
317.931 431.452 li
319.447 432.326 li
319.611 432.405 li
319.744 432.439 li
319.898 432.48 li
320.147 432.51 li
320.308 432.517 li
320.401 432.515 320.488 432.502 320.578 432.487 cv
320.711 432.467 li
320.844 432.435 320.967 432.392 321.071 432.33 cv
321.213 432.246 li
322.641 431.417 li
322.654 426.637 li
321.227 427.466 li
cp
.109804 .129412 .156863 rgb
f
332.963 424.639 mo
332.949 429.419 li
332.21 429.847 li
332.226 425.066 li
332.963 424.639 li
cp
.45098 .121569 0 rgb
f
326.836 428.198 mo
326.824 432.978 li
326.086 433.407 li
326.099 428.625 li
326.836 428.198 li
cp
f
326.099 428.625 mo
326.086 433.407 li
322.641 431.417 li
322.654 426.637 li
326.099 428.625 li
cp
.717647 .239216 .203922 rgb
f
329.517 422.649 mo
332.963 424.639 li
332.226 425.066 li
326.836 428.198 li
326.099 428.625 li
322.654 426.637 li
329.517 422.649 li
cp
.921569 .352941 .286275 rgb
f
333.622 425.872 mo
333.608 430.654 li
328.22 433.784 li
328.232 429.004 li
333.622 425.872 li
cp
.117647 .141176 .168627 rgb
f
328.232 429.004 mo
328.22 433.784 li
326.824 432.978 li
326.836 428.198 li
328.232 429.004 li
cp
.113725 .137255 .164706 rgb
f
333.622 425.872 mo
328.232 429.004 li
326.836 428.198 li
332.226 425.066 li
333.622 425.872 li
cp
.207843 .25098 .301961 rgb
f
347.135 302.683 mo
319.245 318.892 li
291.176 302.683 li
347.135 302.683 li
cp
.815686 .858824 .898039 rgb
f
347.135 302.683 mo
319.245 318.892 li
291.176 302.683 li
218.28 345.046 li
343.464 417.322 li
444.249 358.753 li
347.135 302.683 li
cp
.92549 .937255 .945098 rgb
f
343.464 417.322 mo
218.28 345.046 li
218.27 348.9 li
343.452 421.176 li
444.236 362.609 li
444.249 358.753 li
343.464 417.322 li
cp
.658824 .741176 .8 rgb
f
254.408 339.012 mo
262.31 343.604 li
282.541 331.924 li
290.04 336.282 li
269.81 347.962 li
276.386 351.784 li
296.617 340.104 li
304.805 344.862 li
284.574 356.542 li
291.134 360.354 li
311.365 348.674 li
319.368 353.325 li
319.3 365.337 li
303.257 374.599 li
302.835 374.843 302.833 375.233 303.252 375.477 cv
318.251 384.193 li
311.716 387.966 li
319.333 392.393 li
336.051 382.741 li
328.434 378.314 li
319.754 383.325 li
305.493 375.038 li
320.793 366.205 li
342.827 366.214 li
342.898 353.442 li
358.384 344.501 li
372.645 352.789 li
365.046 357.176 li
372.663 361.603 li
380.262 357.215 li
391.402 363.689 li
383.803 368.077 li
391.42 372.503 li
408.121 362.861 li
400.504 358.434 li
392.905 362.822 li
381.765 356.348 li
389.364 351.96 li
381.747 347.534 li
374.148 351.921 li
359.149 343.205 li
358.729 342.961 358.056 342.961 357.634 343.205 cv
341.405 352.574 li
321.038 352.574 li
312.851 347.816 li
332.879 336.253 li
326.319 332.441 li
306.291 344.004 li
298.103 339.246 li
318.132 327.683 li
311.555 323.861 li
291.527 335.424 li
284.027 331.066 li
304.055 319.502 li
296.153 314.91 li
254.408 339.012 li
cp
.980392 .458824 .392157 rgb
f
398.132 184.212 mo
396.808 183.443 395.484 182.674 394.16 181.906 cv
393.548 181.547 393.167 180.793 393.165 179.717 cv
397.137 182.027 li
397.14 183.101 397.52 183.857 398.132 184.212 cv
cp
1 .580392 .101961 rgb
f
397.137 182.027 mo
393.165 179.717 li
393.136 169.214 li
397.108 171.525 li
397.137 182.027 li
cp
f
402.658 157.581 mo
398.686 155.275 li
405.803 159.33 li
409.775 161.638 li
402.658 157.581 li
cp
f
400.639 157.79 mo
396.665 155.481 li
397.394 155.058 398.126 154.956 398.686 155.275 cv
402.658 157.581 li
402.1 157.265 401.368 157.367 400.639 157.79 cv
cp
f
400.484 157.884 mo
396.511 155.574 li
396.665 155.481 li
400.639 157.79 li
400.484 157.884 li
cp
f
391.259 176.983 mo
387.286 174.674 li
386.165 174.035 386.161 171.953 387.275 170.028 cv
391.247 172.336 li
390.134 174.261 390.139 176.343 391.259 176.983 cv
cp
f
391.247 172.336 mo
387.275 170.028 li
394.345 157.779 li
398.317 160.089 li
391.247 172.336 li
cp
f
400.639 157.79 mo
401.368 157.367 402.1 157.265 402.658 157.581 cv
409.775 161.638 li
410.895 162.276 410.903 164.357 409.789 166.285 cv
409.233 167.25 408.501 167.992 407.769 168.414 cv
407.036 168.838 406.305 168.939 405.745 168.62 cv
403.929 167.585 li
403.959 178.085 li
403.965 180.252 402.444 182.887 400.559 183.976 cv
398.676 185.061 397.144 184.191 397.137 182.027 cv
397.108 171.525 li
395.304 174.647 li
394.747 175.611 394.016 176.354 393.285 176.778 cv
392.553 177.198 391.82 177.302 391.259 176.983 cv
390.139 176.343 390.134 174.261 391.247 172.336 cv
398.317 160.089 li
398.874 159.128 399.602 158.387 400.334 157.966 cv
400.484 157.884 li
400.639 157.79 li
cp
.929412 .372549 0 rgb
f
398.317 160.089 mo
394.345 157.779 li
394.9 156.82 395.63 156.079 396.363 155.656 cv
396.511 155.574 li
400.484 157.884 li
400.334 157.966 li
399.602 158.387 398.874 159.128 398.317 160.089 cv
cp
1 .580392 .101961 rgb
f
357.852 402.44 mo
348.741 397.145 li
348.654 366.48 li
357.766 371.775 li
357.852 402.44 li
cp
.0509804 .490196 .658824 rgb
f
357.766 371.775 mo
348.654 366.48 li
357.307 361.485 li
366.417 366.78 li
357.766 371.775 li
cp
.372549 .733333 .870588 rgb
f
366.417 366.78 mo
366.505 397.444 li
357.852 402.44 li
357.766 371.775 li
366.417 366.78 li
cp
.172549 .639216 .819608 rgb
f
349.196 407.438 mo
340.087 402.143 li
340.06 392.575 li
349.169 397.869 li
349.196 407.438 li
cp
.639216 .0627451 .0627451 rgb
f
349.169 397.869 mo
340.06 392.575 li
348.714 387.578 li
357.825 392.871 li
349.169 397.869 li
cp
1 .333333 .258824 rgb
f
357.825 392.871 mo
357.852 402.44 li
349.196 407.438 li
349.169 397.869 li
357.825 392.871 li
cp
.839216 .133333 .133333 rgb
f
158.154 270.189 mo
167.216 264.922 li
167.14 291.588 li
158.078 296.855 li
158.154 270.189 li
cp
.929412 .372549 0 rgb
f
158.164 266.356 mo
167.227 261.091 li
167.216 264.922 li
158.154 270.189 li
158.164 266.356 li
cp
f
149.556 261.387 mo
158.617 256.121 li
167.227 261.091 li
158.164 266.356 li
149.556 261.387 li
cp
1 .580392 .101961 rgb
f
158.164 266.356 mo
158.154 270.189 li
158.078 296.855 li
149.47 291.884 li
149.556 261.387 li
158.164 266.356 li
cp
.760784 .152941 0 rgb
f
166.76 275.157 mo
175.821 269.892 li
175.746 296.557 li
166.685 301.823 li
166.76 275.157 li
cp
.172549 .639216 .819608 rgb
f
158.154 270.189 mo
167.216 264.922 li
175.821 269.892 li
166.76 275.157 li
158.154 270.189 li
cp
.372549 .733333 .870588 rgb
f
166.76 275.157 mo
166.685 301.823 li
158.078 296.855 li
158.154 270.189 li
166.76 275.157 li
cp
.0509804 .490196 .658824 rgb
f
328.226 131.71 mo
328.212 136.413 li
324.521 136.411 li
324.535 131.71 li
328.226 131.71 li
cp
f
324.535 131.71 mo
324.521 136.411 li
323.381 136.413 322.348 136.144 321.599 135.711 cv
320.85 135.278 320.384 134.681 320.382 134.02 cv
320.395 129.32 li
320.4 129.98 320.864 130.578 321.612 131.009 cv
322.361 131.442 323.395 131.71 324.535 131.71 cv
cp
f
335.223 137.874 mo
335.209 142.577 li
335.194 140.443 li
335.209 135.74 li
335.223 137.874 li
cp
f
339.361 140.265 mo
338.221 140.265 337.188 139.996 336.438 139.568 cv
335.69 139.133 335.224 138.538 335.223 137.874 cv
335.209 142.577 li
335.211 143.238 335.676 143.835 336.426 144.266 cv
337.175 144.699 338.208 144.967 339.348 144.967 cv
341.625 144.967 343.467 143.898 343.461 142.577 cv
343.473 137.874 li
343.481 139.197 341.64 140.267 339.361 140.265 cv
cp
f
325.917 141.138 mo
324 142.25 320.883 142.25 318.955 141.138 cv
317.984 140.578 317.5 139.843 317.502 139.11 cv
317.489 143.812 li
317.487 144.545 317.971 145.279 318.941 145.838 cv
320.871 146.952 323.986 146.952 325.904 145.838 cv
335.194 140.443 li
335.209 135.74 li
325.917 141.138 li
cp
f
342.209 127.812 mo
342.956 128.243 343.422 128.838 343.425 129.497 cv
343.473 137.874 li
343.481 139.197 341.64 140.267 339.361 140.265 cv
338.221 140.265 337.188 139.996 336.438 139.568 cv
335.69 139.133 335.224 138.538 335.223 137.874 cv
335.209 135.74 li
325.917 141.138 li
324 142.25 320.883 142.25 318.955 141.138 cv
317.025 140.025 317.018 138.222 318.933 137.109 cv
328.226 131.71 li
324.535 131.71 li
323.395 131.71 322.361 131.442 321.612 131.009 cv
320.864 130.578 320.4 129.98 320.395 129.32 cv
320.387 128.001 322.229 126.932 324.508 126.932 cv
338.982 126.932 li
340.119 126.932 341.148 127.2 341.896 127.631 cv
342.046 127.722 li
342.209 127.812 li
cp
.372549 .733333 .870588 rgb
f
100.77 298.761 mo
100.784 294.06 li
100.781 294.794 101.266 295.528 102.235 296.089 cv
102.222 300.79 li
101.252 300.23 100.768 299.495 100.77 298.761 cv
cp
1 .756863 .0156863 rgb
f
118.522 297.456 mo
118.509 302.158 li
118.495 300.02 li
118.508 295.32 li
118.522 297.456 li
cp
f
111.585 301.487 mo
111.574 306.188 li
102.222 300.79 li
102.235 296.089 li
111.585 301.487 li
cp
f
126.804 303.699 mo
126.79 308.402 li
126.796 309.104 126.271 309.737 125.434 310.173 cv
125.448 305.472 li
126.284 305.036 126.807 304.404 126.804 303.699 cv
cp
f
125.448 305.472 mo
125.434 310.173 li
124.682 310.658 123.593 310.966 122.378 310.966 cv
122.392 306.265 li
123.607 306.265 124.695 305.956 125.448 305.472 cv
cp
f
122.392 306.265 mo
122.378 310.966 li
107.911 310.967 li
107.924 306.265 li
122.392 306.265 li
cp
f
107.924 306.265 mo
107.911 310.967 li
106.772 310.967 105.74 310.699 104.991 310.267 cv
104.24 309.834 103.776 309.237 103.772 308.577 cv
103.785 303.876 li
103.79 304.534 104.256 305.132 105.003 305.566 cv
105.751 305.997 106.784 306.265 107.924 306.265 cv
cp
f
125.541 293.629 mo
126.289 294.063 126.755 294.659 126.759 295.32 cv
126.804 303.699 li
126.807 304.404 126.284 305.036 125.448 305.472 cv
124.695 305.956 123.607 306.265 122.392 306.265 cv
107.924 306.265 li
106.784 306.265 105.751 305.997 105.003 305.566 cv
104.256 305.132 103.79 304.534 103.785 303.876 cv
103.776 302.557 105.618 301.487 107.896 301.487 cv
111.585 301.487 li
102.235 296.089 li
100.309 294.976 100.299 293.173 102.214 292.058 cv
104.129 290.946 107.244 290.946 109.171 292.058 cv
118.522 297.456 li
118.508 295.32 li
118.501 294 120.341 292.931 122.619 292.931 cv
123.76 292.931 124.793 293.198 125.541 293.629 cv
cp
1 .894118 .290196 rgb
f
101.897 249.724 mo
103.251 250.511 104.606 251.3 105.961 252.087 cv
105.325 251.718 104.448 251.769 103.478 252.331 cv
99.4123 249.969 li
100.382 249.406 101.261 249.355 101.897 249.724 cv
cp
1 .333333 .258824 rgb
f
94.15 265.749 mo
90.0852 263.386 li
91.9434 264.445 li
96.0073 266.807 li
94.15 265.749 li
cp
f
94.1262 257.729 mo
90.0623 255.367 li
99.4123 249.969 li
103.478 252.331 li
94.1262 257.729 li
cp
f
84.6024 269.801 mo
80.5367 267.438 li
79.9256 267.09 79.641 266.321 79.6811 265.376 cv
83.7449 267.74 li
83.7068 268.682 83.9894 269.451 84.6024 269.801 cv
cp
f
93.8875 249.987 mo
89.8217 247.626 li
90.5713 247.193 91.3218 247.089 91.8957 247.415 cv
95.9586 249.777 li
95.3857 249.452 94.6361 249.554 93.8875 249.987 cv
cp
f
83.7449 267.74 mo
79.6811 265.376 li
79.6353 264.486 79.9141 263.388 80.5223 262.334 cv
84.5872 264.696 li
83.9789 265.751 83.701 266.847 83.7449 267.74 cv
cp
f
84.5872 264.696 mo
80.5223 262.334 li
87.7564 249.807 li
91.8202 252.169 li
84.5872 264.696 li
cp
f
93.8875 249.987 mo
94.6361 249.554 95.3857 249.452 95.9586 249.777 cv
97.1054 250.431 97.1111 252.56 95.9729 254.534 cv
94.1262 257.729 li
103.478 252.331 li
105.405 251.218 106.973 252.113 106.979 254.326 cv
106.985 256.539 105.428 259.238 103.501 260.35 cv
94.15 265.749 li
96.0073 266.807 li
97.1541 267.46 97.1607 269.587 96.0206 271.56 cv
95.4516 272.546 94.703 273.307 93.9524 273.74 cv
93.2057 274.173 92.4552 274.277 91.8823 273.952 cv
84.6024 269.801 li
83.9894 269.451 83.7068 268.682 83.7449 267.74 cv
83.701 266.847 83.9789 265.751 84.5872 264.696 cv
91.8202 252.169 li
92.3902 251.182 93.137 250.419 93.8875 249.987 cv
cp
.839216 .133333 .133333 rgb
f
91.8202 252.169 mo
87.7564 249.807 li
88.3244 248.818 89.0731 248.057 89.8217 247.626 cv
93.8875 249.987 li
93.137 250.419 92.3902 251.182 91.8202 252.169 cv
cp
1 .333333 .258824 rgb
f
66.8834 217.8 mo
50.6495 208.366 li
16.6417 228 li
16.8478 300.727 li
33.0817 310.161 li
67.0895 290.526 li
66.8834 217.8 li
cp
.00784314 .192157 .294118 rgb
f
54.0063 310.507 mo
51.9771 309.328 li
79.6062 293.376 li
81.6354 294.556 li
54.0063 310.507 li
cp
.843137 .905882 .968627 rgb
f
50.1271 315.21 mo
48.0978 314.03 li
47.7969 313.855 47.5781 313.538 47.4767 313.1 cv
49.5059 314.28 li
49.6073 314.717 49.8261 315.035 50.1271 315.21 cv
cp
.611765 .709804 .8 rgb
f
52.2635 309.514 mo
50.2343 308.335 li
50.43 308.283 li
52.4593 309.462 li
52.2635 309.514 li
cp
1 1 1 rgb
f
52.4593 309.462 mo
50.43 308.283 li
50.787 308.207 51.1065 308.252 51.3645 308.402 cv
53.3937 309.581 li
53.1357 309.431 52.8163 309.387 52.4593 309.462 cv
cp
.972549 .976471 .988235 rgb
f
49.5026 313.108 mo
47.4734 311.928 li
47.6158 311.102 48.0315 310.236 48.5937 309.55 cv
50.6229 310.73 li
50.0607 311.415 49.645 312.281 49.5026 313.108 cv
cp
.611765 .709804 .8 rgb
f
50.6229 310.73 mo
48.5937 309.55 li
48.7825 309.32 48.9878 309.11 49.2049 308.929 cv
51.2341 310.108 li
51.0171 310.289 50.8117 310.499 50.6229 310.73 cv
cp
f
51.2341 310.108 mo
49.2049 308.929 li
49.1351 284.321 li
51.1643 285.5 li
51.2341 310.108 li
cp
f
51.1643 285.5 mo
49.1351 284.321 li
50.1645 283.727 li
52.1938 284.906 li
51.1643 285.5 li
cp
.843137 .905882 .968627 rgb
f
21.8736 329.059 mo
19.8443 327.88 li
47.4734 311.928 li
49.5026 313.108 li
21.8736 329.059 li
cp
f
21.8769 330.231 mo
19.8476 329.052 li
19.8443 327.88 li
21.8736 329.059 li
21.8769 330.231 li
cp
.611765 .709804 .8 rgb
f
52.1938 284.906 mo
52.2635 309.514 li
53.1281 309.237 53.8105 309.626 54.0063 310.507 cv
81.6354 294.556 li
81.6387 295.728 li
54.0097 311.68 li
53.774 313 52.8666 314.413 51.7637 315.05 cv
50.6607 315.686 49.7483 315.325 49.5059 314.28 cv
21.8769 330.231 li
21.8736 329.059 li
49.5026 313.108 li
49.6928 312.003 50.3708 310.829 51.2341 310.108 cv
51.1643 285.5 li
52.1938 284.906 li
cp
.972549 .976471 .988235 rgb
f
33.0817 310.161 mo
16.8478 300.727 li
16.6417 228 li
32.8755 237.434 li
33.0817 310.161 li
cp
.00392157 .133333 .203922 rgb
f
32.8755 237.434 mo
16.6417 228 li
50.6495 208.366 li
66.8834 217.8 li
32.8755 237.434 li
cp
.00784314 .266667 .384314 rgb
f
66.8834 217.8 mo
67.0895 290.526 li
33.0817 310.161 li
32.8755 237.434 li
66.8834 217.8 li
cp
.00784314 .192157 .294118 rgb
f
59.0416 231.256 mo
59.0531 235.325 li
55.5116 237.37 li
55.5001 233.301 li
59.0416 231.256 li
cp
f
59.0796 244.669 mo
59.0911 248.739 li
55.5496 250.783 li
55.5381 246.714 li
59.0796 244.669 li
cp
f
59.0661 239.898 mo
59.0776 243.978 li
55.5361 246.023 li
55.5246 241.943 li
59.0661 239.898 li
cp
f
63.1835 237.521 mo
63.1951 241.601 li
59.6536 243.645 li
59.642 239.566 li
63.1835 237.521 li
cp
f
63.2215 250.935 mo
63.2331 255.004 li
59.6916 257.049 li
59.68 252.979 li
63.2215 250.935 li
cp
f
55.0382 273.863 mo
55.0497 277.933 li
51.5083 279.977 li
51.4967 275.908 li
55.0382 273.863 li
cp
f
55.0247 269.102 mo
55.0363 273.172 li
51.4948 275.216 li
51.4832 271.147 li
55.0247 269.102 li
cp
f
63.273 269.109 mo
63.2846 273.178 li
59.7431 275.223 li
59.7315 271.154 li
63.273 269.109 li
cp
f
63.2595 264.348 mo
63.2711 268.417 li
59.7296 270.462 li
59.718 266.393 li
63.2595 264.348 li
cp
f
46.8034 278.618 mo
46.8149 282.687 li
43.2734 284.732 li
43.2619 280.662 li
46.8034 278.618 li
cp
f
59.1556 271.486 mo
59.1672 275.556 li
55.6257 277.6 li
55.6141 273.531 li
59.1556 271.486 li
cp
f
59.1421 266.725 mo
59.1537 270.795 li
55.6122 272.839 li
55.6006 268.77 li
59.1421 266.725 li
cp
f
50.8693 258.066 mo
50.8808 262.136 li
47.3393 264.18 li
47.3278 260.111 li
50.8693 258.066 li
cp
f
38.935 269.883 mo
39.8375 269.362 40.5792 269.775 40.5821 270.812 cv
40.5851 271.859 39.8482 273.125 38.9456 273.647 cv
38.0431 274.168 37.3015 273.755 37.2985 272.708 cv
37.2956 271.671 38.0324 270.405 38.935 269.883 cv
cp
.0509804 .85098 .831373 rgb
f
65.063 274.862 mo
65.0986 287.436 li
34.996 304.816 li
34.9603 292.242 li
65.063 274.862 li
cp
.00784314 .352941 .509804 rgb
f
38.9585 278.18 mo
39.8611 277.659 40.6027 278.082 40.6057 279.119 cv
40.6086 280.156 39.8718 281.432 38.9692 281.953 cv
38.0666 282.474 37.325 282.052 37.322 281.015 cv
37.3191 279.978 38.0559 278.701 38.9585 278.18 cv
cp
.980392 .458824 .392157 rgb
f
38.9692 281.953 mo
39.8718 281.432 40.6086 280.156 40.6057 279.119 cv
40.6027 278.082 39.8611 277.659 38.9585 278.18 cv
38.0559 278.701 37.3191 279.978 37.322 281.015 cv
37.325 282.052 38.0666 282.474 38.9692 281.953 cv
cp
38.9837 287.06 mo
39.8862 286.539 40.6231 285.263 40.6201 284.226 cv
40.6172 283.188 39.8755 282.766 38.973 283.287 cv
38.0704 283.808 37.3336 285.084 37.3365 286.121 cv
37.3394 287.158 38.0811 287.581 38.9837 287.06 cv
cp
55.0497 277.933 mo
55.0382 273.863 li
51.4967 275.908 li
51.5082 279.977 li
55.0497 277.933 li
cp
46.8149 282.687 mo
46.8034 278.618 li
43.2619 280.662 li
43.2734 284.732 li
46.8149 282.687 li
cp
59.1671 275.556 mo
59.1556 271.486 li
55.6141 273.531 li
55.6257 277.6 li
59.1671 275.556 li
cp
50.9323 280.31 mo
50.9208 276.24 li
47.3793 278.285 li
47.3908 282.354 li
50.9323 280.31 li
cp
63.2846 273.178 mo
63.273 269.109 li
59.7315 271.154 li
59.7431 275.223 li
63.2846 273.178 li
cp
55.0362 273.172 mo
55.0247 269.102 li
51.4832 271.147 li
51.4947 275.216 li
55.0362 273.172 li
cp
63.2711 268.417 mo
63.2595 264.348 li
59.718 266.393 li
59.7296 270.462 li
63.2711 268.417 li
cp
59.1536 270.795 mo
59.1421 266.725 li
55.6006 268.77 li
55.6122 272.839 li
59.1536 270.795 li
cp
46.8014 277.926 mo
46.7899 273.857 li
43.2484 275.901 li
43.2599 279.971 li
46.8014 277.926 li
cp
50.9188 275.549 mo
50.9073 271.479 li
47.3658 273.524 li
47.3773 277.594 li
50.9188 275.549 li
cp
34.9228 279.026 mo
65.0255 261.647 li
65.0594 273.618 li
34.9568 290.998 li
34.9228 279.026 li
cp
.00784314 .352941 .509804 rgb
f
38.9205 264.777 mo
39.8231 264.256 40.5647 264.668 40.5676 265.706 cv
40.5706 266.753 39.8337 268.019 38.9312 268.54 cv
38.0286 269.061 37.287 268.648 37.284 267.601 cv
37.2811 266.564 38.0179 265.298 38.9205 264.777 cv
cp
.980392 .458824 .392157 rgb
f
38.9456 273.647 mo
39.8482 273.125 40.5851 271.859 40.5821 270.812 cv
40.5792 269.775 39.8375 269.362 38.935 269.883 cv
38.0324 270.405 37.2955 271.671 37.2985 272.708 cv
37.3014 273.755 38.0431 274.168 38.9456 273.647 cv
cp
38.9312 268.54 mo
39.8337 268.019 40.5706 266.753 40.5676 265.706 cv
40.5647 264.668 39.8231 264.256 38.9205 264.777 cv
38.0179 265.298 37.2811 266.564 37.284 267.601 cv
37.287 268.648 38.0286 269.061 38.9312 268.54 cv
cp
54.9982 259.758 mo
54.9867 255.689 li
51.4452 257.734 li
51.4567 261.803 li
54.9982 259.758 li
cp
63.233 255.004 mo
63.2215 250.935 li
59.68 252.979 li
59.6915 257.049 li
63.233 255.004 li
cp
59.1156 257.381 mo
59.1041 253.312 li
55.5626 255.357 li
55.5741 259.426 li
59.1156 257.381 li
cp
46.7634 264.513 mo
46.7518 260.443 li
43.2104 262.488 li
43.2219 266.557 li
46.7634 264.513 li
cp
50.8808 262.136 mo
50.8693 258.066 li
47.3278 260.111 li
47.3393 264.18 li
50.8808 262.136 li
cp
55.0117 264.519 mo
55.0002 260.45 li
51.4587 262.495 li
51.4702 266.564 li
55.0117 264.519 li
cp
59.1291 262.142 mo
59.1176 258.073 li
55.5761 260.117 li
55.5876 264.187 li
59.1291 262.142 li
cp
63.2465 259.765 mo
63.235 255.695 li
59.6935 257.74 li
59.705 261.81 li
63.2465 259.765 li
cp
46.7769 269.274 mo
46.7653 265.204 li
43.2239 267.249 li
43.2354 271.318 li
46.7769 269.274 li
cp
50.8943 266.897 mo
50.8828 262.827 li
47.3413 264.872 li
47.3528 268.941 li
50.8943 266.897 li
cp
34.8848 265.613 mo
64.9875 248.233 li
65.0214 260.214 li
34.9188 277.594 li
34.8848 265.613 li
cp
.00784314 .352941 .509804 rgb
f
63.235 255.695 mo
63.2466 259.765 li
59.7051 261.81 li
59.6935 257.74 li
63.235 255.695 li
cp
.00784314 .192157 .294118 rgb
f
59.1176 258.073 mo
59.1291 262.142 li
55.5876 264.187 li
55.5761 260.117 li
59.1176 258.073 li
cp
f
55.0002 260.45 mo
55.0117 264.519 li
51.4702 266.564 li
51.4587 262.495 li
55.0002 260.45 li
cp
f
59.1041 253.312 mo
59.1156 257.381 li
55.5741 259.426 li
55.5626 255.357 li
59.1041 253.312 li
cp
f
46.7899 273.857 mo
46.8014 277.926 li
43.2599 279.971 li
43.2484 275.901 li
46.7899 273.857 li
cp
f
38.973 283.287 mo
39.8755 282.766 40.6172 283.188 40.6201 284.226 cv
40.6231 285.263 39.8862 286.539 38.9837 287.06 cv
38.0811 287.581 37.3395 287.159 37.3365 286.121 cv
37.3336 285.084 38.0704 283.808 38.973 283.287 cv
cp
.0509804 .85098 .831373 rgb
f
50.8448 249.424 mo
50.8563 253.493 li
47.3148 255.538 li
47.3033 251.468 li
50.8448 249.424 li
cp
.00784314 .192157 .294118 rgb
f
46.7138 247.03 mo
46.7254 251.109 li
43.1839 253.154 li
43.1723 249.075 li
46.7138 247.03 li
cp
f
38.897 256.47 mo
39.7995 255.949 40.5411 256.362 40.5441 257.409 cv
40.547 258.446 39.8102 259.712 38.9076 260.233 cv
38.0051 260.754 37.2634 260.342 37.2605 259.305 cv
37.2575 258.258 37.9944 256.991 38.897 256.47 cv
cp
.0509804 .85098 .831373 rgb
f
38.8931 255.127 mo
39.7957 254.606 40.5326 253.339 40.5296 252.302 cv
40.5267 251.255 39.785 250.842 38.8825 251.363 cv
37.9799 251.885 37.243 253.151 37.246 254.198 cv
37.2489 255.235 37.9906 255.648 38.8931 255.127 cv
cp
38.9076 260.233 mo
39.8102 259.712 40.547 258.446 40.5441 257.409 cv
40.5411 256.362 39.7995 255.949 38.8969 256.47 cv
37.9944 256.991 37.2575 258.258 37.2605 259.305 cv
37.2634 260.342 38.005 260.754 38.9076 260.233 cv
cp
54.9737 251.116 mo
54.9622 247.046 li
51.4207 249.091 li
51.4322 253.161 li
54.9737 251.116 li
cp
46.7389 255.87 mo
46.7273 251.801 li
43.1859 253.845 li
43.1974 257.915 li
46.7389 255.87 li
cp
59.0911 248.739 mo
59.0796 244.669 li
55.5381 246.714 li
55.5496 250.783 li
59.0911 248.739 li
cp
50.8563 253.493 mo
50.8448 249.424 li
47.3033 251.468 li
47.3148 255.538 li
50.8563 253.493 li
cp
63.2085 246.361 mo
63.197 242.292 li
59.6555 244.337 li
59.667 248.406 li
63.2085 246.361 li
cp
54.9602 246.355 mo
54.9486 242.276 li
51.4072 244.32 li
51.4187 248.4 li
54.9602 246.355 li
cp
63.195 241.601 mo
63.1835 237.521 li
59.642 239.566 li
59.6535 243.645 li
63.195 241.601 li
cp
59.0776 243.978 mo
59.0661 239.898 li
55.5246 241.943 li
55.5361 246.022 li
59.0776 243.978 li
cp
46.7254 251.109 mo
46.7138 247.03 li
43.1723 249.075 li
43.1839 253.154 li
46.7254 251.109 li
cp
50.8428 248.732 mo
50.8312 244.653 li
47.2897 246.697 li
47.3013 250.777 li
50.8428 248.732 li
cp
34.8468 252.209 mo
64.9495 234.83 li
64.9834 246.801 li
34.8807 264.181 li
34.8468 252.209 li
cp
.00784314 .352941 .509804 rgb
f
63.197 242.292 mo
63.2086 246.361 li
59.6671 248.406 li
59.6555 244.337 li
63.197 242.292 li
cp
.00784314 .192157 .294118 rgb
f
50.8828 262.827 mo
50.8943 266.897 li
47.3528 268.941 li
47.3413 264.872 li
50.8828 262.827 li
cp
f
54.9867 255.689 mo
54.9982 259.758 li
51.4567 261.803 li
51.4452 257.734 li
54.9867 255.689 li
cp
f
54.9622 247.046 mo
54.9737 251.116 li
51.4322 253.161 li
51.4207 249.091 li
54.9622 247.046 li
cp
f
63.159 228.879 mo
63.1705 232.948 li
59.629 234.993 li
59.6175 230.923 li
63.159 228.879 li
cp
f
54.9487 242.276 mo
54.9602 246.355 li
51.4187 248.4 li
51.4072 244.32 li
54.9487 242.276 li
cp
f
46.7274 251.801 mo
46.7389 255.87 li
43.1974 257.915 li
43.1859 253.845 li
46.7274 251.801 li
cp
f
50.8312 244.653 mo
50.8428 248.732 li
47.3013 250.777 li
47.2898 246.697 li
50.8312 244.653 li
cp
f
54.9242 233.633 mo
54.9357 237.702 li
51.3942 239.747 li
51.3827 235.678 li
54.9242 233.633 li
cp
f
59.0281 226.495 mo
59.0396 230.564 li
55.4981 232.609 li
55.4866 228.54 li
59.0281 226.495 li
cp
f
50.8067 236.01 mo
50.8183 240.08 li
47.2768 242.124 li
47.2653 238.055 li
50.8067 236.01 li
cp
f
54.9107 228.872 mo
54.9222 232.942 li
51.3807 234.986 li
51.3692 230.917 li
54.9107 228.872 li
cp
f
38.8825 251.363 mo
39.785 250.842 40.5267 251.255 40.5296 252.302 cv
40.5326 253.339 39.7957 254.606 38.8931 255.127 cv
37.9906 255.648 37.249 255.235 37.246 254.198 cv
37.243 253.151 37.9799 251.885 38.8825 251.363 cv
cp
.980392 .458824 .392157 rgb
f
46.6893 238.387 mo
46.7009 242.457 li
43.1594 244.501 li
43.1478 240.432 li
46.6893 238.387 li
cp
.00784314 .192157 .294118 rgb
f
50.7932 231.249 mo
50.8048 235.319 li
47.2633 237.363 li
47.2518 233.294 li
50.7932 231.249 li
cp
f
46.6758 233.626 mo
46.6874 237.696 li
43.1459 239.741 li
43.1343 235.671 li
46.6758 233.626 li
cp
f
38.8589 243.057 mo
39.7615 242.536 40.5031 242.948 40.5061 243.995 cv
40.509 245.033 39.7722 246.309 38.8696 246.83 cv
37.9671 247.351 37.2254 246.928 37.2225 245.891 cv
37.2195 244.844 37.9564 243.578 38.8589 243.057 cv
cp
.0509804 .85098 .831373 rgb
f
38.8444 237.95 mo
39.747 237.429 40.4886 237.842 40.4916 238.889 cv
40.4945 239.926 39.7577 241.202 38.8551 241.723 cv
37.9526 242.244 37.2109 241.822 37.208 240.785 cv
37.205 239.738 37.9419 238.471 38.8444 237.95 cv
cp
.980392 .458824 .392157 rgb
f
38.8551 241.723 mo
39.7577 241.202 40.4945 239.926 40.4916 238.889 cv
40.4886 237.842 39.747 237.429 38.8444 237.95 cv
37.9419 238.471 37.205 239.738 37.208 240.785 cv
37.2109 241.822 37.9526 242.244 38.8551 241.723 cv
cp
38.8696 246.83 mo
39.7722 246.309 40.509 245.032 40.5061 243.995 cv
40.5031 242.948 39.7615 242.536 38.8589 243.057 cv
37.9564 243.578 37.2195 244.844 37.2225 245.891 cv
37.2254 246.928 37.967 247.351 38.8696 246.83 cv
cp
54.9222 232.942 mo
54.9106 228.872 li
51.3692 230.917 li
51.3807 234.986 li
54.9222 232.942 li
cp
54.9357 237.702 mo
54.9241 233.633 li
51.3827 235.678 li
51.3942 239.747 li
54.9357 237.702 li
cp
63.157 228.187 mo
63.1455 224.118 li
59.604 226.162 li
59.6155 230.232 li
63.157 228.187 li
cp
63.1705 232.948 mo
63.159 228.879 li
59.6175 230.923 li
59.629 234.993 li
63.1705 232.948 li
cp
59.0531 235.325 mo
59.0416 231.256 li
55.5001 233.301 li
55.5116 237.37 li
59.0531 235.325 li
cp
50.8048 235.319 mo
50.7932 231.249 li
47.2517 233.294 li
47.2633 237.363 li
50.8048 235.319 li
cp
50.8183 240.08 mo
50.8067 236.01 li
47.2652 238.055 li
47.2768 242.124 li
50.8183 240.08 li
cp
46.6874 237.696 mo
46.6758 233.626 li
43.1343 235.671 li
43.1459 239.741 li
46.6874 237.696 li
cp
46.7008 242.457 mo
46.6893 238.387 li
43.1478 240.432 li
43.1594 244.501 li
46.7008 242.457 li
cp
59.0396 230.564 mo
59.0281 226.495 li
55.4866 228.54 li
55.4981 232.609 li
59.0396 230.564 li
cp
34.8088 238.796 mo
64.9115 221.416 li
64.9454 233.388 li
34.8427 250.767 li
34.8088 238.796 li
cp
.00784314 .352941 .509804 rgb
f
63.1455 224.118 mo
63.157 228.187 li
59.6155 230.232 li
59.604 226.163 li
63.1455 224.118 li
cp
.00784314 .192157 .294118 rgb
f
46.7654 265.204 mo
46.7769 269.274 li
43.2354 271.318 li
43.2239 267.249 li
46.7654 265.204 li
cp
f
46.7519 260.443 mo
46.7634 264.513 li
43.2219 266.557 li
43.2104 262.488 li
46.7519 260.443 li
cp
f
50.9208 276.24 mo
50.9323 280.31 li
47.3908 282.355 li
47.3793 278.285 li
50.9208 276.24 li
cp
f
50.9073 271.48 mo
50.9188 275.549 li
47.3773 277.594 li
47.3658 273.524 li
50.9073 271.48 li
cp
f
213.849 382.818 mo
213.848 383.752 li
213.115 384.18 li
213.115 383.246 li
213.849 382.818 li
cp
.972549 .976471 .988235 rgb
f
213.115 383.246 mo
213.115 384.18 li
203.849 378.854 li
203.849 377.919 li
213.115 383.246 li
cp
.611765 .709804 .8 rgb
f
213.849 382.818 mo
213.115 383.246 li
203.849 377.919 li
204.583 377.491 li
213.849 382.818 li
cp
.843137 .905882 .968627 rgb
f
205.382 387.76 mo
205.381 388.694 li
204.647 389.122 li
204.648 388.188 li
205.382 387.76 li
cp
.972549 .976471 .988235 rgb
f
204.648 388.188 mo
204.647 389.122 li
201.227 387.155 li
201.228 386.221 li
204.648 388.188 li
cp
.611765 .709804 .8 rgb
f
201.228 386.221 mo
201.227 387.155 li
196.942 389.656 li
196.943 388.722 li
201.228 386.221 li
cp
.972549 .976471 .988235 rgb
f
196.943 388.722 mo
196.942 389.656 li
191.097 386.296 li
191.098 385.361 li
196.943 388.722 li
cp
.611765 .709804 .8 rgb
f
205.382 387.76 mo
204.648 388.188 li
201.228 386.221 li
196.943 388.722 li
191.098 385.361 li
191.832 384.933 li
196.937 387.868 li
201.221 385.368 li
205.382 387.76 li
cp
.843137 .905882 .968627 rgb
f
197.031 392.633 mo
197.03 393.568 li
196.297 393.996 li
196.298 393.061 li
197.031 392.633 li
cp
.972549 .976471 .988235 rgb
f
196.298 393.061 mo
196.297 393.996 li
187.031 388.669 li
187.032 387.735 li
196.298 393.061 li
cp
.611765 .709804 .8 rgb
f
197.031 392.633 mo
196.298 393.061 li
187.032 387.735 li
187.765 387.307 li
197.031 392.633 li
cp
.843137 .905882 .968627 rgb
f
187.911 393.136 mo
187.91 394.07 li
182.804 391.135 li
182.805 390.201 li
187.911 393.136 li
cp
.611765 .709804 .8 rgb
f
189.384 393.134 mo
189.383 394.068 li
185.099 396.568 li
185.1 395.634 li
189.384 393.134 li
cp
.972549 .976471 .988235 rgb
f
187.787 398.029 mo
187.786 398.963 li
183.626 396.571 li
183.626 395.637 li
187.787 398.029 li
cp
.611765 .709804 .8 rgb
f
188.52 397.6 mo
188.52 398.535 li
187.786 398.963 li
187.787 398.029 li
188.52 397.6 li
cp
.972549 .976471 .988235 rgb
f
189.384 393.134 mo
185.1 395.634 li
188.52 397.6 li
187.787 398.029 li
183.626 395.637 li
187.911 393.136 li
182.805 390.201 li
183.539 389.773 li
189.384 393.134 li
cp
.843137 .905882 .968627 rgb
f
228.026 381.514 mo
228.026 382.448 li
224.997 384.215 li
224.998 383.281 li
228.026 381.514 li
cp
.972549 .976471 .988235 rgb
f
224.998 383.281 mo
224.997 384.215 li
224.258 383.79 li
224.259 382.856 li
224.998 383.281 li
cp
.611765 .709804 .8 rgb
f
232.348 383.998 mo
232.347 384.932 li
228.026 382.448 li
228.026 381.514 li
232.348 383.998 li
cp
f
237.555 380.959 mo
237.554 381.894 li
232.347 384.932 li
232.348 383.998 li
237.555 380.959 li
cp
.972549 .976471 .988235 rgb
f
237.555 380.959 mo
232.348 383.998 li
228.026 381.514 li
224.998 383.281 li
224.259 382.856 li
228.02 380.66 li
232.342 383.145 li
236.815 380.534 li
237.555 380.959 li
cp
.843137 .905882 .968627 rgb
f
241.62 383.297 mo
241.619 384.231 li
233.384 389.037 li
233.385 388.102 li
241.62 383.297 li
cp
.972549 .976471 .988235 rgb
f
233.385 388.102 mo
233.384 389.037 li
232.645 388.611 li
232.646 387.677 li
233.385 388.102 li
cp
.611765 .709804 .8 rgb
f
241.62 383.297 mo
233.385 388.102 li
232.646 387.677 li
240.88 382.871 li
241.62 383.297 li
cp
.843137 .905882 .968627 rgb
f
245.766 385.68 mo
245.765 386.614 li
240.733 389.551 li
240.734 388.617 li
245.766 385.68 li
cp
.972549 .976471 .988235 rgb
f
243.794 391.218 mo
243.793 392.152 li
239.274 389.554 li
239.275 388.62 li
243.794 391.218 li
cp
.611765 .709804 .8 rgb
f
242.058 393.088 mo
242.057 394.022 li
241.317 393.597 li
241.318 392.663 li
242.058 393.088 li
cp
f
245.26 391.219 mo
245.259 392.153 li
242.057 394.022 li
242.058 393.088 li
245.26 391.219 li
cp
.972549 .976471 .988235 rgb
f
245.766 385.68 mo
240.734 388.617 li
245.26 391.219 li
242.058 393.088 li
241.318 392.663 li
243.794 391.218 li
239.275 388.62 li
245.033 385.259 li
245.766 385.68 li
cp
.843137 .905882 .968627 rgb
f
258.584 393.049 mo
258.583 393.983 li
250.349 398.789 li
250.35 397.855 li
258.584 393.049 li
cp
.972549 .976471 .988235 rgb
f
250.35 397.855 mo
250.349 398.789 li
249.609 398.364 li
249.61 397.43 li
250.35 397.855 li
cp
.611765 .709804 .8 rgb
f
258.584 393.049 mo
250.35 397.855 li
249.61 397.43 li
257.844 392.624 li
258.584 393.049 li
cp
.843137 .905882 .968627 rgb
f
227.893 384.182 mo
227.89 387.919 li
226.38 388.8 li
226.383 385.063 li
227.893 384.182 li
cp
.00784314 .352941 .509804 rgb
f
226.383 385.063 mo
226.38 388.8 li
221.413 385.945 li
221.417 382.208 li
226.383 385.063 li
cp
.00392157 .133333 .203922 rgb
f
227.893 384.182 mo
226.383 385.063 li
221.417 382.208 li
222.927 381.327 li
227.893 384.182 li
cp
.00784314 .266667 .384314 rgb
f
236.368 389.054 mo
234.858 389.935 li
229.899 387.085 li
231.41 386.203 li
236.368 389.054 li
cp
f
234.858 389.935 mo
234.854 393.672 li
229.895 390.821 li
229.899 387.085 li
234.858 389.935 li
cp
.00392157 .133333 .203922 rgb
f
236.368 389.054 mo
236.365 392.79 li
234.854 393.672 li
234.858 389.935 li
236.368 389.054 li
cp
.00784314 .352941 .509804 rgb
f
244.85 393.93 mo
244.847 397.667 li
243.336 398.548 li
243.34 394.811 li
244.85 393.93 li
cp
f
244.85 393.93 mo
243.34 394.811 li
238.381 391.961 li
239.892 391.079 li
244.85 393.93 li
cp
.00784314 .266667 .384314 rgb
f
243.34 394.811 mo
243.336 398.548 li
238.378 395.698 li
238.381 391.961 li
243.34 394.811 li
cp
.00392157 .133333 .203922 rgb
f
251.822 399.688 mo
251.819 403.424 li
246.86 400.574 li
246.863 396.837 li
251.822 399.688 li
cp
f
253.333 398.806 mo
253.329 402.543 li
251.819 403.424 li
251.822 399.688 li
253.333 398.806 li
cp
.00784314 .352941 .509804 rgb
f
253.333 398.806 mo
251.822 399.688 li
246.863 396.837 li
248.374 395.955 li
253.333 398.806 li
cp
.00784314 .266667 .384314 rgb
f
207.494 387.126 mo
207.491 390.863 li
202.567 393.737 li
202.571 390 li
207.494 387.126 li
cp
.00784314 .352941 .509804 rgb
f
202.571 390 mo
202.567 393.737 li
201.044 392.861 li
201.047 389.124 li
202.571 390 li
cp
.00392157 .133333 .203922 rgb
f
207.494 387.126 mo
202.571 390 li
201.047 389.124 li
205.971 386.25 li
207.494 387.126 li
cp
.00784314 .266667 .384314 rgb
f
199.085 392.034 mo
199.082 395.771 li
194.158 398.644 li
194.162 394.907 li
199.085 392.034 li
cp
.00784314 .352941 .509804 rgb
f
194.162 394.907 mo
194.158 398.644 li
192.635 397.768 li
192.638 394.031 li
194.162 394.907 li
cp
.00392157 .133333 .203922 rgb
f
199.085 392.034 mo
194.162 394.907 li
192.638 394.031 li
197.562 391.158 li
199.085 392.034 li
cp
.00784314 .266667 .384314 rgb
f
190.676 396.942 mo
190.673 400.678 li
185.749 403.552 li
185.753 399.815 li
190.676 396.942 li
cp
.00784314 .352941 .509804 rgb
f
185.753 399.815 mo
185.749 403.552 li
184.226 402.676 li
184.229 398.939 li
185.753 399.815 li
cp
.00392157 .133333 .203922 rgb
f
190.676 396.942 mo
185.753 399.815 li
184.229 398.939 li
189.153 396.066 li
190.676 396.942 li
cp
.00784314 .266667 .384314 rgb
f
215.896 382.223 mo
210.98 385.092 li
209.456 384.216 li
214.372 381.347 li
215.896 382.223 li
cp
f
210.98 385.092 mo
210.976 388.829 li
209.453 387.953 li
209.456 384.216 li
210.98 385.092 li
cp
.00392157 .133333 .203922 rgb
f
215.896 382.223 mo
215.892 385.96 li
210.976 388.829 li
210.98 385.092 li
215.896 382.223 li
cp
.00784314 .352941 .509804 rgb
f
218.957 421.483 mo
218.956 426.581 li
221.701 424.979 li
226.625 422.106 li
230.11 420.071 li
235.033 417.198 li
238.519 415.164 li
243.442 412.29 li
246.928 410.256 li
251.844 407.387 li
254.596 405.781 li
254.597 400.682 li
218.957 421.483 li
cp
f
183.007 400.816 mo
183.006 405.914 li
185.775 407.506 li
190.741 410.361 li
194.257 412.382 li
199.216 415.233 li
201.23 416.391 li
207.698 420.109 li
211.221 422.134 li
216.18 424.985 li
218.956 426.581 li
218.957 421.483 li
183.007 400.816 li
cp
.00392157 .133333 .203922 rgb
f
254.597 400.682 mo
251.845 402.289 li
246.929 405.158 li
243.443 407.192 li
238.52 410.065 li
235.035 412.1 li
230.111 414.973 li
226.626 417.007 li
221.702 419.881 li
218.957 421.483 li
216.181 419.887 li
211.222 417.036 li
207.699 415.011 li
202.74 412.16 li
199.217 410.134 li
194.258 407.284 li
190.742 405.263 li
185.776 402.408 li
183.007 400.816 li
185.752 399.214 li
190.675 396.34 li
194.161 394.306 li
199.084 391.433 li
202.57 389.398 li
207.493 386.525 li
210.979 384.491 li
215.895 381.622 li
218.647 380.015 li
221.416 381.607 li
226.382 384.462 li
229.898 386.483 li
234.857 389.334 li
238.38 391.359 li
243.339 394.21 li
246.862 396.236 li
251.821 399.086 li
254.597 400.682 li
cp
.00784314 .266667 .384314 rgb
f
247.251 399.73 mo
247.25 400.665 li
218.923 417.197 li
218.923 416.263 li
247.251 399.73 li
cp
1 .792157 0 rgb
f
218.923 416.263 mo
218.923 417.197 li
190.341 400.767 li
190.342 399.832 li
218.923 416.263 li
cp
.878431 .537255 .0627451 rgb
f
247.251 399.73 mo
218.923 416.263 li
190.342 399.832 li
218.669 383.3 li
247.251 399.73 li
cp
.941176 .654902 .180392 rgb
f
222.327 388.624 mo
222.326 389.558 li
218.855 391.584 li
218.856 390.65 li
222.327 388.624 li
cp
.972549 .976471 .988235 rgb
f
218.856 390.65 mo
218.855 391.584 li
215.354 389.571 li
215.354 388.637 li
218.856 390.65 li
cp
.611765 .709804 .8 rgb
f
222.327 388.624 mo
218.856 390.65 li
215.354 388.637 li
218.826 386.611 li
222.327 388.624 li
cp
.843137 .905882 .968627 rgb
f
227.124 391.382 mo
227.124 392.316 li
223.653 394.342 li
223.653 393.408 li
227.124 391.382 li
cp
.972549 .976471 .988235 rgb
f
223.653 393.408 mo
223.653 394.342 li
220.159 392.334 li
220.16 391.4 li
223.653 393.408 li
cp
.611765 .709804 .8 rgb
f
227.124 391.382 mo
223.653 393.408 li
220.16 391.4 li
223.631 389.374 li
227.124 391.382 li
cp
.843137 .905882 .968627 rgb
f
231.93 394.145 mo
231.929 395.079 li
228.458 397.105 li
228.459 396.17 li
231.93 394.145 li
cp
.972549 .976471 .988235 rgb
f
228.459 396.17 mo
228.458 397.105 li
224.956 395.092 li
224.957 394.158 li
228.459 396.17 li
cp
.611765 .709804 .8 rgb
f
231.93 394.145 mo
228.459 396.17 li
224.957 394.158 li
228.428 392.132 li
231.93 394.145 li
cp
.843137 .905882 .968627 rgb
f
236.735 396.907 mo
236.734 397.841 li
233.263 399.867 li
233.264 398.933 li
236.735 396.907 li
cp
.972549 .976471 .988235 rgb
f
233.264 398.933 mo
233.263 399.867 li
229.761 397.854 li
229.762 396.92 li
233.264 398.933 li
cp
.611765 .709804 .8 rgb
f
236.735 396.907 mo
233.264 398.933 li
229.762 396.92 li
233.233 394.894 li
236.735 396.907 li
cp
.843137 .905882 .968627 rgb
f
241.533 399.665 mo
241.532 400.599 li
238.061 402.625 li
238.061 401.691 li
241.533 399.665 li
cp
.972549 .976471 .988235 rgb
f
238.061 401.691 mo
238.061 402.625 li
234.559 400.612 li
234.56 399.678 li
238.061 401.691 li
cp
.611765 .709804 .8 rgb
f
241.533 399.665 mo
238.061 401.691 li
234.56 399.678 li
238.031 397.652 li
241.533 399.665 li
cp
.843137 .905882 .968627 rgb
f
217.505 391.438 mo
217.504 392.372 li
214.033 394.398 li
214.034 393.464 li
217.505 391.438 li
cp
.972549 .976471 .988235 rgb
f
214.034 393.464 mo
214.033 394.398 li
210.532 392.385 li
210.533 391.451 li
214.034 393.464 li
cp
.611765 .709804 .8 rgb
f
217.505 391.438 mo
214.034 393.464 li
210.533 391.451 li
214.004 389.426 li
217.505 391.438 li
cp
.843137 .905882 .968627 rgb
f
222.303 394.196 mo
222.302 395.131 li
218.831 397.156 li
218.832 396.222 li
222.303 394.196 li
cp
.972549 .976471 .988235 rgb
f
218.832 396.222 mo
218.831 397.156 li
215.337 395.148 li
215.338 394.214 li
218.832 396.222 li
cp
.611765 .709804 .8 rgb
f
222.303 394.196 mo
218.832 396.222 li
215.338 394.214 li
218.809 392.188 li
222.303 394.196 li
cp
.843137 .905882 .968627 rgb
f
227.108 396.959 mo
227.107 397.893 li
223.636 399.919 li
223.637 398.984 li
227.108 396.959 li
cp
.972549 .976471 .988235 rgb
f
223.637 398.984 mo
223.636 399.919 li
220.135 397.906 li
220.136 396.972 li
223.637 398.984 li
cp
.611765 .709804 .8 rgb
f
227.108 396.959 mo
223.637 398.984 li
220.136 396.972 li
223.607 394.946 li
227.108 396.959 li
cp
.843137 .905882 .968627 rgb
f
231.913 399.721 mo
231.912 400.655 li
228.441 402.681 li
228.442 401.747 li
231.913 399.721 li
cp
.972549 .976471 .988235 rgb
f
228.442 401.747 mo
228.441 402.681 li
224.94 400.668 li
224.941 399.734 li
228.442 401.747 li
cp
.611765 .709804 .8 rgb
f
231.913 399.721 mo
228.442 401.747 li
224.941 399.734 li
228.412 397.708 li
231.913 399.721 li
cp
.843137 .905882 .968627 rgb
f
236.711 402.479 mo
236.71 403.413 li
233.239 405.439 li
233.24 404.505 li
236.711 402.479 li
cp
.972549 .976471 .988235 rgb
f
233.24 404.505 mo
233.239 405.439 li
229.738 403.426 li
229.738 402.492 li
233.24 404.505 li
cp
.611765 .709804 .8 rgb
f
236.711 402.479 mo
233.24 404.505 li
229.738 402.492 li
233.209 400.466 li
236.711 402.479 li
cp
.843137 .905882 .968627 rgb
f
212.676 394.257 mo
212.675 395.191 li
209.204 397.217 li
209.205 396.282 li
212.676 394.257 li
cp
.972549 .976471 .988235 rgb
f
209.205 396.282 mo
209.204 397.217 li
205.703 395.204 li
205.704 394.27 li
209.205 396.282 li
cp
.611765 .709804 .8 rgb
f
212.676 394.257 mo
209.205 396.282 li
205.704 394.27 li
209.175 392.244 li
212.676 394.257 li
cp
.843137 .905882 .968627 rgb
f
217.474 397.015 mo
217.473 397.949 li
214.002 399.975 li
214.003 399.04 li
217.474 397.015 li
cp
.972549 .976471 .988235 rgb
f
214.003 399.04 mo
214.002 399.975 li
210.508 397.966 li
210.509 397.032 li
214.003 399.04 li
cp
.611765 .709804 .8 rgb
f
217.474 397.015 mo
214.003 399.04 li
210.509 397.032 li
213.98 395.006 li
217.474 397.015 li
cp
.843137 .905882 .968627 rgb
f
222.279 399.777 mo
222.278 400.711 li
218.807 402.737 li
218.808 401.803 li
222.279 399.777 li
cp
.972549 .976471 .988235 rgb
f
218.808 401.803 mo
218.807 402.737 li
215.306 400.724 li
215.307 399.79 li
218.808 401.803 li
cp
.611765 .709804 .8 rgb
f
222.279 399.777 mo
218.808 401.803 li
215.307 399.79 li
218.778 397.764 li
222.279 399.777 li
cp
.843137 .905882 .968627 rgb
f
227.084 402.539 mo
227.083 403.474 li
223.612 405.499 li
223.613 404.565 li
227.084 402.539 li
cp
.972549 .976471 .988235 rgb
f
223.613 404.565 mo
223.612 405.499 li
220.111 403.487 li
220.112 402.552 li
223.613 404.565 li
cp
.611765 .709804 .8 rgb
f
227.084 402.539 mo
223.613 404.565 li
220.112 402.552 li
223.583 400.527 li
227.084 402.539 li
cp
.843137 .905882 .968627 rgb
f
231.882 405.297 mo
231.881 406.232 li
228.41 408.258 li
228.411 407.323 li
231.882 405.297 li
cp
.972549 .976471 .988235 rgb
f
228.411 407.323 mo
228.41 408.258 li
224.909 406.245 li
224.91 405.31 li
228.411 407.323 li
cp
.611765 .709804 .8 rgb
f
231.882 405.297 mo
228.411 407.323 li
224.91 405.31 li
228.381 403.285 li
231.882 405.297 li
cp
.843137 .905882 .968627 rgb
f
207.854 397.071 mo
207.854 398.005 li
204.382 400.031 li
204.383 399.096 li
207.854 397.071 li
cp
.972549 .976471 .988235 rgb
f
204.383 399.096 mo
204.382 400.031 li
200.881 398.018 li
200.882 397.084 li
204.383 399.096 li
cp
.611765 .709804 .8 rgb
f
207.854 397.071 mo
204.383 399.096 li
200.882 397.084 li
204.353 395.058 li
207.854 397.071 li
cp
.843137 .905882 .968627 rgb
f
212.652 399.829 mo
212.651 400.763 li
209.18 402.789 li
209.181 401.855 li
212.652 399.829 li
cp
.972549 .976471 .988235 rgb
f
209.181 401.855 mo
209.18 402.789 li
205.686 400.78 li
205.687 399.846 li
209.181 401.855 li
cp
.611765 .709804 .8 rgb
f
212.652 399.829 mo
209.181 401.855 li
205.687 399.846 li
209.158 397.82 li
212.652 399.829 li
cp
.843137 .905882 .968627 rgb
f
217.457 402.591 mo
217.456 403.525 li
213.985 405.551 li
213.986 404.617 li
217.457 402.591 li
cp
.972549 .976471 .988235 rgb
f
213.986 404.617 mo
213.985 405.551 li
210.484 403.538 li
210.485 402.604 li
213.986 404.617 li
cp
.611765 .709804 .8 rgb
f
217.457 402.591 mo
213.986 404.617 li
210.485 402.604 li
213.956 400.578 li
217.457 402.591 li
cp
.843137 .905882 .968627 rgb
f
222.262 405.353 mo
222.261 406.288 li
218.79 408.313 li
218.791 407.379 li
222.262 405.353 li
cp
.972549 .976471 .988235 rgb
f
218.791 407.379 mo
218.79 408.313 li
215.289 406.301 li
215.29 405.366 li
218.791 407.379 li
cp
.611765 .709804 .8 rgb
f
222.262 405.353 mo
218.791 407.379 li
215.29 405.366 li
218.761 403.341 li
222.262 405.353 li
cp
.843137 .905882 .968627 rgb
f
227.06 408.112 mo
227.059 409.046 li
223.588 411.072 li
223.589 410.137 li
227.06 408.112 li
cp
.972549 .976471 .988235 rgb
f
223.589 410.137 mo
223.588 411.072 li
220.087 409.059 li
220.088 408.125 li
223.589 410.137 li
cp
.611765 .709804 .8 rgb
f
227.06 408.112 mo
223.589 410.137 li
220.088 408.125 li
223.559 406.099 li
227.06 408.112 li
cp
.843137 .905882 .968627 rgb
f
203.033 399.885 mo
203.032 400.819 li
199.561 402.845 li
199.562 401.91 li
203.033 399.885 li
cp
.972549 .976471 .988235 rgb
f
199.562 401.91 mo
199.561 402.845 li
196.059 400.832 li
196.06 399.898 li
199.562 401.91 li
cp
.611765 .709804 .8 rgb
f
203.033 399.885 mo
199.562 401.91 li
196.06 399.898 li
199.531 397.872 li
203.033 399.885 li
cp
.843137 .905882 .968627 rgb
f
207.83 402.643 mo
207.83 403.577 li
204.358 405.603 li
204.359 404.669 li
207.83 402.643 li
cp
.972549 .976471 .988235 rgb
f
204.359 404.669 mo
204.358 405.603 li
200.865 403.594 li
200.865 402.66 li
204.359 404.669 li
cp
.611765 .709804 .8 rgb
f
207.83 402.643 mo
204.359 404.669 li
200.865 402.66 li
204.337 400.634 li
207.83 402.643 li
cp
.843137 .905882 .968627 rgb
f
212.636 405.405 mo
212.635 406.339 li
209.164 408.365 li
209.165 407.431 li
212.636 405.405 li
cp
.972549 .976471 .988235 rgb
f
209.165 407.431 mo
209.164 408.365 li
205.662 406.352 li
205.663 405.418 li
209.165 407.431 li
cp
.611765 .709804 .8 rgb
f
212.636 405.405 mo
209.165 407.431 li
205.663 405.418 li
209.134 403.392 li
212.636 405.405 li
cp
.843137 .905882 .968627 rgb
f
217.441 408.168 mo
217.44 409.102 li
213.969 411.128 li
213.97 410.193 li
217.441 408.168 li
cp
.972549 .976471 .988235 rgb
f
213.97 410.193 mo
213.969 411.128 li
210.467 409.115 li
210.468 408.181 li
213.97 410.193 li
cp
.611765 .709804 .8 rgb
f
217.441 408.168 mo
213.97 410.193 li
210.468 408.181 li
213.939 406.155 li
217.441 408.168 li
cp
.843137 .905882 .968627 rgb
f
222.238 410.926 mo
222.238 411.86 li
218.766 413.886 li
218.767 412.951 li
222.238 410.926 li
cp
.972549 .976471 .988235 rgb
f
218.767 412.951 mo
218.766 413.886 li
215.265 411.873 li
215.266 410.939 li
218.767 412.951 li
cp
.611765 .709804 .8 rgb
f
222.238 410.926 mo
218.767 412.951 li
215.266 410.939 li
218.737 408.913 li
222.238 410.926 li
cp
.843137 .905882 .968627 rgb
f
190.743 405.864 mo
190.74 409.6 li
189.229 410.482 li
189.233 406.745 li
190.743 405.864 li
cp
.00784314 .352941 .509804 rgb
f
189.233 406.745 mo
189.229 410.482 li
184.263 407.627 li
184.267 403.89 li
189.233 406.745 li
cp
.00392157 .133333 .203922 rgb
f
190.743 405.864 mo
189.233 406.745 li
184.267 403.89 li
185.777 403.009 li
190.743 405.864 li
cp
.00784314 .266667 .384314 rgb
f
199.218 410.736 mo
199.214 414.472 li
197.704 415.354 li
197.708 411.617 li
199.218 410.736 li
cp
.00784314 .352941 .509804 rgb
f
197.708 411.617 mo
197.704 415.354 li
192.745 412.503 li
192.749 408.766 li
197.708 411.617 li
cp
.00392157 .133333 .203922 rgb
f
199.218 410.736 mo
197.708 411.617 li
192.749 408.766 li
194.259 407.885 li
199.218 410.736 li
cp
.00784314 .266667 .384314 rgb
f
216.182 420.488 mo
216.179 424.225 li
214.668 425.106 li
214.672 421.37 li
216.182 420.488 li
cp
.00784314 .352941 .509804 rgb
f
214.672 421.37 mo
214.668 425.106 li
209.709 422.255 li
209.713 418.519 li
214.672 421.37 li
cp
.00392157 .133333 .203922 rgb
f
216.182 420.488 mo
214.672 421.37 li
209.713 418.519 li
211.223 417.637 li
216.182 420.488 li
cp
.00784314 .266667 .384314 rgb
f
207.615 415.526 mo
207.611 419.263 li
206.101 420.145 li
206.105 416.408 li
207.615 415.526 li
cp
.00784314 .352941 .509804 rgb
f
206.105 416.408 mo
206.101 420.145 li
201.142 417.294 li
201.146 413.557 li
206.105 416.408 li
cp
.00392157 .133333 .203922 rgb
f
207.615 415.526 mo
206.105 416.408 li
201.146 413.557 li
202.656 412.676 li
207.615 415.526 li
cp
.00784314 .266667 .384314 rgb
f
253.37 403.766 mo
253.366 407.502 li
248.45 410.372 li
248.454 406.635 li
253.37 403.766 li
cp
.00784314 .352941 .509804 rgb
f
248.454 406.635 mo
248.45 410.372 li
246.927 409.496 li
246.93 405.759 li
248.454 406.635 li
cp
.00392157 .133333 .203922 rgb
f
253.37 403.766 mo
248.454 406.635 li
246.93 405.759 li
251.846 402.89 li
253.37 403.766 li
cp
.00784314 .266667 .384314 rgb
f
244.968 408.669 mo
244.965 412.406 li
240.041 415.279 li
240.045 411.542 li
244.968 408.669 li
cp
.00784314 .352941 .509804 rgb
f
240.045 411.542 mo
240.041 415.279 li
238.518 414.403 li
238.521 410.667 li
240.045 411.542 li
cp
.00392157 .133333 .203922 rgb
f
244.968 408.669 mo
240.045 411.542 li
238.521 410.667 li
243.445 407.793 li
244.968 408.669 li
cp
.00784314 .266667 .384314 rgb
f
236.559 413.577 mo
236.556 417.314 li
231.632 420.187 li
231.636 416.45 li
236.559 413.577 li
cp
.00784314 .352941 .509804 rgb
f
231.636 416.45 mo
231.632 420.187 li
230.109 419.311 li
230.112 415.574 li
231.636 416.45 li
cp
.00392157 .133333 .203922 rgb
f
236.559 413.577 mo
231.636 416.45 li
230.112 415.574 li
235.036 412.701 li
236.559 413.577 li
cp
.00784314 .266667 .384314 rgb
f
228.15 418.484 mo
228.147 422.221 li
223.223 425.095 li
223.227 421.358 li
228.15 418.484 li
cp
.00784314 .352941 .509804 rgb
f
223.227 421.358 mo
223.223 425.095 li
221.7 424.219 li
221.703 420.482 li
223.227 421.358 li
cp
.00392157 .133333 .203922 rgb
f
228.15 418.484 mo
223.227 421.358 li
221.703 420.482 li
226.627 417.608 li
228.15 418.484 li
cp
.00784314 .266667 .384314 rgb
f
204.115 417.015 mo
204.114 417.949 li
202.197 419.068 200.083 420.293 199.234 420.78 cv
199.235 419.846 li
200.084 419.359 202.197 418.134 204.115 417.015 cv
cp
.972549 .976471 .988235 rgb
f
203.088 422.061 mo
203.087 422.996 li
202.353 423.423 li
202.354 422.489 li
203.088 422.061 li
cp
f
202.354 422.489 mo
202.353 423.423 li
197.761 420.783 li
197.761 419.849 li
202.354 422.489 li
cp
.611765 .709804 .8 rgb
f
204.115 417.015 mo
202.197 418.134 200.084 419.359 199.235 419.846 cv
203.088 422.061 li
202.354 422.489 li
197.761 419.849 li
198.132 419.633 li
198.175 419.608 200.942 418.01 203.375 416.59 cv
204.115 417.015 li
cp
.843137 .905882 .968627 rgb
f
212.648 421.921 mo
212.647 422.855 li
210.512 424.101 li
210.513 423.167 li
212.648 421.921 li
cp
.972549 .976471 .988235 rgb
f
211.706 424.702 mo
211.705 425.637 li
209.039 424.104 li
209.04 423.17 li
211.706 424.702 li
cp
.611765 .709804 .8 rgb
f
209.643 426.764 mo
209.642 427.698 li
208.902 427.272 li
208.903 426.338 li
209.643 426.764 li
cp
f
213.179 424.7 mo
213.178 425.634 li
209.642 427.698 li
209.643 426.764 li
213.179 424.7 li
cp
.972549 .976471 .988235 rgb
f
212.648 421.921 mo
210.513 423.167 li
213.179 424.7 li
209.643 426.764 li
208.903 426.338 li
211.706 424.702 li
209.04 423.17 li
211.908 421.496 li
212.648 421.921 li
cp
.843137 .905882 .968627 rgb
f
187.062 407.212 mo
187.061 408.147 li
181.463 411.414 li
181.464 410.48 li
187.062 407.212 li
cp
.972549 .976471 .988235 rgb
f
181.464 410.48 mo
181.463 411.414 li
180.723 410.989 li
180.724 410.055 li
181.464 410.48 li
cp
.611765 .709804 .8 rgb
f
187.062 407.212 mo
181.464 410.48 li
180.724 410.055 li
186.322 406.787 li
187.062 407.212 li
cp
.843137 .905882 .968627 rgb
f
195.244 411.916 mo
195.243 412.85 li
192.811 414.27 190.073 415.884 190.03 415.91 cv
190.031 414.976 li
190.074 414.95 192.812 413.336 195.244 411.916 cv
cp
.972549 .976471 .988235 rgb
f
190.031 414.976 mo
190.03 415.91 li
189.667 416.13 li
189.667 415.196 li
190.031 414.976 li
cp
f
189.667 415.196 mo
189.667 416.13 li
187 414.598 li
187.001 413.663 li
189.667 415.196 li
cp
.611765 .709804 .8 rgb
f
195.244 411.916 mo
192.812 413.336 190.074 414.95 190.031 414.976 cv
189.667 415.196 li
187.001 413.663 li
187.735 413.235 li
189.654 414.339 li
190.496 413.847 192.595 412.614 194.504 411.491 cv
195.244 411.916 li
cp
.843137 .905882 .968627 rgb
f
258.371 406.114 mo
258.37 407.048 li
253.89 409.663 li
253.89 408.729 li
258.371 406.114 li
cp
.972549 .976471 .988235 rgb
f
253.89 408.729 mo
253.89 409.663 li
250.857 407.92 li
250.858 406.985 li
253.89 408.729 li
cp
.611765 .709804 .8 rgb
f
263.44 409.028 mo
263.439 409.962 li
258.37 407.048 li
258.371 406.114 li
263.44 409.028 li
cp
f
264.173 408.6 mo
264.172 409.534 li
263.439 409.962 li
263.44 409.028 li
264.173 408.6 li
cp
.972549 .976471 .988235 rgb
f
264.173 408.6 mo
263.44 409.028 li
258.371 406.114 li
253.89 408.729 li
250.858 406.985 li
251.584 406.562 li
253.877 407.88 li
258.365 405.26 li
264.173 408.6 li
cp
.843137 .905882 .968627 rgb
f
251.088 416.237 mo
251.087 417.171 li
250.354 417.599 li
250.354 416.665 li
251.088 416.237 li
cp
.972549 .976471 .988235 rgb
f
250.354 416.665 mo
250.354 417.599 li
242.252 412.942 li
242.253 412.008 li
250.354 416.665 li
cp
.611765 .709804 .8 rgb
f
251.088 416.237 mo
250.354 416.665 li
242.253 412.008 li
242.986 411.579 li
251.088 416.237 li
cp
.843137 .905882 .968627 rgb
f
241.482 420.986 mo
241.481 421.92 li
240.524 421.377 237.957 419.917 235.873 418.719 cv
235.213 418.34 234.601 417.986 234.105 417.697 cv
234.106 416.763 li
234.602 417.052 235.214 417.405 235.874 417.785 cv
237.958 418.983 240.525 420.442 241.482 420.986 cv
cp
.972549 .976471 .988235 rgb
f
238.395 423.645 mo
238.394 424.579 li
237.654 424.154 li
237.655 423.22 li
238.395 423.645 li
cp
.611765 .709804 .8 rgb
f
242.955 420.983 mo
242.954 421.918 li
238.394 424.579 li
238.395 423.645 li
242.955 420.983 li
cp
.972549 .976471 .988235 rgb
f
242.955 420.983 mo
238.395 423.645 li
237.655 423.22 li
241.482 420.986 li
240.525 420.442 237.958 418.983 235.874 417.785 cv
235.214 417.405 234.602 417.052 234.106 416.763 cv
234.839 416.335 li
235.325 416.618 235.925 416.963 236.572 417.336 cv
239.164 418.826 242.534 420.742 242.581 420.769 cv
242.955 420.983 li
cp
.843137 .905882 .968627 rgb
f
234.444 425.95 mo
234.443 426.884 li
233.71 427.313 li
233.711 426.378 li
234.444 425.95 li
cp
.972549 .976471 .988235 rgb
f
233.711 426.378 mo
233.71 427.313 li
225.609 422.655 li
225.609 421.721 li
233.711 426.378 li
cp
.611765 .709804 .8 rgb
f
234.444 425.95 mo
233.711 426.378 li
225.609 421.721 li
226.343 421.293 li
234.444 425.95 li
cp
.843137 .905882 .968627 rgb
f
180.515 35.7985 mo
182.524 34.6378 184.179 35.5841 184.192 37.8931 cv
184.401 113.125 li
184.408 115.436 182.758 118.276 180.749 119.435 cv
62.1725 187.898 li
60.1565 189.06 58.5013 188.129 58.495 185.824 cv
58.2822 110.585 li
58.2762 108.276 59.916 105.424 61.9352 104.259 cv
180.515 35.7985 li
cp
.0509804 .85098 .831373 rgb
f
268.805 168.722 mo
268.781 168.984 li
268.759 169.24 li
268.704 169.471 li
268.633 169.724 li
268.543 169.93 li
268.507 170.023 268.47 170.115 268.42 170.202 cv
268.309 170.393 li
268.251 170.494 268.186 170.59 268.118 170.692 cv
267.97 170.867 li
267.875 170.991 267.767 171.114 267.646 171.231 cv
267.471 171.404 li
267.243 171.601 li
267.16 171.672 267.073 171.743 266.977 171.808 cv
266.895 171.872 266.802 171.934 266.71 171.996 cv
266.574 172.091 266.432 172.184 266.278 172.276 cv
219.711 199.155 li
219.705 196.353 li
209.416 190.37 li
224.273 181.749 li
224.27 180.639 li
225.235 181.197 li
245.425 169.477 li
245.4 162.434 li
235.956 156.972 li
233.783 158.229 li
233.776 155.717 li
230.614 153.886 li
224.332 150.255 li
213.389 143.93 li
210.658 145.514 li
210.646 142.344 li
201.198 136.883 li
199.08 138.109 li
199.074 135.658 li
189.635 130.202 li
179.849 135.877 li
179.858 138.046 li
177.981 136.965 li
168.197 142.644 li
168.203 144.802 li
166.329 143.72 li
156.545 149.404 li
156.548 151.568 li
154.674 150.483 li
144.9 156.167 li
144.906 158.334 li
143.025 157.249 li
133.236 162.924 li
133.245 165.088 li
131.38 164.009 li
121.584 169.69 li
121.59 171.851 li
119.725 170.769 li
109.932 176.453 li
109.938 178.614 li
108.07 177.538 li
98.2867 183.213 li
98.2927 185.374 li
96.4279 184.298 li
86.6318 189.976 li
86.6533 197.019 li
92.1278 200.185 li
89.7974 201.538 li
89.7914 199.087 li
80.3467 193.629 li
70.5598 199.312 li
70.5813 206.356 li
80.0169 211.815 li
82.1377 210.582 li
82.1437 213.036 li
91.5852 218.501 li
93.706 217.271 li
93.7124 219.725 li
103.163 225.184 li
105.265 223.96 li
105.272 226.407 li
114.722 231.87 li
116.892 230.609 li
116.899 233.124 li
126.343 238.586 li
147.085 226.552 li
147.082 225.14 li
148.3 225.85 li
163.598 216.969 li
163.595 215.357 li
164.985 216.161 li
170.58 212.915 li
170.589 215.616 li
180.857 221.592 li
142.782 243.574 li
142.406 243.792 141.993 243.977 141.571 244.144 cv
141.456 244.19 141.333 244.233 141.213 244.276 cv
140.936 244.372 140.655 244.458 140.365 244.532 cv
140.113 244.6 139.854 244.671 139.592 244.724 cv
139.231 244.801 138.861 244.865 138.491 244.911 cv
138.272 244.939 li
137.792 244.992 137.308 245.016 136.817 245.023 cv
136.586 245.026 li
136.112 245.023 135.637 244.992 135.171 244.942 cv
134.934 244.921 li
134.471 244.865 134.015 244.788 133.572 244.686 cv
133.31 244.625 li
132.881 244.517 132.468 244.394 132.07 244.246 cv
131.935 244.199 li
131.469 244.024 131.025 243.814 130.613 243.574 cv
59.5801 202.296 li
57.9186 201.328 57.0894 200.065 57.0862 198.795 cv
57.0925 201.14 57.0985 203.489 57.1049 205.838 cv
57.108 207.105 57.9372 208.372 59.5985 209.337 cv
130.637 250.617 li
131.035 250.852 131.469 251.055 131.922 251.231 cv
131.95 251.243 li
132.092 251.289 li
132.376 251.397 132.665 251.493 132.958 251.576 cv
133.078 251.61 133.205 251.634 133.325 251.662 cv
133.418 251.684 133.504 251.708 133.599 251.73 cv
133.855 251.792 li
134.136 251.847 134.419 251.896 134.709 251.93 cv
134.962 251.964 li
135.174 251.986 li
135.298 252.001 135.421 252.016 135.541 252.023 cv
135.828 252.048 136.108 252.063 136.389 252.069 cv
136.608 252.069 li
136.836 252.063 li
136.978 252.063 137.126 252.069 137.268 252.057 cv
137.588 252.048 137.903 252.023 138.217 251.992 cv
138.297 251.983 li
138.51 251.952 li
138.775 251.918 139.04 251.89 139.299 251.841 cv
139.407 251.822 139.505 251.782 139.616 251.764 cv
139.872 251.711 140.122 251.647 140.372 251.582 cv
140.526 251.536 140.686 251.511 140.837 251.465 cv
140.979 251.418 141.108 251.363 141.244 251.311 cv
141.358 251.277 141.472 251.231 141.589 251.184 cv
142.011 251.018 142.421 250.836 142.8 250.614 cv
266.296 179.314 li
266.395 179.255 266.488 179.206 266.583 179.144 cv
266.731 179.039 li
266.827 178.977 266.916 178.913 267.002 178.848 cv
267.264 178.638 li
267.483 178.451 li
267.582 178.367 li
267.674 178.262 li
267.788 178.145 267.899 178.022 268.001 177.905 cv
268.084 177.806 li
268.131 177.738 li
268.208 177.634 268.269 177.538 268.331 177.433 cv
268.42 177.292 li
268.445 177.245 li
268.494 177.149 268.528 177.054 268.571 176.958 cv
268.642 176.804 li
268.651 176.768 li
268.725 176.493 li
268.772 176.317 li
268.775 176.281 li
268.805 176.015 li
268.824 175.824 li
268.824 175.766 li
268.818 173.417 268.812 171.068 268.805 168.722 cv
cp
.819608 .862745 .901961 rgb
f
266.324 165.227 mo
195.285 123.946 li
191.944 122.004 186.47 122.009 183.113 123.946 cv
59.6202 195.247 li
56.2542 197.189 56.2388 200.348 59.5801 202.296 cv
130.613 243.574 li
133.942 245.51 139.419 245.519 142.782 243.574 cv
266.278 172.276 li
269.632 170.334 269.647 167.159 266.324 165.227 cv
cp
.909804 .92549 .937255 rgb
f
184.685 146.473 mo
194.13 151.926 li
184.346 157.613 li
174.898 152.148 li
184.685 146.473 li
cp
.0470588 .184314 .294118 rgb
f
199.752 151.121 mo
209.2 156.583 li
199.416 162.261 li
189.965 156.799 li
199.752 151.121 li
cp
f
213.389 143.93 mo
224.332 150.255 li
230.614 153.886 li
233.776 155.717 li
217.261 165.304 li
207.816 159.841 li
212.89 156.895 li
201.944 150.56 li
213.389 143.93 li
cp
f
188.745 157.511 mo
198.192 162.976 li
188.406 168.654 li
178.958 163.189 li
188.745 157.511 li
cp
f
235.956 156.972 mo
245.4 162.434 li
225.219 174.153 li
215.765 168.691 li
235.956 156.972 li
cp
f
214.807 169.246 mo
224.255 174.708 li
208.959 183.58 li
199.506 178.121 li
214.807 169.246 li
cp
f
184.651 173.287 mo
194.089 178.746 li
184.312 184.427 li
174.864 178.965 li
184.651 173.287 li
cp
f
189.635 130.202 mo
199.074 135.658 li
189.296 141.342 li
179.849 135.877 li
189.635 130.202 li
cp
f
177.981 136.965 mo
187.432 142.418 li
177.645 148.107 li
168.197 142.644 li
177.981 136.965 li
cp
f
201.198 136.883 mo
210.646 142.344 li
195.486 151.143 li
186.029 145.687 li
201.198 136.883 li
cp
f
166.329 143.72 mo
175.78 149.182 li
165.993 154.857 li
156.545 149.404 li
166.329 143.72 li
cp
f
154.674 150.483 mo
164.125 155.949 li
154.341 161.623 li
144.9 156.167 li
154.674 150.483 li
cp
f
173.539 152.931 mo
182.993 158.393 li
173.206 164.071 li
163.761 158.612 li
173.539 152.931 li
cp
f
143.025 157.249 mo
152.473 162.711 li
142.69 168.389 li
133.236 162.924 li
143.025 157.249 li
cp
f
162.402 159.401 mo
171.856 164.86 li
162.063 170.538 li
152.615 165.079 li
162.402 159.401 li
cp
f
206.549 160.572 mo
215.997 166.037 li
206.21 171.718 li
196.768 166.253 li
206.549 160.572 li
cp
f
131.38 164.009 mo
140.824 169.474 li
131.032 175.155 li
121.584 169.69 li
131.38 164.009 li
cp
f
177.728 163.901 mo
187.176 169.36 li
177.398 175.041 li
167.944 169.585 li
177.728 163.901 li
cp
f
151.268 165.865 mo
160.716 171.327 li
150.932 177.005 li
141.481 171.543 li
151.268 165.865 li
cp
f
195.538 166.965 mo
204.989 172.427 li
195.202 178.105 li
185.745 172.646 li
195.538 166.965 li
cp
f
166.72 170.288 mo
176.171 175.753 li
166.388 181.431 li
156.937 175.966 li
166.72 170.288 li
cp
f
119.725 170.769 mo
129.173 176.237 li
119.386 181.909 li
109.932 176.453 li
119.725 170.769 li
cp
f
140.134 172.325 mo
149.576 177.785 li
139.798 183.472 li
130.341 178.006 li
140.134 172.325 li
cp
f
155.716 176.681 mo
165.164 182.143 li
155.374 187.827 li
145.92 182.365 li
155.716 176.681 li
cp
f
108.07 177.538 mo
117.521 183 li
107.731 188.678 li
98.2867 183.213 li
108.07 177.538 li
cp
f
128.985 178.793 mo
138.436 184.251 li
128.652 189.93 li
119.21 184.474 li
128.985 178.793 li
cp
f
173.28 179.887 mo
182.722 185.349 li
172.935 191.033 li
163.487 185.568 li
173.28 179.887 li
cp
f
144.702 183.065 mo
154.15 188.53 li
144.373 194.211 li
134.912 188.755 li
144.702 183.065 li
cp
f
96.4279 184.298 mo
105.876 189.757 li
96.0797 195.441 li
86.6318 189.976 li
96.4279 184.298 li
cp
f
117.854 185.253 mo
127.302 190.722 li
117.515 196.4 li
108.061 190.937 li
117.854 185.253 li
cp
f
162.386 186.206 mo
171.834 191.671 li
162.048 197.346 li
152.596 191.884 li
162.386 186.206 li
cp
f
133.695 189.458 mo
143.143 194.926 li
133.35 200.604 li
123.899 195.139 li
133.695 189.458 li
cp
f
151.379 192.596 mo
160.827 198.058 li
151.04 203.736 li
141.592 198.274 li
151.379 192.596 li
cp
f
80.3467 193.629 mo
89.7914 199.087 li
80.0014 204.771 li
70.5598 199.312 li
80.3467 193.629 li
cp
f
122.684 195.854 mo
132.135 201.313 li
122.348 206.991 li
112.894 201.532 li
122.684 195.854 li
cp
f
198.513 178.706 mo
207.961 184.168 li
164.967 209.118 li
155.519 203.659 li
198.513 178.706 li
cp
f
140.489 198.921 mo
149.933 204.377 li
140.15 210.064 li
130.702 204.599 li
140.489 198.921 li
cp
f
106.224 192.007 mo
115.672 197.469 li
91.5669 211.458 li
82.1222 205.995 li
106.224 192.007 li
cp
f
205.772 188.256 mo
219.705 196.353 li
184.5 216.673 li
170.564 208.575 li
205.772 188.256 li
cp
f
111.631 202.272 mo
121.088 207.731 li
103.138 218.14 li
93.6906 212.681 li
111.631 202.272 li
cp
f
154.129 204.466 mo
163.576 209.925 li
148.284 218.806 li
138.837 213.338 li
154.129 204.466 li
cp
f
129.355 205.376 mo
138.802 210.838 li
114.701 224.826 li
105.253 219.367 li
129.355 205.376 li
cp
f
137.616 214.047 mo
147.06 219.509 li
126.328 231.546 li
116.874 226.084 li
137.616 214.047 li
cp
f
186.645 27.3187 mo
186.427 27.1908 li
185.844 26.8531 185.268 26.5172 184.688 26.1795 cv
184.106 25.8437 183.529 25.5062 182.949 25.1685 cv
181.831 24.5227 180.296 24.6108 178.603 25.5864 cv
55.1106 96.8867 li
51.7474 98.8289 49.0133 103.562 49.0256 107.418 cv
49.257 189.578 li
49.2599 191.495 49.9441 192.849 51.0448 193.484 cv
52.4936 194.328 53.9421 195.173 55.3941 196.014 cv
54.2906 195.376 53.6126 194.023 53.6031 192.103 cv
53.3752 109.947 li
53.3597 106.091 56.097 101.356 59.4599 99.4128 cv
182.956 28.1138 li
184.645 27.1384 186.183 27.0488 187.296 27.6978 cv
187.077 27.5683 186.861 27.4433 186.645 27.3187 cv
cp
.819608 .862745 .901961 rgb
f
184.401 113.125 mo
184.192 37.8931 li
184.179 35.5841 182.524 34.6378 180.515 35.7985 cv
61.9352 104.259 li
59.916 105.424 58.2762 108.276 58.2822 110.585 cv
58.495 185.824 li
58.5013 188.129 60.1565 189.06 62.1725 187.898 cv
180.749 119.435 li
182.758 118.276 184.408 115.436 184.401 113.125 cv
cp
182.956 28.1138 mo
186.31 26.1767 189.071 27.7378 189.081 31.5956 cv
189.312 113.757 li
189.324 117.612 186.581 122.359 183.224 124.299 cv
59.7282 195.601 li
56.365 197.54 53.6154 195.965 53.6031 192.103 cv
53.3752 109.947 li
53.3597 106.091 56.097 101.356 59.4599 99.4128 cv
182.956 28.1138 li
cp
.972549 .976471 .988235 rgb
f
72.4055 121.185 mo
72.3867 114.528 li
72.384 113.6 72.0308 113.28 71.1825 113.77 cv
69.3409 114.833 li
68.2857 115.443 68.0812 116.442 68.0828 117.012 cv
68.1017 123.67 li
68.1052 124.906 68.8507 124.69 69.4301 124.355 cv
71.1268 123.376 li
71.9544 122.898 72.4086 122.279 72.4055 121.185 cv
cp
71.7338 110.856 mo
74.0926 109.494 74.8215 110.74 74.827 112.666 cv
74.8484 120.227 li
74.8552 122.628 73.6999 124.486 71.7548 125.609 cv
68.8788 127.27 li
66.9131 128.404 65.6683 127.956 65.6615 125.531 cv
65.6404 118.089 li
65.6335 115.664 66.892 113.651 68.8577 112.517 cv
71.7338 110.856 li
cp
f
117.347 95.238 mo
117.328 88.5807 li
117.326 87.6535 116.972 87.3334 116.124 87.8232 cv
114.282 88.8864 li
113.227 89.4956 113.043 90.4829 113.045 91.0535 cv
113.064 97.7108 li
113.067 98.9471 113.792 98.743 114.392 98.3965 cv
116.089 97.4169 li
116.896 96.9511 117.35 96.3316 117.347 95.238 cv
cp
116.675 84.9091 mo
119.034 83.5472 119.784 84.7815 119.789 86.7073 cv
119.811 94.2681 li
119.817 96.6694 118.641 98.5392 116.696 99.6621 cv
113.82 101.323 li
111.855 102.457 110.61 102.009 110.603 99.5841 cv
110.582 92.1422 li
110.575 89.7171 111.854 87.6926 113.799 86.5696 cv
116.675 84.9091 li
cp
f
87.4527 136.05 mo
87.4338 129.393 li
87.4312 128.466 87.078 128.146 86.2296 128.636 cv
84.3881 129.699 li
83.3328 130.308 83.1284 131.283 83.13 131.878 cv
83.1489 138.535 li
83.1523 139.748 83.8979 139.555 84.4773 139.221 cv
86.174 138.241 li
87.0016 137.763 87.4558 137.144 87.4527 136.05 cv
cp
86.7809 125.721 mo
89.1398 124.36 89.8893 125.594 89.8948 127.52 cv
89.9162 135.08 li
89.923 137.482 88.747 139.352 86.802 140.475 cv
83.9259 142.135 li
81.9602 143.27 80.7155 142.798 80.7086 140.396 cv
80.6876 132.955 li
80.6807 130.529 81.9392 128.517 83.9048 127.382 cv
86.7809 125.721 li
cp
f
87.5193 159.565 mo
87.5004 152.884 li
87.4978 151.956 87.1446 151.66 86.2963 152.15 cv
84.4547 153.213 li
83.3995 153.822 83.195 154.798 83.1966 155.368 cv
83.2155 162.026 li
83.219 163.262 83.9645 163.046 84.5439 162.711 cv
86.2406 161.732 li
87.0682 161.254 87.5224 160.658 87.5193 159.565 cv
cp
86.8476 149.236 mo
89.2064 147.874 89.956 149.108 89.9614 151.034 cv
89.9828 158.571 li
89.9896 160.972 88.8137 162.866 86.8687 163.989 cv
83.9926 165.649 li
82.0269 166.784 80.7821 166.312 80.7752 163.887 cv
80.7541 156.445 li
80.7473 154.044 82.0058 152.031 83.9715 150.896 cv
86.8476 149.236 li
cp
f
72.5389 168.214 mo
72.5199 161.533 li
72.5173 160.605 72.1641 160.309 71.3158 160.799 cv
69.4743 161.862 li
68.419 162.471 68.2145 163.447 68.2161 164.017 cv
68.235 170.675 li
68.2385 171.911 68.984 171.695 69.5634 171.36 cv
71.26 170.381 li
72.0877 169.903 72.542 169.307 72.5389 168.214 cv
cp
71.8671 157.885 mo
74.2259 156.523 74.9548 157.769 74.9603 159.695 cv
74.9817 167.232 li
74.9885 169.633 73.8332 171.515 71.8882 172.638 cv
69.0121 174.298 li
67.0464 175.433 65.8016 174.961 65.7947 172.536 cv
65.7736 165.094 li
65.7668 162.693 67.0253 160.68 68.991 159.545 cv
71.8671 157.885 li
cp
f
132.328 86.5889 mo
132.309 79.9317 li
132.306 79.0044 131.953 78.6844 131.104 79.1742 cv
129.263 80.2374 li
128.208 80.8467 128.024 81.8339 128.026 82.4045 cv
128.044 89.0618 li
128.048 90.2981 128.773 90.094 129.373 89.7476 cv
131.07 88.768 li
131.876 88.3021 132.331 87.6826 132.328 86.5889 cv
cp
131.656 76.2601 mo
134.015 74.8983 134.764 76.1325 134.77 78.0583 cv
134.791 85.6191 li
134.798 88.0204 133.622 89.8902 131.677 91.0132 cv
128.822 92.6617 li
126.835 93.8085 125.59 93.3602 125.583 90.9351 cv
125.562 83.4932 li
125.555 81.0681 126.835 79.0436 128.78 77.9206 cv
131.656 76.2601 li
cp
f
147.308 77.9399 mo
147.289 71.2827 li
147.287 70.3554 146.933 70.0354 146.085 70.5252 cv
144.243 71.5884 li
143.209 72.1857 143.004 73.1849 143.006 73.7556 cv
143.025 80.4128 li
143.028 81.6491 143.753 81.445 144.353 81.0986 cv
146.05 80.119 li
146.878 79.6411 147.311 79.0336 147.308 77.9399 cv
cp
146.636 67.6111 mo
148.995 66.2492 149.745 67.4835 149.75 69.4093 cv
149.772 76.9701 li
149.778 79.3714 148.602 81.2412 146.678 82.3522 cv
143.802 84.0127 li
141.816 85.1596 140.571 84.7112 140.564 82.2861 cv
140.543 74.8442 li
140.536 72.4191 141.815 70.3946 143.76 69.2716 cv
146.636 67.6111 li
cp
f
87.6661 101.658 mo
87.7079 116.399 li
85.2456 117.82 li
85.2118 105.885 li
82.7516 108.02 li
82.7463 106.165 li
85.2245 103.067 li
87.6661 101.658 li
cp
f
102.647 93.0086 mo
102.688 107.75 li
100.226 109.171 li
100.192 97.2357 li
97.7321 99.3706 li
97.7268 97.516 li
100.205 94.4182 li
102.647 93.0086 li
cp
f
162.569 58.4126 mo
162.61 73.1536 li
160.169 74.5633 li
160.135 62.6278 li
157.675 64.7627 li
157.669 62.9081 li
160.148 59.8103 li
162.569 58.4126 li
cp
f
72.7523 133.821 mo
72.794 148.562 li
70.3318 149.984 li
70.2979 138.048 li
67.8377 140.183 li
67.8324 138.328 li
70.3107 135.231 li
72.7523 133.821 li
cp
f
102.78 140.037 mo
102.822 154.778 li
100.359 156.2 li
100.326 144.241 li
97.8653 146.376 li
97.8601 144.545 li
100.338 141.447 li
102.78 140.037 li
cp
f
117.414 118.752 mo
117.395 112.095 li
117.392 111.168 117.039 110.848 116.191 111.338 cv
114.349 112.401 li
113.294 113.01 113.11 113.973 113.112 114.568 cv
113.131 121.225 li
113.134 122.438 113.859 122.257 114.459 121.911 cv
116.156 120.931 li
116.963 120.465 117.417 119.846 117.414 118.752 cv
cp
116.742 108.424 mo
119.101 107.062 119.85 108.296 119.856 110.222 cv
119.877 117.782 li
119.884 120.184 118.708 122.053 116.763 123.176 cv
113.887 124.837 li
111.921 125.972 110.676 125.5 110.67 123.098 cv
110.649 115.657 li
110.642 113.231 111.921 111.207 113.866 110.084 cv
116.742 108.424 li
cp
f
132.461 133.618 mo
132.442 126.937 li
132.439 126.009 132.086 125.713 131.238 126.203 cv
129.396 127.266 li
128.341 127.875 128.157 128.839 128.159 129.41 cv
128.178 136.067 li
128.181 137.303 128.906 137.099 129.506 136.753 cv
131.203 135.773 li
132.01 135.307 132.464 134.711 132.461 133.618 cv
cp
131.789 123.289 mo
134.148 121.927 134.897 123.161 134.903 125.087 cv
134.924 132.624 li
134.931 135.025 133.755 136.919 131.81 138.042 cv
128.955 139.69 li
126.968 140.837 125.724 140.365 125.717 137.94 cv
125.696 130.498 li
125.689 128.097 126.968 126.072 128.913 124.949 cv
131.789 123.289 li
cp
f
147.441 124.969 mo
147.423 118.288 li
147.42 117.36 147.067 117.064 146.218 117.554 cv
144.377 118.617 li
143.342 119.214 143.138 120.19 143.139 120.76 cv
143.158 127.418 li
143.162 128.654 143.886 128.45 144.486 128.104 cv
146.183 127.124 li
147.011 126.646 147.445 126.062 147.441 124.969 cv
cp
146.77 114.64 mo
149.128 113.278 149.878 114.512 149.883 116.438 cv
149.905 123.975 li
149.912 126.376 148.736 128.27 146.811 129.381 cv
143.935 131.041 li
141.949 132.188 140.704 131.716 140.697 129.291 cv
140.676 121.849 li
140.669 119.448 141.949 117.423 143.893 116.3 cv
146.77 114.64 li
cp
f
102.713 116.523 mo
102.755 131.264 li
100.293 132.686 li
100.259 120.75 li
97.7987 122.885 li
97.7935 121.03 li
100.272 117.933 li
102.713 116.523 li
cp
f
132.674 99.225 mo
132.716 113.966 li
130.274 115.376 li
130.241 103.44 li
127.78 105.575 li
127.775 103.72 li
130.253 100.623 li
132.674 99.225 li
cp
f
117.76 131.388 mo
117.802 146.129 li
115.361 147.539 li
115.327 135.58 li
112.867 137.715 li
112.861 135.884 li
115.34 132.786 li
117.76 131.388 li
cp
f
177.476 60.5225 mo
177.457 53.8652 li
177.454 52.9379 177.101 52.618 176.253 53.1077 cv
174.411 54.171 li
173.356 54.7802 173.172 55.7675 173.174 56.3381 cv
173.193 62.9953 li
173.196 64.2317 173.921 64.0275 174.521 63.6811 cv
176.218 62.7015 li
177.025 62.2356 177.479 61.6161 177.476 60.5225 cv
cp
176.804 50.1937 mo
179.163 48.8318 179.913 50.066 179.918 51.9919 cv
179.939 59.5526 li
179.946 61.9539 178.77 63.8237 176.825 64.9467 cv
173.97 66.5952 li
171.983 67.7421 170.739 67.2938 170.732 64.8686 cv
170.711 57.4268 li
170.704 55.0017 171.983 52.9771 173.928 51.8542 cv
176.804 50.1937 li
cp
f
177.543 84.0367 mo
177.524 77.3795 li
177.521 76.4523 177.168 76.1324 176.32 76.6221 cv
174.478 77.6854 li
173.423 78.2946 173.239 79.258 173.241 79.8524 cv
173.26 86.5096 li
173.263 87.7222 173.988 87.5419 174.588 87.1954 cv
176.285 86.2158 li
177.091 85.75 177.546 85.1305 177.543 84.0367 cv
cp
176.871 73.708 mo
179.23 72.3461 179.979 73.5804 179.985 75.5062 cv
180.006 83.067 li
180.013 85.4683 178.837 87.3381 176.892 88.461 cv
174.037 90.1096 li
172.05 91.2564 170.805 90.7844 170.799 88.383 cv
170.777 80.9411 li
170.771 78.516 172.05 76.4914 173.995 75.3685 cv
176.871 73.708 li
cp
f
177.889 96.6729 mo
177.931 111.414 li
175.49 112.824 li
175.456 100.864 li
172.995 102.999 li
172.99 101.168 li
175.468 98.0706 li
177.889 96.6729 li
cp
f
162.355 92.8052 mo
162.336 86.148 li
162.334 85.2208 161.98 84.9008 161.153 85.3787 cv
159.311 86.4419 li
158.256 87.0511 158.052 88.0264 158.053 88.6209 cv
158.072 95.2781 li
158.076 96.4907 158.8 96.3103 159.4 95.9639 cv
161.097 94.9843 li
161.925 94.5065 162.358 93.899 162.355 92.8052 cv
cp
161.684 82.4764 mo
164.042 81.1146 164.792 82.3488 164.797 84.2746 cv
164.819 91.8354 li
164.826 94.2368 163.649 96.1065 161.725 97.2175 cv
158.849 98.8781 li
156.883 100.013 155.618 99.5528 155.611 97.1515 cv
155.59 89.7096 li
155.583 87.2845 156.862 85.2599 158.807 84.137 cv
161.684 82.4764 li
cp
f
162.702 105.441 mo
162.744 120.182 li
160.302 121.592 li
160.268 109.633 li
157.808 111.768 li
157.803 109.937 li
160.281 106.839 li
162.702 105.441 li
cp
f
147.655 90.5759 mo
147.697 105.317 li
145.255 106.727 li
145.221 94.7911 li
142.761 96.926 li
142.756 95.0715 li
145.234 91.9736 li
147.655 90.5759 li
cp
f
46.0351 175.949 mo
41.2951 173.194 li
46.8448 163.582 li
51.5847 166.336 li
46.0351 175.949 li
cp
.843137 .905882 .968627 rgb
f
51.5847 166.336 mo
52.3753 167.177 53.2755 167.893 54.2858 168.467 cv
55.2946 169.044 56.371 169.454 57.5007 169.708 cv
51.9511 179.32 li
46.0351 175.949 li
51.5847 166.336 li
cp
.972549 .976471 .988235 rgb
f
43.2063 174.337 mo
46.0351 175.949 li
51.9511 179.32 li
54.7799 180.932 li
34.4506 216.127 li
22.8913 209.523 li
43.2063 174.337 li
cp
.980392 .458824 .392157 rgb
f
22.8913 209.523 mo
18.1514 206.769 li
38.4664 171.582 li
43.2063 174.337 li
22.8913 209.523 li
cp
.831373 .243137 .243137 rgb
f
54.189 168.411 mo
49.4491 165.657 li
48.478 165.092 47.6101 164.396 46.8447 163.582 cv
40.3984 156.726 41.2536 141.569 49.4373 127.409 cv
51.0127 124.677 52.7578 122.16 54.6147 119.892 cv
59.3546 122.647 li
57.4977 124.915 55.7526 127.432 54.1772 130.163 cv
45.9935 144.323 45.1383 159.48 51.5847 166.336 cv
52.35 167.15 53.2179 167.847 54.189 168.411 cv
cp
f
59.3546 122.647 mo
54.6147 119.892 li
58.1639 115.557 62.1213 112.129 66.082 109.842 cv
68.5098 108.44 70.9388 107.468 73.2758 106.977 cv
78.0157 109.732 li
75.6788 110.222 73.2497 111.195 70.8219 112.597 cv
66.8612 114.883 62.9038 118.311 59.3546 122.647 cv
cp
f
78.0157 109.732 mo
73.2758 106.977 li
76.7459 106.249 80.013 106.586 82.7717 108.163 cv
87.5116 110.918 li
84.7529 109.34 81.4858 109.004 78.0157 109.732 cv
cp
f
83.6427 146.955 mo
90.6331 134.847 90.596 121.772 83.5599 117.762 cv
80.0419 115.757 75.4382 116.397 70.8402 119.052 cv
66.2423 121.707 61.65 126.376 58.1548 132.43 cv
51.1643 144.538 51.2014 157.613 58.2376 161.622 cv
61.7556 163.627 66.3593 162.987 70.9572 160.333 cv
75.5552 157.678 80.1475 153.009 83.6427 146.955 cv
cp
87.5116 110.918 mo
96.7447 116.179 96.7933 133.333 87.6202 149.221 cv
83.0337 157.174 77.0084 163.305 70.9755 166.788 cv
66.2609 169.51 61.5414 170.614 57.5007 169.708 cv
56.371 169.454 55.2946 169.044 54.2858 168.467 cv
53.2755 167.893 52.3753 167.177 51.5847 166.336 cv
45.1383 159.48 45.9935 144.323 54.1772 130.163 cv
58.7638 122.211 64.7891 116.08 70.8219 112.597 cv
76.8547 109.114 82.8951 108.278 87.5116 110.918 cv
cp
.980392 .458824 .392157 rgb
f
70.8402 119.052 mo
75.4382 116.397 80.0419 115.757 83.5599 117.762 cv
90.596 121.772 90.6331 134.847 83.6427 146.955 cv
80.1475 153.009 75.5552 157.678 70.9573 160.333 cv
66.3593 162.987 61.7556 163.627 58.2376 161.622 cv
51.2014 157.613 51.1644 144.538 58.1548 132.43 cv
61.65 126.376 66.2423 121.707 70.8402 119.052 cv
cp
.0509804 .85098 .831373 rgb
f
74.332 122.877 mo
74.419 153.549 li
69.2956 156.507 li
69.2252 131.673 li
64.106 136.115 li
64.0951 132.256 li
69.2517 125.81 li
74.332 122.877 li
cp
.972549 .976471 .988235 rgb
f
379.004 271.81 mo
376.818 270.54 li
376.641 208.018 li
378.827 209.289 li
379.004 271.81 li
cp
.611765 .709804 .8 rgb
f
378.827 209.289 mo
376.641 208.018 li
417.641 184.346 li
419.828 185.617 li
378.827 209.289 li
cp
.843137 .905882 .968627 rgb
f
419.828 185.617 mo
420.005 248.139 li
379.004 271.81 li
378.827 209.289 li
419.828 185.617 li
cp
.972549 .976471 .988235 rgb
f
383.658 274.913 mo
381.471 273.642 li
381.294 211.12 li
383.481 212.391 li
383.658 274.913 li
cp
.611765 .709804 .8 rgb
f
383.481 212.391 mo
381.294 211.12 li
422.295 187.449 li
424.481 188.719 li
383.481 212.391 li
cp
.843137 .905882 .968627 rgb
f
424.481 188.719 mo
424.659 251.241 li
383.658 274.913 li
383.481 212.391 li
424.481 188.719 li
cp
.972549 .976471 .988235 rgb
f
388.483 278.745 mo
386.296 277.474 li
386.119 214.953 li
388.306 216.223 li
388.483 278.745 li
cp
.611765 .709804 .8 rgb
f
388.306 216.223 mo
386.119 214.953 li
427.12 191.281 li
429.307 192.552 li
388.306 216.223 li
cp
.843137 .905882 .968627 rgb
f
429.307 192.552 mo
429.484 255.073 li
388.483 278.745 li
388.306 216.223 li
429.307 192.552 li
cp
.972549 .976471 .988235 rgb
f
426.801 226.333 mo
426.812 230.088 li
391.011 250.758 li
391 247.003 li
426.801 226.333 li
cp
.611765 .709804 .8 rgb
f
426.756 210.321 mo
426.767 214.077 li
390.965 234.747 li
390.955 230.991 li
426.756 210.321 li
cp
f
415.136 209.005 mo
415.147 212.761 li
390.943 226.735 li
390.932 222.98 li
415.136 209.005 li
cp
.980392 .458824 .392157 rgb
f
426.779 218.333 mo
426.789 222.088 li
390.988 242.758 li
390.977 239.003 li
426.779 218.333 li
cp
.611765 .709804 .8 rgb
f
426.847 242.356 mo
426.858 246.111 li
391.056 266.781 li
391.046 263.026 li
426.847 242.356 li
cp
f
426.824 234.344 mo
426.835 238.1 li
391.033 258.77 li
391.023 255.014 li
426.824 234.344 li
cp
f
58.0435 387.115 mo
58.0233 394.229 li
58.015 397.157 56.0911 400.08 52.2503 402.312 cv
44.5138 406.808 31.9338 406.808 24.1467 402.312 cv
20.2325 400.053 18.2772 397.085 18.2856 394.122 cv
18.3057 387.008 li
18.2973 389.971 20.2527 392.938 24.1669 395.198 cv
31.954 399.694 44.5339 399.694 52.2704 395.198 cv
56.1112 392.966 58.0351 390.043 58.0435 387.115 cv
cp
.980392 .458824 .392157 rgb
f
52.1788 378.919 mo
59.9659 383.415 60 390.706 52.2704 395.198 cv
44.5339 399.694 31.954 399.694 24.1669 395.198 cv
16.3867 390.706 16.3457 383.419 24.0822 378.924 cv
31.8118 374.432 44.3987 374.428 52.1788 378.919 cv
cp
.831373 .243137 .243137 rgb
f
58.0435 378.292 mo
58.0233 385.407 li
58.015 388.335 56.0911 391.258 52.2503 393.49 cv
44.5138 397.986 31.9338 397.986 24.1467 393.49 cv
20.2325 391.23 18.2772 388.263 18.2856 385.299 cv
18.3057 378.185 li
18.2973 381.148 20.2527 384.116 24.1669 386.375 cv
31.954 390.871 44.5339 390.871 52.2704 386.375 cv
56.1112 384.143 58.0351 381.22 58.0435 378.292 cv
cp
.980392 .458824 .392157 rgb
f
52.1788 370.097 mo
59.9659 374.593 60 381.883 52.2704 386.375 cv
44.5339 390.871 31.954 390.871 24.1669 386.375 cv
16.3867 381.884 16.3457 374.597 24.0822 370.101 cv
31.8118 365.609 44.3987 365.605 52.1788 370.097 cv
cp
.831373 .243137 .243137 rgb
f
58.0435 369.47 mo
58.0233 376.584 li
58.015 379.512 56.0911 382.435 52.2503 384.667 cv
44.5138 389.163 31.9338 389.163 24.1467 384.667 cv
20.2325 382.407 18.2772 379.44 18.2856 376.476 cv
18.3057 369.362 li
18.2973 372.326 20.2527 375.293 24.1669 377.553 cv
31.954 382.049 44.5339 382.049 52.2704 377.553 cv
56.1112 375.321 58.0351 372.397 58.0435 369.47 cv
cp
.980392 .458824 .392157 rgb
f
52.1788 361.274 mo
59.9659 365.77 60 373.061 52.2704 377.553 cv
44.5339 382.049 31.954 382.049 24.1669 377.553 cv
16.3867 373.061 16.3457 365.774 24.0822 361.278 cv
31.8118 356.786 44.3987 356.782 52.1788 361.274 cv
cp
.831373 .243137 .243137 rgb
f
58.0435 360.647 mo
58.0233 367.761 li
58.015 370.689 56.0911 373.612 52.2503 375.844 cv
44.5138 380.34 31.9338 380.34 24.1467 375.844 cv
20.2325 373.584 18.2772 370.617 18.2856 367.654 cv
18.3057 360.539 li
18.2973 363.503 20.2527 366.47 24.1669 368.73 cv
31.954 373.226 44.5339 373.226 52.2704 368.73 cv
56.1112 366.498 58.0351 363.575 58.0435 360.647 cv
cp
.980392 .458824 .392157 rgb
f
52.1788 352.451 mo
59.9659 356.947 60 364.238 52.2704 368.73 cv
44.5339 373.226 31.954 373.226 24.1669 368.73 cv
16.3867 364.238 16.3457 356.951 24.0822 352.455 cv
31.8118 347.963 44.3987 347.959 52.1788 352.451 cv
cp
.831373 .243137 .243137 rgb
f
58.0435 351.824 mo
58.0233 358.938 li
58.015 361.866 56.0911 364.789 52.2503 367.021 cv
44.5138 371.517 31.9338 371.517 24.1467 367.022 cv
20.2325 364.762 18.2772 361.794 18.2856 358.831 cv
18.3057 351.717 li
18.2973 354.68 20.2527 357.647 24.1669 359.907 cv
31.954 364.403 44.5339 364.403 52.2704 359.907 cv
56.1112 357.675 58.0351 354.752 58.0435 351.824 cv
cp
.980392 .458824 .392157 rgb
f
52.1788 343.629 mo
59.9659 348.124 60 355.415 52.2704 359.907 cv
44.5339 364.403 31.954 364.403 24.1669 359.907 cv
16.3867 355.415 16.3457 348.129 24.0822 343.633 cv
31.8118 339.141 44.3987 339.137 52.1788 343.629 cv
cp
.831373 .243137 .243137 rgb
f
58.0435 343.001 mo
58.0233 350.116 li
58.015 353.044 56.0911 355.967 52.2503 358.199 cv
44.5138 362.695 31.9338 362.695 24.1467 358.199 cv
20.2325 355.939 18.2772 352.972 18.2856 350.008 cv
18.3057 342.894 li
18.2973 345.857 20.2527 348.825 24.1669 351.085 cv
31.954 355.58 44.5339 355.58 52.2704 351.084 cv
56.1112 348.852 58.0351 345.929 58.0435 343.001 cv
cp
.980392 .458824 .392157 rgb
f
52.1788 334.806 mo
59.9659 339.302 60 346.592 52.2704 351.084 cv
44.5339 355.58 31.954 355.58 24.1669 351.085 cv
16.3867 346.593 16.3457 339.306 24.0822 334.81 cv
31.8118 330.318 44.3987 330.314 52.1788 334.806 cv
cp
.831373 .243137 .243137 rgb
f
109.905 387.115 mo
109.884 394.229 li
109.876 397.157 107.952 400.08 104.111 402.312 cv
96.375 406.808 83.795 406.808 76.0079 402.312 cv
72.0937 400.053 70.1384 397.085 70.1468 394.122 cv
70.1669 387.008 li
70.1585 389.971 72.1139 392.938 76.0281 395.198 cv
83.8152 399.694 96.3951 399.694 104.132 395.198 cv
107.972 392.966 109.896 390.043 109.905 387.115 cv
cp
.333333 .839216 .823529 rgb
f
104.04 378.919 mo
111.827 383.415 111.861 390.706 104.132 395.198 cv
96.3951 399.694 83.8152 399.694 76.0281 395.198 cv
68.2479 390.706 68.2069 383.419 75.9434 378.924 cv
83.673 374.432 96.2599 374.428 104.04 378.919 cv
cp
.247059 .619608 .611765 rgb
f
109.905 378.292 mo
109.884 385.407 li
109.876 388.335 107.952 391.258 104.111 393.49 cv
96.375 397.986 83.795 397.986 76.0079 393.49 cv
72.0937 391.23 70.1384 388.263 70.1468 385.299 cv
70.1669 378.185 li
70.1585 381.148 72.1139 384.116 76.0281 386.375 cv
83.8152 390.871 96.3951 390.871 104.132 386.375 cv
107.972 384.143 109.896 381.22 109.905 378.292 cv
cp
.333333 .839216 .823529 rgb
f
104.04 370.097 mo
111.827 374.593 111.861 381.883 104.132 386.375 cv
96.3951 390.871 83.8152 390.871 76.0281 386.375 cv
68.2479 381.884 68.2069 374.597 75.9434 370.101 cv
83.673 365.609 96.2599 365.605 104.04 370.097 cv
cp
.247059 .619608 .611765 rgb
f
109.905 369.47 mo
109.884 376.584 li
109.876 379.512 107.952 382.435 104.111 384.667 cv
96.375 389.163 83.795 389.163 76.0079 384.667 cv
72.0937 382.407 70.1384 379.44 70.1468 376.476 cv
70.1669 369.362 li
70.1585 372.326 72.1139 375.293 76.0281 377.553 cv
83.8152 382.049 96.3951 382.049 104.132 377.553 cv
107.972 375.321 109.896 372.397 109.905 369.47 cv
cp
.333333 .839216 .823529 rgb
f
104.04 361.274 mo
111.827 365.77 111.861 373.061 104.132 377.553 cv
96.3951 382.049 83.8152 382.049 76.0281 377.553 cv
68.2479 373.061 68.2069 365.774 75.9434 361.278 cv
83.673 356.786 96.2599 356.782 104.04 361.274 cv
cp
.247059 .619608 .611765 rgb
f
109.905 360.647 mo
109.884 367.761 li
109.876 370.689 107.952 373.612 104.111 375.844 cv
96.375 380.34 83.795 380.34 76.0079 375.844 cv
72.0937 373.584 70.1384 370.617 70.1468 367.654 cv
70.1669 360.539 li
70.1585 363.503 72.1139 366.47 76.0281 368.73 cv
83.8152 373.226 96.3951 373.226 104.132 368.73 cv
107.972 366.498 109.896 363.575 109.905 360.647 cv
cp
.333333 .839216 .823529 rgb
f
104.04 352.451 mo
111.827 356.947 111.861 364.238 104.132 368.73 cv
96.3951 373.226 83.8152 373.226 76.0281 368.73 cv
68.2479 364.238 68.2069 356.951 75.9434 352.455 cv
83.673 347.963 96.2599 347.959 104.04 352.451 cv
cp
.247059 .619608 .611765 rgb
f
109.905 351.824 mo
109.884 358.938 li
109.876 361.866 107.952 364.789 104.111 367.021 cv
96.375 371.517 83.795 371.517 76.0079 367.022 cv
72.0937 364.762 70.1384 361.794 70.1468 358.831 cv
70.1669 351.717 li
70.1585 354.68 72.1139 357.647 76.0281 359.907 cv
83.8152 364.403 96.3951 364.403 104.132 359.907 cv
107.972 357.675 109.896 354.752 109.905 351.824 cv
cp
.333333 .839216 .823529 rgb
f
104.04 343.629 mo
111.827 348.124 111.861 355.415 104.132 359.907 cv
96.3951 364.403 83.8152 364.403 76.0281 359.907 cv
68.2479 355.415 68.2069 348.129 75.9434 343.633 cv
83.673 339.141 96.2599 339.137 104.04 343.629 cv
cp
.247059 .619608 .611765 rgb
f
109.905 343.001 mo
109.884 350.116 li
109.876 353.044 107.952 355.967 104.111 358.199 cv
96.375 362.695 83.795 362.695 76.0079 358.199 cv
72.0937 355.939 70.1384 352.972 70.1468 350.008 cv
70.1669 342.894 li
70.1585 345.857 72.1139 348.825 76.0281 351.085 cv
83.8152 355.58 96.3951 355.58 104.132 351.084 cv
107.972 348.852 109.896 345.929 109.905 343.001 cv
cp
.333333 .839216 .823529 rgb
f
104.04 334.806 mo
111.827 339.302 111.861 346.592 104.132 351.084 cv
96.3951 355.58 83.8152 355.58 76.0281 351.085 cv
68.2479 346.593 68.2069 339.306 75.9434 334.81 cv
83.673 330.318 96.2599 330.314 104.04 334.806 cv
cp
.247059 .619608 .611765 rgb
f
87.0532 404.974 mo
87.033 412.089 li
87.0247 415.017 85.1008 417.94 81.26 420.172 cv
73.5235 424.668 60.9435 424.668 53.1564 420.172 cv
49.2422 417.912 47.2869 414.945 47.2953 411.981 cv
47.3154 404.867 li
47.307 407.83 49.2624 410.798 53.1766 413.058 cv
60.9637 417.553 73.5436 417.553 81.2801 413.057 cv
85.1209 410.825 87.0449 407.902 87.0532 404.974 cv
cp
1 .792157 0 rgb
f
81.1885 396.779 mo
88.9756 401.275 89.0097 408.565 81.2801 413.057 cv
73.5436 417.553 60.9637 417.553 53.1766 413.058 cv
45.3964 408.566 45.3554 401.279 53.0919 396.783 cv
60.8215 392.291 73.4084 392.287 81.1885 396.779 cv
cp
.941176 .654902 .180392 rgb
f
87.0532 396.152 mo
87.033 403.266 li
87.0247 406.194 85.1008 409.117 81.26 411.349 cv
73.5235 415.845 60.9435 415.845 53.1564 411.349 cv
49.2422 409.089 47.2869 406.122 47.2953 403.159 cv
47.3154 396.044 li
47.307 399.008 49.2624 401.975 53.1766 404.235 cv
60.9637 408.731 73.5436 408.731 81.2801 404.235 cv
85.1209 402.003 87.0449 399.08 87.0532 396.152 cv
cp
1 .792157 0 rgb
f
81.1885 387.956 mo
88.9756 392.452 89.0097 399.743 81.2801 404.235 cv
73.5436 408.731 60.9637 408.731 53.1766 404.235 cv
45.3964 399.743 45.3554 392.456 53.0919 387.96 cv
60.8215 383.468 73.4084 383.464 81.1885 387.956 cv
cp
.941176 .654902 .180392 rgb
f
87.0532 387.329 mo
87.033 394.443 li
87.0247 397.371 85.1008 400.294 81.26 402.526 cv
73.5235 407.022 60.9435 407.022 53.1564 402.526 cv
49.2422 400.267 47.2869 397.299 47.2953 394.336 cv
47.3154 387.221 li
47.307 390.185 49.2624 393.152 53.1766 395.412 cv
60.9637 399.908 73.5436 399.908 81.2801 395.412 cv
85.1209 393.18 87.0449 390.257 87.0532 387.329 cv
cp
1 .792157 0 rgb
f
81.1885 379.133 mo
88.9756 383.629 89.0097 390.92 81.2801 395.412 cv
73.5436 399.908 60.9637 399.908 53.1766 395.412 cv
45.3964 390.92 45.3554 383.634 53.0919 379.138 cv
60.8215 374.646 73.4084 374.642 81.1885 379.133 cv
cp
.941176 .654902 .180392 rgb
f
87.0532 378.506 mo
87.033 385.621 li
87.0247 388.548 85.1008 391.471 81.26 393.703 cv
73.5235 398.199 60.9435 398.2 53.1564 393.704 cv
49.2422 391.444 47.2869 388.477 47.2953 385.513 cv
47.3154 378.399 li
47.307 381.362 49.2624 384.329 53.1766 386.589 cv
60.9637 391.085 73.5436 391.085 81.2801 386.589 cv
85.1209 384.357 87.0449 381.434 87.0532 378.506 cv
cp
1 .792157 0 rgb
f
81.1885 370.311 mo
88.9756 374.806 89.0097 382.097 81.2801 386.589 cv
73.5436 391.085 60.9637 391.085 53.1766 386.589 cv
45.3964 382.098 45.3554 374.811 53.0919 370.315 cv
60.8215 365.823 73.4084 365.819 81.1885 370.311 cv
cp
.941176 .654902 .180392 rgb
f
87.0532 369.684 mo
87.033 376.798 li
87.0247 379.726 85.1008 382.649 81.26 384.881 cv
73.5235 389.377 60.9435 389.377 53.1564 384.881 cv
49.2422 382.621 47.2869 379.654 47.2953 376.69 cv
47.3154 369.576 li
47.307 372.539 49.2624 375.507 53.1766 377.767 cv
60.9637 382.263 73.5436 382.263 81.2801 377.767 cv
85.1209 375.534 87.0449 372.611 87.0532 369.684 cv
cp
1 .792157 0 rgb
f
81.1885 361.488 mo
88.9756 365.984 89.0097 373.275 81.2801 377.767 cv
73.5436 382.263 60.9637 382.263 53.1766 377.767 cv
45.3964 373.275 45.3554 365.988 53.0919 361.492 cv
60.8215 357 73.4084 356.996 81.1885 361.488 cv
cp
.941176 .654902 .180392 rgb
f
87.0532 360.861 mo
87.033 367.975 li
87.0247 370.903 85.1008 373.826 81.26 376.058 cv
73.5235 380.554 60.9435 380.554 53.1564 376.058 cv
49.2422 373.798 47.2869 370.831 47.2953 367.868 cv
47.3154 360.753 li
47.307 363.717 49.2624 366.684 53.1766 368.944 cv
60.9637 373.44 73.5436 373.44 81.2801 368.944 cv
85.1209 366.712 87.0449 363.789 87.0532 360.861 cv
cp
1 .792157 0 rgb
f
81.1885 352.665 mo
88.9756 357.161 89.0097 364.452 81.2801 368.944 cv
73.5436 373.44 60.9637 373.44 53.1766 368.944 cv
45.3964 364.452 45.3554 357.165 53.0919 352.669 cv
60.8215 348.177 73.4084 348.173 81.1885 352.665 cv
cp
.941176 .654902 .180392 rgb
f
346.025 280.762 mo
346.44 278.091 344.918 275.331 341.436 273.251 cv
335.102 269.463 324.682 269.358 318.164 273.016 cv
316.999 260.971 li
324.197 256.932 335.705 257.049 342.7 261.231 cv
346.547 263.529 348.227 266.577 347.771 269.526 cv
347.188 273.272 346.608 277.017 346.025 280.762 cv
cp
.894118 .607843 .113725 rgb
f
311.559 269.425 mo
311.104 266.383 312.926 263.257 316.999 260.971 cv
318.164 273.016 li
314.477 275.085 312.829 277.916 313.239 280.67 cv
312.678 276.922 312.12 273.174 311.559 269.425 cv
cp
f
318.164 273.016 mo
324.682 269.358 335.102 269.463 341.436 273.251 cv
347.771 277.038 347.624 283.073 341.106 286.73 cv
334.588 290.388 324.168 290.282 317.834 286.495 cv
311.497 282.708 311.646 276.672 318.164 273.016 cv
cp
f
316.999 260.971 mo
324.197 256.932 335.705 257.049 342.7 261.231 cv
349.699 265.414 349.535 272.079 342.337 276.118 cv
335.138 280.157 323.63 280.041 316.633 275.858 cv
309.637 271.676 309.8 265.01 316.999 260.971 cv
cp
f
313.239 280.67 mo
312.678 276.922 312.12 273.174 311.559 269.425 cv
311.908 271.759 313.596 274.043 316.633 275.858 cv
323.63 280.041 335.138 280.157 342.337 276.118 cv
345.58 274.299 347.396 271.945 347.771 269.526 cv
347.188 273.272 346.608 277.017 346.025 280.762 cv
345.685 282.952 344.043 285.082 341.106 286.73 cv
334.588 290.388 324.168 290.282 317.834 286.495 cv
315.084 284.851 313.554 282.783 313.239 280.67 cv
cp
f
316.999 260.971 mo
324.197 256.932 335.705 257.049 342.7 261.231 cv
349.699 265.414 349.535 272.079 342.337 276.118 cv
335.138 280.157 323.63 280.041 316.633 275.858 cv
309.637 271.676 309.8 265.01 316.999 260.971 cv
cp
.996078 .996078 1 rgb
f
346.281 227.16 mo
337.41 221.857 322.822 221.71 313.697 226.83 cv
308.535 229.728 306.227 233.69 306.801 237.546 cv
308.387 248.172 309.972 258.798 311.559 269.424 cv
311.104 266.383 312.926 263.257 316.999 260.971 cv
324.197 256.932 335.705 257.049 342.7 261.231 cv
346.547 263.529 348.227 266.576 347.771 269.525 cv
349.415 258.908 351.063 248.291 352.709 237.675 cv
353.29 233.936 351.155 230.073 346.281 227.16 cv
cp
f
315.019 227.367 mo
323.324 222.707 336.599 222.841 344.671 227.667 cv
352.744 232.492 352.556 240.181 344.251 244.842 cv
335.948 249.501 322.671 249.367 314.599 244.542 cv
306.526 239.717 306.716 232.027 315.019 227.367 cv
cp
.290196 .141176 0 rgb
f
311.559 269.424 mo
309.972 258.798 308.387 248.172 306.801 237.546 cv
307.243 240.505 309.382 243.401 313.235 245.704 cv
322.104 251.006 336.692 251.153 345.819 246.033 cv
349.932 243.725 352.234 240.741 352.709 237.675 cv
351.063 248.291 349.415 258.908 347.771 269.525 cv
347.396 271.945 345.58 274.298 342.337 276.118 cv
335.138 280.157 323.63 280.041 316.633 275.858 cv
313.594 274.043 311.906 271.758 311.559 269.424 cv
cp
.819608 .862745 .901961 rgb
f
329.875 266.998 mo
329.949 265 329.155 263.177 329.08 261.208 cv
329 259.142 330.551 256.704 332.663 256.251 cv
329.201 254.996 325.055 257.649 323.395 262.185 cv
321.791 266.573 323.101 271.115 326.313 272.561 cv
328.059 271.092 329.781 269.443 329.875 266.998 cv
cp
.290196 .141176 0 rgb
f
333.396 256.587 mo
331.891 256.944 330.453 257.925 329.896 259.423 cv
329.193 261.326 330.234 263.376 330.455 265.281 cv
330.627 266.752 330.597 268.327 329.848 269.653 cv
329.136 270.91 328.145 271.91 327.058 272.829 cv
330.436 273.763 334.342 271.142 335.942 266.773 cv
337.481 262.562 336.333 258.208 333.396 256.587 cv
cp
f
400.162 339.88 mo
407.086 335.857 li
410.652 335.988 414.196 337.07 417.737 339.107 cv
410.814 343.13 li
407.272 341.093 403.727 340.012 400.162 339.88 cv
cp
1 .580392 .101961 rgb
f
396.745 330.434 mo
403.669 326.408 li
408.314 326.506 413.061 327.952 417.803 330.691 cv
410.878 334.714 li
406.136 331.976 401.391 330.529 396.745 330.434 cv
cp
1 .756863 .0156863 rgb
f
410.814 343.13 mo
410.912 343.186 li
414.28 345.141 417.646 347.961 421.023 351.656 cv
421.129 351.772 421.196 351.846 421.262 351.919 cv
421.352 352.019 421.441 352.117 421.531 352.221 cv
420.377 354.043 419.225 355.869 418.07 357.694 cv
415.568 354.969 413.201 352.963 410.831 351.597 cv
408.461 350.229 406.09 349.499 403.58 349.329 cv
402.439 346.181 401.302 343.03 400.162 339.88 cv
403.727 340.012 407.272 341.093 410.814 343.13 cv
cp
1 .580392 .101961 rgb
f
410.814 343.13 mo
417.737 339.107 li
417.835 339.161 li
421.203 341.117 424.568 343.936 427.947 347.632 cv
428.052 347.749 428.12 347.822 428.187 347.896 cv
428.275 347.995 428.366 348.094 428.456 348.194 cv
421.531 352.221 li
421.441 352.117 421.352 352.019 421.262 351.919 cv
421.196 351.846 421.129 351.772 421.023 351.656 cv
417.646 347.961 414.28 345.141 410.912 343.186 cv
410.814 343.13 li
cp
f
421.531 352.221 mo
428.456 348.194 li
427.302 350.02 426.147 351.846 424.994 353.672 cv
418.07 357.694 li
419.225 355.869 420.377 354.043 421.531 352.221 cv
cp
.929412 .372549 0 rgb
f
393.327 320.985 mo
400.252 316.959 li
405.942 317.023 411.853 318.817 417.757 322.213 cv
410.835 326.237 li
404.928 322.84 399.019 321.047 393.327 320.985 cv
cp
.388235 .94902 1 rgb
f
410.878 334.714 mo
417.803 330.691 li
422.545 333.428 427.282 337.457 431.914 342.716 cv
424.99 346.74 li
420.359 341.482 415.62 337.452 410.878 334.714 cv
cp
1 .756863 .0156863 rgb
f
424.99 346.74 mo
431.914 342.716 li
430.761 344.542 429.608 346.368 428.456 348.194 cv
421.531 352.221 li
422.683 350.392 423.838 348.566 424.99 346.74 cv
cp
.839216 .635294 .0117647 rgb
f
410.878 334.714 mo
415.62 337.452 420.359 341.482 424.99 346.74 cv
423.838 348.566 422.683 350.392 421.531 352.221 cv
421.441 352.117 421.352 352.019 421.262 351.919 cv
421.062 351.698 li
417.646 347.961 414.28 345.141 410.912 343.186 cv
407.272 341.093 403.727 340.012 400.162 339.88 cv
399.023 336.731 397.884 333.58 396.745 330.434 cv
401.391 330.529 406.136 331.976 410.878 334.714 cv
cp
1 .756863 .0156863 rgb
f
389.91 311.538 mo
396.835 307.514 li
403.615 307.552 410.715 309.709 417.81 313.797 cv
410.886 317.819 li
403.792 313.733 396.692 311.576 389.91 311.538 cv
cp
.584314 .85098 .298039 rgb
f
428.45 341.262 mo
435.374 337.239 li
434.221 339.065 433.068 340.891 431.914 342.716 cv
424.99 346.74 li
426.145 344.914 427.297 343.089 428.45 341.262 cv
cp
0 .592157 .65098 rgb
f
410.835 326.237 mo
417.757 322.213 li
423.34 325.447 428.777 329.961 434.039 335.741 cv
434.217 335.937 434.395 336.132 434.57 336.329 cv
434.698 336.472 434.825 336.613 434.95 336.756 cv
435.13 336.96 435.251 337.099 435.374 337.239 cv
428.45 341.262 li
428.327 341.122 428.206 340.984 428.026 340.78 cv
427.901 340.637 427.773 340.496 427.648 340.355 cv
427.47 340.156 427.293 339.961 427.116 339.764 cv
421.852 333.985 416.417 329.472 410.835 326.237 cv
cp
.388235 .94902 1 rgb
f
410.886 317.819 mo
417.879 321.866 424.781 327.692 431.379 335.181 cv
431.565 335.392 li
431.708 335.556 431.809 335.67 431.91 335.788 cv
430.757 337.612 429.603 339.437 428.45 341.262 cv
428.327 341.122 428.206 340.984 428.083 340.844 cv
427.901 340.637 427.773 340.496 427.648 340.356 cv
427.47 340.156 427.293 339.961 427.116 339.764 cv
421.852 333.985 416.417 329.472 410.973 326.317 cv
404.928 322.839 399.02 321.047 393.327 320.985 cv
392.189 317.836 391.05 314.686 389.91 311.538 cv
396.692 311.576 403.792 313.733 410.886 317.819 cv
cp
.403922 .639216 .160784 rgb
f
410.835 326.237 mo
416.417 329.472 421.852 333.985 427.116 339.764 cv
427.293 339.961 427.47 340.156 427.648 340.355 cv
427.773 340.496 427.901 340.637 428.026 340.78 cv
428.206 340.984 428.327 341.122 428.45 341.262 cv
427.297 343.089 426.145 344.914 424.99 346.74 cv
420.359 341.482 415.62 337.452 410.878 334.714 cv
406.136 331.976 401.391 330.529 396.745 330.434 cv
395.605 327.283 394.467 324.134 393.327 320.985 cv
399.019 321.047 404.928 322.84 410.835 326.237 cv
cp
0 .835294 .909804 rgb
f
386.492 302.089 mo
393.417 298.065 li
401.278 298.068 409.58 300.595 417.875 305.383 cv
410.951 309.407 li
402.654 304.617 394.353 302.093 386.492 302.089 cv
cp
1 .388235 .388235 rgb
f
410.886 317.819 mo
417.81 313.797 li
424.804 317.842 431.706 323.669 438.303 331.157 cv
438.489 331.369 li
438.633 331.532 438.733 331.647 438.834 331.762 cv
431.91 335.788 li
431.809 335.67 431.708 335.556 431.565 335.392 cv
431.379 335.181 li
424.781 327.692 417.879 321.866 410.886 317.819 cv
cp
.584314 .85098 .298039 rgb
f
431.91 335.788 mo
438.834 331.762 li
437.681 333.588 436.526 335.413 435.374 337.239 cv
428.45 341.262 li
429.603 339.437 430.757 337.612 431.91 335.788 cv
cp
.211765 .439216 .0666667 rgb
f
410.951 309.407 mo
417.875 305.383 li
426.169 310.172 434.458 317.227 442.292 326.284 cv
435.369 330.307 li
427.535 321.25 419.245 314.198 410.951 309.407 cv
cp
1 .388235 .388235 rgb
f
410.951 309.407 mo
419.245 314.198 427.535 321.25 435.369 330.307 cv
434.216 332.135 433.063 333.96 431.91 335.788 cv
431.809 335.67 431.708 335.556 431.607 335.439 cv
431.503 335.322 431.441 335.25 431.379 335.181 cv
424.781 327.692 417.879 321.866 410.969 317.868 cv
403.789 313.731 396.692 311.576 389.91 311.538 cv
388.77 308.386 387.631 305.24 386.492 302.089 cv
394.353 302.093 402.654 304.617 410.951 309.407 cv
cp
.839216 .156863 .133333 rgb
f
435.369 330.307 mo
442.292 326.284 li
441.14 328.111 439.988 329.938 438.834 331.762 cv
431.91 335.788 li
433.063 333.96 434.216 332.135 435.369 330.307 cv
cp
.678431 .0745098 .054902 rgb
f
342.267 342.75 mo
335.038 339.463 li
339.23 327.797 li
346.459 331.084 li
342.267 342.75 li
cp
.839216 .635294 .0117647 rgb
f
346.459 331.084 mo
339.23 327.797 li
364.6 316.336 li
371.826 319.622 li
346.459 331.084 li
cp
1 .894118 .290196 rgb
f
371.826 319.622 mo
376.091 327.47 li
342.267 342.75 li
346.459 331.084 li
371.826 319.622 li
cp
1 .756863 .0156863 rgb
f
346.459 326.488 mo
339.23 323.201 li
343.422 311.534 li
350.649 314.822 li
346.459 326.488 li
cp
.760784 .152941 0 rgb
f
350.649 314.822 mo
343.422 311.534 li
360.337 303.894 li
367.566 307.181 li
350.649 314.822 li
cp
1 .580392 .101961 rgb
f
367.566 307.181 mo
371.826 315.027 li
346.459 326.488 li
350.649 314.822 li
367.566 307.181 li
cp
.929412 .372549 0 rgb
f
350.649 310.226 mo
343.422 306.94 li
347.617 295.269 li
354.846 298.558 li
350.649 310.226 li
cp
0 .678431 .741176 rgb
f
354.846 298.558 mo
347.617 295.269 li
356.075 291.448 li
363.304 294.735 li
354.846 298.558 li
cp
.388235 .94902 1 rgb
f
363.304 294.735 mo
367.566 302.587 li
350.649 310.226 li
354.846 298.558 li
363.304 294.735 li
cp
0 .835294 .909804 rgb
f
354.846 293.963 mo
347.617 290.674 li
351.809 279.008 li
359.037 282.294 li
354.846 293.963 li
cp
.639216 .0627451 .0627451 rgb
f
359.037 282.294 mo
363.304 290.14 li
354.846 293.963 li
359.037 282.294 li
cp
.839216 .133333 .133333 rgb
f
276.244 279.223 mo
280.817 279.223 285.4 280.234 288.903 282.256 cv
276.301 289.583 li
276.244 279.223 li
cp
1 .580392 .101961 rgb
f
288.903 282.256 mo
288.891 287.366 li
276.285 294.689 li
276.301 289.583 li
288.903 282.256 li
cp
.929412 .372549 0 rgb
f
276.301 289.583 mo
276.285 294.689 li
276.23 284.331 li
276.244 279.223 li
276.301 289.583 li
cp
f
276.244 279.223 mo
276.301 289.583 li
263.613 282.258 li
267.094 280.234 271.666 279.223 276.244 279.223 cv
cp
1 .894118 .290196 rgb
f
276.301 289.583 mo
276.285 294.689 li
263.598 287.366 li
263.613 282.258 li
276.301 289.583 li
cp
1 .756863 .0156863 rgb
f
263.613 282.258 mo
276.301 289.583 li
259.693 293.394 li
257.131 289.671 258.434 285.268 263.613 282.258 cv
cp
.388235 .94902 1 rgb
f
276.301 289.583 mo
276.285 294.689 li
259.677 298.503 li
259.693 293.394 li
276.301 289.583 li
cp
0 .678431 .741176 rgb
f
258.405 294.637 mo
258.418 289.529 li
258.416 290.84 258.84 292.155 259.693 293.394 cv
259.677 298.503 li
258.827 297.264 258.401 295.95 258.405 294.637 cv
cp
f
276.301 289.583 mo
263.696 296.906 li
261.906 295.871 260.572 294.671 259.693 293.394 cv
276.301 289.583 li
cp
1 .333333 .258824 rgb
f
263.696 296.906 mo
263.682 302.014 li
261.889 300.98 260.561 299.782 259.677 298.503 cv
259.693 293.394 li
260.572 294.671 261.906 295.871 263.696 296.906 cv
cp
.839216 .133333 .133333 rgb
f
276.301 289.583 mo
276.285 294.689 li
263.682 302.014 li
263.696 296.906 li
276.301 289.583 li
cp
f
294.181 289.633 mo
294.168 294.745 li
294.16 297.376 292.429 300.007 288.973 302.014 cv
285.493 304.037 280.921 305.048 276.347 305.048 cv
271.767 305.048 267.185 304.039 263.682 302.014 cv
263.696 296.906 li
267.201 298.932 271.781 299.941 276.36 299.941 cv
280.937 299.941 285.508 298.928 288.986 296.906 cv
292.443 294.895 294.173 292.267 294.181 289.633 cv
cp
.403922 .639216 .160784 rgb
f
288.903 282.256 mo
290.695 283.29 292.029 284.489 292.91 285.768 cv
295.469 289.491 294.169 293.895 288.986 296.906 cv
285.508 298.928 280.937 299.941 276.36 299.941 cv
271.781 299.941 267.201 298.932 263.696 296.906 cv
276.301 289.583 li
288.903 282.256 li
cp
.584314 .85098 .298039 rgb
f
213.447 288.726 mo
213.418 299.581 li
203.88 294.074 li
203.91 283.222 li
213.447 288.726 li
cp
.760784 .152941 0 rgb
f
250.547 310.146 mo
250.515 321 li
213.418 299.581 li
213.447 288.726 li
250.547 310.146 li
cp
.929412 .372549 0 rgb
f
214.203 299.421 mo
214.173 310.273 li
204.561 304.727 li
204.594 293.872 li
214.203 299.421 li
cp
0 .678431 .741176 rgb
f
259.403 305 mo
259.374 315.852 li
250.515 321 li
250.547 310.146 li
259.403 305 li
cp
.929412 .372549 0 rgb
f
259.403 305 mo
250.547 310.146 li
213.447 288.726 li
203.91 283.222 li
212.769 278.072 li
259.403 305 li
cp
1 .580392 .101961 rgb
f
241.692 315.292 mo
241.661 326.145 li
214.173 310.273 li
214.203 299.421 li
241.692 315.292 li
cp
0 .678431 .741176 rgb
f
250.547 310.146 mo
250.515 321 li
241.661 326.145 li
241.692 315.292 li
250.547 310.146 li
cp
0 .835294 .909804 rgb
f
250.547 310.146 mo
241.692 315.292 li
214.203 299.421 li
204.594 293.872 li
213.447 288.726 li
250.547 310.146 li
cp
.388235 .94902 1 rgb
f
241.692 315.292 mo
241.661 326.145 li
232.805 331.293 li
232.835 320.439 li
241.692 315.292 li
cp
1 .756863 .0156863 rgb
f
232.835 320.439 mo
232.805 331.293 li
205.314 315.422 li
205.346 304.569 li
232.835 320.439 li
cp
.839216 .635294 .0117647 rgb
f
241.692 315.292 mo
232.835 320.439 li
205.346 304.569 li
214.203 299.421 li
241.692 315.292 li
cp
1 .894118 .290196 rgb
f
232.835 320.439 mo
232.805 331.293 li
223.947 336.439 li
223.979 325.583 li
232.835 320.439 li
cp
.839216 .133333 .133333 rgb
f
232.835 320.439 mo
223.979 325.583 li
204.472 314.325 li
213.327 309.177 li
232.835 320.439 li
cp
1 .258824 .258824 rgb
f
223.979 325.583 mo
223.947 336.439 li
204.441 325.177 li
204.472 314.325 li
223.979 325.583 li
cp
.639216 .0627451 .0627451 rgb
f
215.121 330.733 mo
215.093 341.586 li
204.447 335.441 li
204.477 324.586 li
215.121 330.733 li
cp
.211765 .439216 .0666667 rgb
f
223.979 325.583 mo
223.947 336.439 li
215.093 341.586 li
215.121 330.733 li
223.979 325.583 li
cp
.403922 .639216 .160784 rgb
f
223.979 325.583 mo
215.121 330.733 li
204.477 324.586 li
213.334 319.439 li
223.979 325.583 li
cp
.584314 .85098 .298039 rgb
f
171.117 381.23 mo
168.99 379.994 li
168.954 367.361 li
171.081 368.597 li
171.117 381.23 li
cp
.611765 .709804 .8 rgb
f
171.081 368.597 mo
168.954 367.361 li
170.023 366.743 li
172.151 367.98 li
171.081 368.597 li
cp
.843137 .905882 .968627 rgb
f
159.67 387.839 mo
157.543 386.602 li
168.99 379.994 li
171.117 381.23 li
159.67 387.839 li
cp
f
159.674 389.067 mo
157.547 387.831 li
157.543 386.602 li
159.67 387.839 li
159.674 389.067 li
cp
.611765 .709804 .8 rgb
f
172.151 367.98 mo
172.19 381.841 li
159.674 389.067 li
159.67 387.839 li
171.117 381.23 li
171.081 368.597 li
172.151 367.98 li
cp
.972549 .976471 .988235 rgb
f
155.057 391.112 mo
152.93 389.876 li
157.536 384.144 li
159.663 385.381 li
155.057 391.112 li
cp
.843137 .905882 .968627 rgb
f
159.663 385.381 mo
159.67 387.839 li
159.674 389.067 li
159.681 391.514 li
155.057 391.112 li
159.663 385.381 li
cp
.972549 .976471 .988235 rgb
f
182.486 355.335 mo
182.5 360.439 li
174.493 365.061 li
174.479 359.957 li
182.486 355.335 li
cp
f
174.477 359.437 mo
182.484 354.814 li
182.486 355.335 li
174.479 359.957 li
174.477 359.437 li
cp
.00784314 .352941 .509804 rgb
f
174.026 360.219 mo
174.04 365.323 li
164.694 370.719 li
164.68 365.615 li
174.026 360.219 li
cp
.972549 .976471 .988235 rgb
f
174.009 354.284 mo
174.024 359.698 li
164.678 365.095 li
164.663 359.681 li
174.009 354.284 li
cp
f
182.435 337.532 mo
182.451 342.957 li
174.444 347.579 li
174.428 342.154 li
182.435 337.532 li
cp
f
156.22 370.499 mo
156.219 369.979 li
164.225 365.356 li
164.227 365.876 li
156.22 370.499 li
cp
.00784314 .352941 .509804 rgb
f
182.418 331.597 mo
182.434 337.022 li
174.427 341.645 li
174.411 336.22 li
182.418 331.597 li
cp
.972549 .976471 .988235 rgb
f
164.21 359.942 mo
164.225 365.356 li
156.219 369.979 li
156.203 364.565 li
164.21 359.942 li
cp
f
182.404 326.56 mo
182.417 331.088 li
174.41 335.711 li
174.397 331.182 li
182.404 326.56 li
cp
f
173.975 342.416 mo
173.991 347.841 li
164.645 353.237 li
164.629 347.812 li
173.975 342.416 li
cp
f
164.176 348.073 mo
164.192 353.498 li
156.185 358.121 li
156.17 352.696 li
164.176 348.073 li
cp
f
173.944 331.444 mo
173.957 335.972 li
164.611 341.368 li
164.598 336.84 li
173.944 331.444 li
cp
f
182.954 360.698 mo
182.855 325.789 li
155.684 341.476 li
155.783 376.385 li
182.954 360.698 li
cp
154.641 341.169 mo
183.951 324.247 li
184.056 361.315 li
154.746 378.237 li
154.641 341.169 li
cp
f
182.469 349.4 mo
182.484 354.814 li
174.477 359.437 li
174.462 354.023 li
182.469 349.4 li
cp
f
164.68 365.615 mo
164.678 365.095 li
174.024 359.698 li
174.026 360.219 li
164.68 365.615 li
cp
.00784314 .352941 .509804 rgb
f
182.452 343.466 mo
182.467 348.891 li
174.46 353.514 li
174.445 348.089 li
182.452 343.466 li
cp
.972549 .976471 .988235 rgb
f
164.227 365.876 mo
164.241 370.98 li
156.235 375.603 li
156.22 370.499 li
164.227 365.876 li
cp
f
164.193 354.008 mo
164.209 359.433 li
156.202 364.055 li
156.186 358.63 li
164.193 354.008 li
cp
f
173.959 336.482 mo
173.974 341.906 li
164.628 347.302 li
164.613 341.878 li
173.959 336.482 li
cp
f
164.16 342.139 mo
164.175 347.564 li
156.168 352.187 li
156.153 346.762 li
164.16 342.139 li
cp
f
164.158 341.63 mo
164.145 337.101 li
156.138 341.724 li
156.151 346.252 li
164.158 341.63 li
cp
182.417 331.088 mo
182.404 326.56 li
174.397 331.182 li
174.41 335.711 li
182.417 331.088 li
cp
173.957 335.972 mo
173.944 331.444 li
164.598 336.84 li
164.611 341.368 li
173.957 335.972 li
cp
164.175 347.564 mo
164.16 342.139 li
156.153 346.762 li
156.168 352.187 li
164.175 347.564 li
cp
164.209 359.433 mo
164.193 354.008 li
156.186 358.63 li
156.202 364.055 li
164.209 359.433 li
cp
182.467 348.891 mo
182.452 343.466 li
174.445 348.089 li
174.46 353.514 li
182.467 348.891 li
cp
182.434 337.022 mo
182.418 331.597 li
174.411 336.22 li
174.427 341.645 li
182.434 337.022 li
cp
164.192 353.498 mo
164.176 348.073 li
156.17 352.696 li
156.185 358.121 li
164.192 353.498 li
cp
182.451 342.957 mo
182.435 337.532 li
174.428 342.154 li
174.444 347.579 li
182.451 342.957 li
cp
173.974 341.906 mo
173.959 336.482 li
164.613 341.878 li
164.628 347.302 li
173.974 341.906 li
cp
174.008 353.775 mo
173.992 348.35 li
164.646 353.746 li
164.661 359.171 li
174.008 353.775 li
cp
173.991 347.841 mo
173.975 342.416 li
164.629 347.812 li
164.645 353.237 li
173.991 347.841 li
cp
164.225 365.356 mo
164.21 359.942 li
156.203 364.565 li
156.219 369.979 li
156.22 370.499 li
156.235 375.603 li
164.241 370.98 li
164.227 365.876 li
164.225 365.356 li
cp
182.484 354.814 mo
182.469 349.4 li
174.462 354.023 li
174.477 359.437 li
174.479 359.957 li
174.493 365.061 li
182.5 360.439 li
182.486 355.335 li
182.484 354.814 li
cp
174.024 359.698 mo
174.009 354.284 li
164.663 359.681 li
164.678 365.095 li
164.68 365.615 li
164.694 370.719 li
174.04 365.323 li
174.026 360.219 li
174.024 359.698 li
cp
155.684 341.476 mo
182.855 325.789 li
182.954 360.698 li
155.783 376.385 li
155.684 341.476 li
cp
.00784314 .352941 .509804 rgb
f
173.992 348.35 mo
174.008 353.775 li
164.661 359.171 li
164.646 353.746 li
173.992 348.35 li
cp
.972549 .976471 .988235 rgb
f
164.145 337.101 mo
164.158 341.63 li
156.151 346.252 li
156.138 341.724 li
164.145 337.101 li
cp
f
154.746 378.237 mo
150.492 375.764 li
150.387 338.697 li
154.641 341.169 li
154.746 378.237 li
cp
.611765 .709804 .8 rgb
f
154.619 333.585 mo
150.365 331.113 li
179.675 314.19 li
183.93 316.663 li
154.619 333.585 li
cp
.831373 .243137 .243137 rgb
f
154.641 341.169 mo
150.387 338.697 li
150.365 331.113 li
154.619 333.585 li
154.641 341.169 li
cp
.65098 .113725 .113725 rgb
f
183.93 316.663 mo
183.951 324.247 li
154.641 341.169 li
154.619 333.585 li
183.93 316.663 li
cp
.980392 .458824 .392157 rgb
f
149.272 400.769 mo
149.493 400.641 li
149.495 401.162 li
149.273 401.29 li
131.41 411.603 li
131.408 411.083 li
149.272 400.769 li
cp
.00784314 .352941 .509804 rgb
f
131.063 411.803 mo
131.077 416.819 li
123.012 421.475 li
122.998 416.46 li
131.063 411.803 li
cp
.972549 .976471 .988235 rgb
f
149.24 389.676 mo
149.255 394.713 li
131.391 405.027 li
131.377 399.989 li
149.24 389.676 li
cp
f
122.758 410.011 mo
122.979 409.883 li
131.044 405.227 li
131.046 405.736 li
122.981 410.392 li
122.759 410.52 li
122.758 410.011 li
cp
.00784314 .352941 .509804 rgb
f
149.732 406.57 mo
149.682 388.899 li
122.521 404.581 li
122.571 422.251 li
149.732 406.57 li
cp
121.477 404.274 mo
150.788 387.352 li
150.845 407.469 li
121.534 424.391 li
121.477 404.274 li
cp
.972549 .976471 .988235 rgb
f
131.046 405.736 mo
131.061 411.283 li
122.997 415.939 li
122.981 410.392 li
131.046 405.736 li
cp
f
131.03 400.19 mo
131.044 405.227 li
122.979 409.883 li
122.965 404.846 li
131.03 400.19 li
cp
f
122.965 404.846 mo
131.03 400.19 li
131.029 399.924 li
131.376 399.724 li
131.377 399.989 li
149.24 389.676 li
149.255 394.713 li
149.476 394.585 li
149.478 395.095 li
149.256 395.223 li
149.272 400.769 li
149.493 400.641 li
149.495 401.162 li
149.273 401.29 li
149.287 406.305 li
131.424 416.619 li
131.425 416.884 li
131.078 417.085 li
131.077 416.819 li
123.012 421.475 li
122.998 416.46 li
122.777 416.588 li
122.775 416.067 li
122.997 415.939 li
122.981 410.392 li
122.759 410.52 li
122.758 410.011 li
122.979 409.883 li
122.965 404.846 li
cp
149.732 406.57 mo
149.682 388.899 li
122.521 404.581 li
122.571 422.251 li
149.732 406.57 li
cp
.00784314 .352941 .509804 rgb
f
149.273 401.29 mo
149.288 406.305 li
131.424 416.619 li
131.41 411.603 li
149.273 401.29 li
cp
.972549 .976471 .988235 rgb
f
149.256 395.223 mo
149.272 400.769 li
131.408 411.083 li
131.393 405.536 li
149.256 395.223 li
cp
f
149.255 394.713 mo
149.476 394.585 li
149.478 395.095 li
149.256 395.223 li
131.393 405.536 li
131.391 405.027 li
149.255 394.713 li
cp
.00784314 .352941 .509804 rgb
f
122.775 416.067 mo
122.997 415.939 li
131.061 411.283 li
131.063 411.803 li
122.998 416.46 li
122.777 416.588 li
122.775 416.067 li
cp
f
131.376 399.724 mo
131.377 399.989 li
131.391 405.027 li
131.393 405.536 li
131.408 411.083 li
131.41 411.603 li
131.424 416.619 li
131.425 416.884 li
131.078 417.085 li
131.077 416.819 li
131.063 411.804 li
131.061 411.283 li
131.046 405.736 li
131.044 405.227 li
131.03 400.19 li
131.029 399.924 li
131.376 399.724 li
cp
f
121.534 424.391 mo
117.28 421.919 li
117.223 401.802 li
121.477 404.274 li
121.534 424.391 li
cp
.611765 .709804 .8 rgb
f
121.456 396.701 mo
117.201 394.229 li
146.512 377.306 li
150.766 379.779 li
121.456 396.701 li
cp
.831373 .243137 .243137 rgb
f
150.766 379.779 mo
150.788 387.352 li
121.477 404.274 li
121.456 396.701 li
150.766 379.779 li
cp
.980392 .458824 .392157 rgb
f
121.477 404.274 mo
117.223 401.802 li
117.201 394.229 li
121.456 396.701 li
121.477 404.274 li
cp
.65098 .113725 .113725 rgb
f
131.744 373.518 mo
131.758 378.556 li
122.412 383.952 li
122.398 378.914 li
131.744 373.518 li
cp
.972549 .976471 .988235 rgb
f
122.398 378.914 mo
122.397 378.394 li
131.743 372.998 li
131.744 373.518 li
122.398 378.914 li
cp
.00784314 .352941 .509804 rgb
f
140.169 356.511 mo
140.185 362.058 li
132.178 366.681 li
132.163 361.134 li
140.169 356.511 li
cp
.972549 .976471 .988235 rgb
f
140.168 355.991 mo
140.39 355.862 li
140.391 356.383 li
140.169 356.511 li
132.163 361.134 li
132.161 360.613 li
140.168 355.991 li
cp
.00784314 .352941 .509804 rgb
f
131.727 367.451 mo
131.743 372.998 li
122.397 378.394 li
122.381 372.847 li
131.727 367.451 li
cp
.972549 .976471 .988235 rgb
f
131.71 361.395 mo
131.725 366.942 li
122.379 372.338 li
122.364 366.791 li
131.71 361.395 li
cp
f
121.928 373.109 mo
121.944 378.655 li
113.937 383.278 li
113.921 377.731 li
121.928 373.109 li
cp
f
131.694 355.837 mo
131.708 360.875 li
122.362 366.271 li
122.348 361.233 li
131.694 355.837 li
cp
f
122.347 360.978 mo
122.348 361.233 li
122.362 366.271 li
122.364 366.791 li
122.379 372.338 li
122.381 372.847 li
122.397 378.394 li
122.398 378.914 li
122.412 383.952 li
122.413 384.207 li
121.96 384.468 li
121.959 384.213 li
121.945 379.176 li
121.944 378.655 li
121.928 373.109 li
121.926 372.599 li
121.911 367.052 li
121.909 366.532 li
121.895 361.495 li
121.894 361.24 li
122.347 360.978 li
cp
.00784314 .352941 .509804 rgb
f
121.911 367.052 mo
121.926 372.599 li
113.92 377.222 li
113.904 371.675 li
121.911 367.052 li
cp
.972549 .976471 .988235 rgb
f
113.671 371.288 mo
113.902 371.155 li
121.909 366.532 li
121.911 367.052 li
113.904 371.675 li
113.673 371.809 li
113.671 371.288 li
cp
.00784314 .352941 .509804 rgb
f
121.895 361.495 mo
121.909 366.532 li
113.902 371.155 li
113.888 366.117 li
121.895 361.495 li
cp
.972549 .976471 .988235 rgb
f
140.391 356.383 mo
140.39 355.862 li
140.168 355.991 li
140.154 350.953 li
132.147 355.576 li
132.146 355.321 li
131.693 355.582 li
131.694 355.837 li
122.348 361.233 li
122.347 360.978 li
121.894 361.24 li
121.895 361.495 li
113.888 366.117 li
113.902 371.155 li
113.671 371.288 li
113.673 371.809 li
113.904 371.675 li
113.92 377.222 li
113.688 377.356 li
113.69 377.865 li
113.921 377.731 li
113.937 383.278 li
113.706 383.412 li
113.707 383.932 li
113.938 383.799 li
113.953 388.836 li
121.959 384.213 li
121.96 384.468 li
122.413 384.207 li
122.412 383.952 li
131.758 378.556 li
131.759 378.811 li
132.212 378.549 li
132.211 378.294 li
140.218 373.672 li
140.204 368.634 li
140.425 368.506 li
140.424 367.986 li
140.202 368.114 li
140.187 362.567 li
140.408 362.439 li
140.407 361.93 li
140.185 362.058 li
140.169 356.511 li
140.391 356.383 li
cp
113.434 365.87 mo
140.605 350.182 li
140.672 373.92 li
113.501 389.607 li
113.434 365.87 li
cp
.00784314 .352941 .509804 rgb
f
140.204 368.634 mo
140.218 373.672 li
132.211 378.294 li
132.197 373.257 li
140.204 368.634 li
cp
.972549 .976471 .988235 rgb
f
140.187 362.567 mo
140.202 368.114 li
132.196 372.737 li
132.18 367.19 li
140.187 362.567 li
cp
f
140.185 362.058 mo
140.407 361.93 li
140.408 362.439 li
140.187 362.567 li
132.18 367.19 li
132.178 366.681 li
140.185 362.058 li
cp
.00784314 .352941 .509804 rgb
f
140.154 350.953 mo
140.168 355.991 li
132.161 360.613 li
132.147 355.576 li
140.154 350.953 li
cp
.972549 .976471 .988235 rgb
f
121.945 379.176 mo
121.959 384.213 li
113.953 388.836 li
113.938 383.799 li
121.945 379.176 li
cp
f
113.688 377.356 mo
113.92 377.222 li
121.926 372.599 li
121.928 373.109 li
113.921 377.731 li
113.69 377.865 li
113.688 377.356 li
cp
.00784314 .352941 .509804 rgb
f
112.391 365.562 mo
108.136 363.09 li
108.115 355.506 li
112.369 357.978 li
112.391 365.562 li
cp
.65098 .113725 .113725 rgb
f
140.672 373.92 mo
140.605 350.182 li
113.434 365.87 li
113.501 389.607 li
140.672 373.92 li
cp
112.391 365.562 mo
141.701 348.64 li
141.773 374.182 li
112.463 391.104 li
112.391 365.562 li
cp
.972549 .976471 .988235 rgb
f
140.202 368.114 mo
140.424 367.986 li
140.425 368.506 li
140.204 368.634 li
132.197 373.257 li
132.196 372.737 li
140.202 368.114 li
cp
.00784314 .352941 .509804 rgb
f
122.381 372.847 mo
122.379 372.338 li
131.725 366.942 li
131.727 367.451 li
122.381 372.847 li
cp
f
132.146 355.321 mo
132.147 355.576 li
132.161 360.613 li
132.163 361.134 li
132.178 366.681 li
132.18 367.19 li
132.196 372.737 li
132.197 373.257 li
132.211 378.294 li
132.212 378.549 li
131.759 378.811 li
131.758 378.556 li
131.744 373.518 li
131.743 372.998 li
131.727 367.451 li
131.725 366.942 li
131.71 361.395 li
131.708 360.875 li
131.694 355.837 li
131.693 355.582 li
132.146 355.321 li
cp
f
113.706 383.412 mo
113.937 383.278 li
121.944 378.655 li
121.945 379.176 li
113.938 383.799 li
113.707 383.932 li
113.706 383.412 li
cp
f
122.364 366.791 mo
122.362 366.271 li
131.708 360.875 li
131.71 361.395 li
122.364 366.791 li
cp
f
112.463 391.104 mo
108.209 388.632 li
108.136 363.09 li
112.391 365.562 li
112.463 391.104 li
cp
.611765 .709804 .8 rgb
f
112.369 357.978 mo
108.115 355.506 li
137.425 338.584 li
141.679 341.056 li
112.369 357.978 li
cp
.831373 .243137 .243137 rgb
f
141.679 341.056 mo
141.701 348.64 li
112.391 365.562 li
112.369 357.978 li
141.679 341.056 li
cp
.980392 .458824 .392157 rgb
f
171.014 316.458 mo
168.887 315.222 li
171.017 313.992 li
173.144 315.228 li
171.014 316.458 li
cp
.843137 .905882 .968627 rgb
f
169.945 317.075 mo
167.818 315.839 li
168.887 315.222 li
171.014 316.458 li
169.945 317.075 li
cp
f
167.806 318.31 mo
165.679 317.074 li
167.818 315.839 li
169.945 317.075 li
167.806 318.31 li
cp
f
170.49 322.084 mo
168.363 320.848 li
165.679 317.074 li
167.806 318.31 li
170.49 322.084 li
cp
.611765 .709804 .8 rgb
f
173.144 315.228 mo
170.49 322.084 li
167.806 318.31 li
169.945 317.075 li
171.014 316.458 li
173.144 315.228 li
cp
.972549 .976471 .988235 rgb
f
169.945 317.075 mo
167.818 315.839 li
167.802 310.337 li
169.929 311.573 li
169.945 317.075 li
cp
.611765 .709804 .8 rgb
f
123.258 349.353 mo
121.131 348.117 li
121.097 336.06 li
123.224 337.296 li
123.258 349.353 li
cp
f
170.995 309.715 mo
171.014 316.458 li
169.945 317.075 li
169.929 311.573 li
124.297 337.919 li
124.328 348.736 li
123.258 349.353 li
123.224 337.296 li
170.995 309.715 li
cp
.972549 .976471 .988235 rgb
f
123.224 337.296 mo
121.097 336.06 li
168.868 308.479 li
170.995 309.715 li
123.224 337.296 li
cp
.843137 .905882 .968627 rgb
f
101.372 422.578 mo
99.2452 421.342 li
117.369 410.879 li
119.496 412.115 li
101.372 422.578 li
cp
f
107.075 381.448 mo
104.948 380.212 li
104.941 377.765 li
107.068 379.001 li
107.075 381.448 li
cp
.611765 .709804 .8 rgb
f
107.068 379.001 mo
104.941 377.765 li
104.938 376.525 li
107.065 377.761 li
107.068 379.001 li
cp
f
107.058 375.314 mo
111.692 375.711 li
107.075 381.448 li
107.068 379.001 li
107.065 377.761 li
107.058 375.314 li
cp
.972549 .976471 .988235 rgb
f
107.065 377.761 mo
104.938 376.525 li
104.931 374.078 li
107.058 375.314 li
107.065 377.761 li
cp
.611765 .709804 .8 rgb
f
107.058 375.314 mo
104.931 374.078 li
109.564 374.475 li
111.692 375.711 li
107.058 375.314 li
cp
.843137 .905882 .968627 rgb
f
100.306 424.425 mo
98.1792 423.189 li
98.0582 380.497 li
100.185 381.733 li
100.306 424.425 li
cp
.611765 .709804 .8 rgb
f
107.065 377.761 mo
107.068 379.001 li
101.258 382.355 li
101.372 422.578 li
119.496 412.115 li
119.5 413.344 li
100.306 424.425 li
100.185 381.733 li
107.065 377.761 li
cp
.972549 .976471 .988235 rgb
f
100.185 381.733 mo
98.0582 380.497 li
104.938 376.525 li
107.065 377.761 li
100.185 381.733 li
cp
.843137 .905882 .968627 rgb
f
383.971 74.9671 mo
383.973 76.1722 382.367 77.3761 380.274 78.5835 cv
356.784 92.1456 li
356.778 89.6461 li
356.777 89.4193 356.702 89.1946 356.561 88.9816 cv
374.159 78.8198 li
374.557 78.5907 374.755 78.2814 374.754 77.9724 cv
374.751 76.1814 374.745 74.391 374.739 72.6003 cv
374.738 72.2923 374.54 71.9864 374.146 71.7585 cv
316.021 37.9796 li
315.227 37.5176 313.897 37.5176 313.103 37.976 cv
259.742 68.784 li
259.343 69.0144 259.142 69.326 259.142 69.6373 cv
259.155 73.6702 li
257.719 72.8366 li
256.126 71.9102 255.328 70.6897 255.325 69.4692 cv
255.33 71.2599 255.335 73.0493 255.34 74.84 cv
255.343 76.0615 256.141 77.2823 257.736 78.2084 cv
317.945 113.199 li
321.157 115.064 326.417 115.059 329.639 113.199 cv
380.29 83.9556 li
382.382 82.7481 383.99 81.543 383.985 80.3378 cv
383.981 78.5482 383.974 76.7577 383.971 74.9671 cv
cp
.682353 .74902 .811765 rgb
f
374.146 71.7585 mo
316.021 37.9796 li
315.227 37.5176 313.897 37.5176 313.103 37.976 cv
259.743 68.784 li
258.949 69.2411 258.94 70.016 259.733 70.477 cv
317.859 104.256 li
318.648 104.714 319.99 104.714 320.783 104.256 cv
374.143 73.448 li
374.939 72.9906 374.935 72.2157 374.146 71.7585 cv
cp
.0509804 .85098 .831373 rgb
f
301.814 67.2329 mo
325.189 66.356 li
323.598 79.8932 li
301.814 67.2329 li
cp
.921569 1 .960784 rgb
f
333.012 80.4529 mo
341.932 75.3045 341.979 66.9275 333.118 61.7776 cv
324.257 56.6277 309.794 56.6267 300.874 61.7776 cv
291.954 66.9275 291.907 75.3045 300.768 80.4541 cv
309.63 85.604 324.093 85.604 333.012 80.4529 cv
cp
298.926 60.6468 mo
308.924 54.875 325.135 54.875 335.072 60.6501 cv
345.002 66.4206 344.949 75.8111 334.952 81.5816 cv
324.957 87.3534 308.74 87.3557 298.81 81.5852 cv
288.875 75.8099 288.931 66.416 298.926 60.6468 cv
cp
f
351.241 88.3315 mo
352.514 87.5966 354.569 87.592 355.835 88.3282 cv
357.102 89.0629 357.088 90.2539 355.814 90.9899 cv
351.12 93.7 li
349.846 94.4362 347.796 94.4362 346.532 93.7 cv
345.266 92.9651 345.271 91.7766 346.546 91.0416 cv
351.241 88.3315 li
cp
.0666667 .258824 .411765 rgb
f
355.814 90.9899 mo
357.088 90.2539 357.102 89.0629 355.835 88.3282 cv
354.569 87.592 352.514 87.5966 351.241 88.3315 cv
346.546 91.0416 li
345.271 91.7766 345.266 92.9651 346.532 93.7 cv
347.796 94.4362 349.845 94.4362 351.12 93.7 cv
355.814 90.9899 li
cp
374.146 71.7585 mo
316.021 37.9796 li
315.227 37.5176 313.897 37.5176 313.103 37.976 cv
259.742 68.784 li
258.949 69.2411 258.94 70.016 259.733 70.477 cv
317.859 104.256 li
318.648 104.714 319.99 104.714 320.782 104.256 cv
374.143 73.448 li
374.939 72.9893 374.935 72.2157 374.146 71.7585 cv
cp
308.4 36.8168 mo
311.63 34.9531 316.896 34.9566 320.1 36.8201 cv
382.366 73.0037 li
385.573 74.8681 383.502 76.7201 380.274 78.5835 cv
329.624 107.828 li
326.402 109.687 321.141 109.695 317.928 107.828 cv
257.719 72.8366 li
254.513 70.9729 254.53 67.9197 257.751 66.0595 cv
308.4 36.8168 li
cp
.972549 .976471 .988235 rgb
f
417.312 123.009 mo
416.383 122.464 li
416.411 98.7556 li
417.34 99.3007 li
417.312 123.009 li
cp
.611765 .709804 .8 rgb
f
416.34 99.2309 mo
415.41 98.6858 li
415.143 98.5292 414.949 98.2475 414.857 97.8616 cv
415.786 98.4067 li
415.878 98.7926 416.073 99.0743 416.34 99.2309 cv
cp
f
415.788 97.3303 mo
414.858 96.7852 li
414.998 96.0383 415.377 95.2588 415.887 94.6432 cv
416.816 95.1883 li
416.306 95.8039 415.927 96.5834 415.788 97.3303 cv
cp
.843137 .905882 .968627 rgb
f
416.816 95.1883 mo
415.887 94.6432 li
416.184 94.284 416.526 93.9806 416.891 93.772 cv
417.11 93.6465 417.321 93.5647 417.52 93.5237 cv
418.449 94.0688 li
418.251 94.1098 418.039 94.1916 417.82 94.3171 cv
417.455 94.5257 417.113 94.8291 416.816 95.1883 cv
cp
f
418.449 94.0688 mo
417.52 93.5237 li
417.843 93.457 418.132 93.4983 418.365 93.635 cv
419.294 94.1801 li
419.061 94.0434 418.772 94.0021 418.449 94.0688 cv
cp
f
389.122 144.9 mo
388.193 144.355 li
388.228 114.876 li
389.157 115.421 li
389.122 144.9 li
cp
.611765 .709804 .8 rgb
f
391.656 111.133 mo
390.727 110.588 li
414.858 96.7852 li
415.788 97.3303 li
391.656 111.133 li
cp
.843137 .905882 .968627 rgb
f
388.16 115.352 mo
387.231 114.807 li
386.964 114.65 386.77 114.367 386.682 113.977 cv
387.611 114.522 li
387.699 114.912 387.893 115.196 388.16 115.352 cv
cp
.611765 .709804 .8 rgb
f
390.102 110.239 mo
389.172 109.694 li
389.34 109.651 li
390.27 110.196 li
390.102 110.239 li
cp
1 1 1 rgb
f
390.27 110.196 mo
389.34 109.651 li
389.663 109.584 389.949 109.625 390.179 109.76 cv
391.108 110.305 li
390.878 110.17 390.592 110.129 390.27 110.196 cv
cp
.843137 .905882 .968627 rgb
f
387.613 113.446 mo
386.683 112.901 li
386.818 112.159 387.193 111.384 387.7 110.772 cv
388.629 111.317 li
388.122 111.929 387.747 112.704 387.613 113.446 cv
cp
f
388.629 111.317 mo
387.7 110.772 li
387.865 110.572 388.044 110.39 388.233 110.231 cv
389.163 110.776 li
388.973 110.935 388.794 111.117 388.629 111.317 cv
cp
f
361.859 154.728 mo
360.93 154.183 li
360.958 130.474 li
361.887 131.019 li
361.859 154.728 li
cp
.611765 .709804 .8 rgb
f
364.386 126.731 mo
363.457 126.186 li
386.683 112.901 li
387.613 113.446 li
364.386 126.731 li
cp
.843137 .905882 .968627 rgb
f
389.163 110.776 mo
388.233 110.231 li
388.269 80.7528 li
389.198 81.2979 li
389.163 110.776 li
cp
.611765 .709804 .8 rgb
f
389.198 81.2979 mo
388.269 80.7528 li
389.208 80.2158 li
390.137 80.7609 li
389.198 81.2979 li
cp
.843137 .905882 .968627 rgb
f
390.137 80.7609 mo
390.102 110.239 li
390.879 109.998 391.479 110.353 391.656 111.133 cv
415.788 97.3303 li
416.009 96.1476 416.83 94.8832 417.82 94.3171 cv
418.97 93.6591 419.899 94.2033 419.898 95.522 cv
419.896 96.6469 419.202 97.9939 418.279 98.7636 cv
418.251 122.473 li
417.312 123.009 li
417.34 99.3007 li
416.571 99.5373 415.971 99.1827 415.786 98.4067 cv
391.654 112.21 li
391.476 113.194 390.874 114.235 390.096 114.884 cv
390.061 144.363 li
389.122 144.9 li
389.157 115.421 li
388.388 115.658 387.788 115.303 387.611 114.522 cv
364.385 127.808 li
364.206 128.792 363.596 129.838 362.826 130.482 cv
362.798 154.191 li
361.859 154.728 li
361.887 131.019 li
360.966 131.304 360.273 130.75 360.275 129.626 cv
360.276 128.307 361.208 126.698 362.358 126.04 cv
363.348 125.474 364.167 125.8 364.386 126.731 cv
387.613 113.446 li
387.791 112.462 388.393 111.42 389.163 110.776 cv
389.198 81.2979 li
390.137 80.7609 li
cp
.972549 .976471 .988235 rgb
f
360.874 130.95 mo
359.945 130.405 li
359.574 130.187 359.344 129.729 359.345 129.08 cv
359.346 128.179 359.782 127.143 360.424 126.367 cv
361.354 126.912 li
360.711 127.688 360.276 128.725 360.275 129.626 cv
360.274 130.274 360.503 130.732 360.874 130.95 cv
cp
.843137 .905882 .968627 rgb
f
361.354 126.912 mo
360.424 126.367 li
360.722 126.007 361.064 125.704 361.429 125.495 cv
361.648 125.37 361.859 125.288 362.057 125.247 cv
362.987 125.792 li
362.789 125.833 362.578 125.915 362.358 126.04 cv
361.994 126.249 361.651 126.552 361.354 126.912 cv
cp
f
362.987 125.792 mo
362.057 125.247 li
362.381 125.18 362.669 125.222 362.903 125.359 cv
363.832 125.904 li
363.599 125.767 363.31 125.725 362.987 125.792 cv
cp
f
399.975 66.3854 mo
398.116 65.2952 li
398.261 65.2124 398.4 65.1585 398.531 65.1315 cv
400.39 66.2217 li
400.259 66.2487 400.12 66.3026 399.975 66.3854 cv
cp
.878431 .537255 .0627451 rgb
f
400.39 66.2217 mo
398.531 65.1315 li
398.743 65.0878 398.931 65.1147 399.084 65.204 cv
400.942 66.2942 li
400.79 66.2049 400.601 66.1781 400.39 66.2217 cv
cp
f
377.247 97.8679 mo
375.388 96.7777 li
375.156 96.6412 375.012 96.3524 375.012 95.9429 cv
376.871 97.0331 li
376.871 97.4426 377.014 97.7314 377.247 97.8679 cv
cp
.94902 .662745 .180392 rgb
f
389.504 72.3361 mo
387.645 71.2459 li
398.116 65.2952 li
399.975 66.3854 li
389.504 72.3361 li
cp
.878431 .537255 .0627451 rgb
f
387.164 70.5733 mo
385.306 69.4831 li
385.471 69.3884 385.641 69.3248 385.807 69.2906 cv
387.665 70.3808 li
387.499 70.415 387.33 70.4786 387.164 70.5733 cv
cp
f
387.665 70.3808 mo
385.807 69.2906 li
386.127 69.2245 386.435 69.2681 386.675 69.4089 cv
388.534 70.4991 li
388.293 70.3583 387.986 70.3148 387.665 70.3808 cv
cp
f
376.871 97.0331 mo
375.012 95.9429 li
374.443 77.1497 li
376.302 78.2399 li
376.871 97.0331 li
cp
f
377.666 75.8998 mo
375.807 74.8095 li
385.306 69.4831 li
387.164 70.5733 li
377.666 75.8998 li
cp
f
376.302 78.2399 mo
374.443 77.1497 li
374.444 76.5616 374.727 75.8883 375.146 75.3827 cv
377.005 76.473 li
376.586 76.9785 376.303 77.6518 376.302 78.2399 cv
cp
f
377.005 76.473 mo
375.146 75.3827 li
375.342 75.1464 375.567 74.9467 375.807 74.8095 cv
377.666 75.8998 li
377.426 76.0369 377.201 76.2366 377.005 76.473 cv
cp
f
377.666 75.8998 mo
387.164 70.5733 li
387.883 70.162 388.678 70.3376 388.93 70.9585 cv
389.504 72.3361 li
399.975 66.3854 li
400.728 65.9548 401.336 66.3047 401.335 67.1677 cv
400.724 83.3898 li
400.723 84.214 400.138 85.2169 399.419 85.6282 cv
378.172 97.7814 li
377.453 98.1926 376.87 97.8574 376.871 97.0331 cv
376.302 78.2399 li
376.303 77.3769 376.913 76.3304 377.666 75.8998 cv
cp
.94902 .662745 .180392 rgb
f
377.113 88.7218 mo
376.26 88.7184 li
375.483 80.622 li
376.412 81.1671 li
377.113 88.7218 li
cp
.611765 .709804 .8 rgb
f
376.412 81.1671 mo
375.483 80.622 li
398.137 65.736 li
399.066 66.2811 li
376.412 81.1671 li
cp
.843137 .905882 .968627 rgb
f
399.066 66.2811 mo
399.759 73.8407 li
377.113 88.7218 li
376.412 81.1671 li
399.066 66.2811 li
cp
.972549 .976471 .988235 rgb
f
373.938 144.113 mo
372.454 143.243 li
372.57 143.177 372.681 143.134 372.785 143.113 cv
374.269 143.983 li
374.164 144.004 374.053 144.047 373.938 144.113 cv
cp
.878431 .537255 .0627451 rgb
f
374.269 143.983 mo
372.785 143.113 li
372.954 143.078 373.105 143.099 373.226 143.17 cv
374.71 144.04 li
374.588 143.969 374.437 143.948 374.269 143.983 cv
cp
f
355.8 169.238 mo
354.316 168.368 li
354.131 168.259 354.016 168.028 354.016 167.702 cv
355.5 168.572 li
355.499 168.898 355.614 169.129 355.8 169.238 cv
cp
.94902 .662745 .180392 rgb
f
365.581 148.862 mo
364.098 147.992 li
372.454 143.243 li
373.938 144.113 li
365.581 148.862 li
cp
.878431 .537255 .0627451 rgb
f
363.714 147.455 mo
362.231 146.585 li
362.363 146.51 362.498 146.459 362.631 146.432 cv
364.114 147.302 li
363.981 147.329 363.846 147.38 363.714 147.455 cv
cp
f
364.114 147.302 mo
362.631 146.432 li
362.887 146.379 363.132 146.414 363.323 146.526 cv
364.807 147.396 li
364.615 147.284 364.37 147.249 364.114 147.302 cv
cp
f
355.5 168.572 mo
354.016 167.702 li
353.562 152.704 li
355.046 153.574 li
355.5 168.572 li
cp
f
356.134 151.706 mo
354.65 150.836 li
362.231 146.585 li
363.714 147.455 li
356.134 151.706 li
cp
f
355.046 153.574 mo
353.562 152.704 li
353.563 152.234 353.789 151.697 354.123 151.294 cv
355.606 152.164 li
355.272 152.567 355.046 153.104 355.046 153.574 cv
cp
f
355.606 152.164 mo
354.123 151.294 li
354.279 151.105 354.459 150.946 354.65 150.836 cv
356.134 151.706 li
355.942 151.816 355.763 151.975 355.606 152.164 cv
cp
f
356.134 151.706 mo
363.714 147.455 li
364.288 147.127 364.922 147.267 365.124 147.763 cv
365.581 148.862 li
373.938 144.113 li
374.538 143.77 375.024 144.049 375.023 144.738 cv
374.535 157.684 li
374.534 158.341 374.068 159.142 373.494 159.47 cv
356.538 169.169 li
355.964 169.497 355.499 169.229 355.5 168.572 cv
355.046 153.574 li
355.046 152.885 355.533 152.05 356.134 151.706 cv
cp
.94902 .662745 .180392 rgb
f
355.693 161.939 mo
354.951 161.504 li
354.392 155.475 li
355.133 155.91 li
355.693 161.939 li
cp
.611765 .709804 .8 rgb
f
355.133 155.91 mo
354.392 155.475 li
372.47 143.595 li
373.212 144.03 li
355.133 155.91 li
cp
.843137 .905882 .968627 rgb
f
373.212 144.03 mo
373.765 150.063 li
355.693 161.939 li
355.133 155.91 li
373.212 144.03 li
cp
.972549 .976471 .988235 rgb
f
402.131 128.147 mo
400.647 127.277 li
400.763 127.211 400.874 127.168 400.979 127.146 cv
402.462 128.016 li
402.358 128.038 402.246 128.081 402.131 128.147 cv
cp
.878431 .537255 .0627451 rgb
f
402.462 128.016 mo
400.979 127.146 li
401.147 127.112 401.298 127.133 401.419 127.204 cv
402.903 128.074 li
402.781 128.003 402.631 127.982 402.462 128.016 cv
cp
f
383.993 153.272 mo
382.51 152.402 li
382.324 152.293 382.209 152.062 382.21 151.735 cv
383.693 152.605 li
383.693 152.932 383.807 153.163 383.993 153.272 cv
cp
.94902 .662745 .180392 rgb
f
393.774 132.896 mo
392.291 132.026 li
400.647 127.277 li
402.131 128.147 li
393.774 132.896 li
cp
.878431 .537255 .0627451 rgb
f
391.907 131.489 mo
390.424 130.619 li
390.556 130.544 390.691 130.493 390.824 130.466 cv
392.307 131.336 li
392.175 131.363 392.039 131.414 391.907 131.489 cv
cp
f
392.307 131.336 mo
390.824 130.466 li
391.08 130.413 391.325 130.448 391.517 130.56 cv
393 131.43 li
392.809 131.318 392.563 131.283 392.307 131.336 cv
cp
f
383.693 152.605 mo
382.21 151.735 li
381.755 136.738 li
383.239 137.607 li
383.693 152.605 li
cp
f
384.327 135.74 mo
382.844 134.87 li
390.424 130.619 li
391.907 131.489 li
384.327 135.74 li
cp
f
383.239 137.607 mo
381.755 136.738 li
381.756 136.268 381.982 135.731 382.316 135.327 cv
383.8 136.197 li
383.465 136.601 383.239 137.138 383.239 137.607 cv
cp
f
383.8 136.197 mo
382.316 135.327 li
382.473 135.139 382.652 134.979 382.844 134.87 cv
384.327 135.74 li
384.136 135.85 383.956 136.009 383.8 136.197 cv
cp
f
384.327 135.74 mo
391.907 131.489 li
392.481 131.161 393.115 131.301 393.317 131.797 cv
393.774 132.896 li
402.131 128.147 li
402.732 127.803 403.217 128.083 403.216 128.771 cv
402.728 141.717 li
402.728 142.375 402.261 143.176 401.687 143.504 cv
384.731 153.202 li
384.157 153.531 383.692 153.263 383.693 152.605 cv
383.239 137.607 li
383.24 136.919 383.726 136.084 384.327 135.74 cv
cp
.94902 .662745 .180392 rgb
f
383.886 145.973 mo
383.144 145.538 li
382.585 139.509 li
383.327 139.944 li
383.886 145.973 li
cp
.611765 .709804 .8 rgb
f
383.327 139.944 mo
382.585 139.509 li
400.664 127.629 li
401.405 128.064 li
383.327 139.944 li
cp
.843137 .905882 .968627 rgb
f
401.405 128.064 mo
401.958 134.097 li
383.886 145.973 li
383.327 139.944 li
401.405 128.064 li
cp
.972549 .976471 .988235 rgb
f
428.361 113.215 mo
426.877 112.344 li
426.993 112.278 427.104 112.235 427.208 112.214 cv
428.692 113.084 li
428.587 113.105 428.476 113.148 428.361 113.215 cv
cp
.878431 .537255 .0627451 rgb
f
428.692 113.084 mo
427.208 112.214 li
427.377 112.179 427.528 112.2 427.649 112.272 cv
429.133 113.142 li
429.011 113.07 428.86 113.049 428.692 113.084 cv
cp
f
410.223 138.339 mo
408.739 137.469 li
408.554 137.36 408.439 137.129 408.439 136.803 cv
409.923 137.673 li
409.922 137.999 410.037 138.23 410.223 138.339 cv
cp
.94902 .662745 .180392 rgb
f
420.004 117.963 mo
418.521 117.093 li
426.877 112.344 li
428.361 113.215 li
420.004 117.963 li
cp
.878431 .537255 .0627451 rgb
f
418.137 116.557 mo
416.654 115.687 li
416.786 115.611 416.921 115.56 417.054 115.533 cv
418.537 116.403 li
418.404 116.43 418.269 116.481 418.137 116.557 cv
cp
f
418.537 116.403 mo
417.054 115.533 li
417.309 115.48 417.555 115.515 417.746 115.627 cv
419.23 116.497 li
419.038 116.385 418.793 116.35 418.537 116.403 cv
cp
f
409.923 137.673 mo
408.439 136.803 li
407.985 121.805 li
409.468 122.675 li
409.923 137.673 li
cp
f
410.557 120.807 mo
409.073 119.937 li
416.654 115.687 li
418.137 116.557 li
410.557 120.807 li
cp
f
409.468 122.675 mo
407.985 121.805 li
407.986 121.336 408.212 120.798 408.546 120.395 cv
410.029 121.265 li
409.695 121.668 409.469 122.205 409.468 122.675 cv
cp
f
410.029 121.265 mo
408.546 120.395 li
408.702 120.206 408.882 120.047 409.073 119.937 cv
410.557 120.807 li
410.365 120.917 410.186 121.076 410.029 121.265 cv
cp
f
410.557 120.807 mo
418.137 116.557 li
418.711 116.228 419.345 116.368 419.547 116.864 cv
420.004 117.963 li
428.361 113.215 li
428.961 112.871 429.447 113.15 429.446 113.839 cv
428.958 126.785 li
428.957 127.442 428.491 128.243 427.917 128.571 cv
410.961 138.27 li
410.387 138.598 409.922 138.331 409.923 137.673 cv
409.468 122.675 li
409.469 121.986 409.956 121.151 410.557 120.807 cv
cp
.94902 .662745 .180392 rgb
f
410.116 131.04 mo
409.374 130.605 li
408.815 124.576 li
409.556 125.011 li
410.116 131.04 li
cp
.611765 .709804 .8 rgb
f
409.556 125.011 mo
408.815 124.576 li
426.894 112.696 li
427.635 113.131 li
409.556 125.011 li
cp
.843137 .905882 .968627 rgb
f
427.635 113.131 mo
428.188 119.164 li
410.116 131.04 li
409.556 125.011 li
427.635 113.131 li
cp
.972549 .976471 .988235 rgb
f
388.857 81.8928 mo
388.998 81.4548 389.294 80.9622 389.653 80.5288 cv
389.985 80.1276 390.37 79.7771 390.736 79.5679 cv
400.827 73.6894 li
401.003 73.589 401.172 73.5237 401.328 73.4914 cv
401.563 73.4426 401.771 73.4691 401.931 73.5629 cv
400.072 72.4726 li
399.912 72.3789 399.705 72.3524 399.469 72.4012 cv
399.313 72.4335 399.144 72.4988 398.969 72.5992 cv
388.878 78.4777 li
388.512 78.6869 388.126 79.0374 387.794 79.4386 cv
387.435 79.872 387.139 80.3646 386.999 80.8026 cv
386.388 82.683 li
375.265 89.0839 li
374.973 89.251 374.699 89.4927 374.469 89.7702 cv
374.073 90.2478 373.809 90.8313 373.808 91.322 cv
374.425 105.252 li
374.425 105.579 374.547 105.81 374.75 105.929 cv
376.609 107.019 li
376.406 106.9 376.284 106.669 376.284 106.343 cv
375.667 92.4123 li
375.668 91.9215 375.932 91.338 376.328 90.8604 cv
376.557 90.5829 376.831 90.3412 377.124 90.1741 cv
388.246 83.7733 li
388.857 81.8928 li
cp
.94902 .662745 .180392 rgb
f
373.389 145.547 mo
373.265 145.572 373.13 145.624 372.99 145.705 cv
364.937 150.396 li
364.645 150.563 364.337 150.843 364.073 151.163 cv
363.786 151.509 363.55 151.902 363.438 152.251 cv
362.95 153.752 li
354.074 158.86 li
353.84 158.993 353.622 159.186 353.438 159.408 cv
353.123 159.789 352.912 160.255 352.911 160.646 cv
353.404 171.763 li
353.403 172.024 353.501 172.208 353.663 172.303 cv
355.146 173.173 li
354.984 173.079 354.887 172.894 354.887 172.633 cv
354.395 161.516 li
354.395 161.125 354.606 160.659 354.922 160.278 cv
355.105 160.057 355.324 159.864 355.557 159.73 cv
364.433 154.622 li
364.921 153.121 li
365.033 152.772 365.27 152.379 365.556 152.033 cv
365.821 151.713 366.129 151.433 366.421 151.266 cv
374.474 146.575 li
374.614 146.495 374.748 146.443 374.873 146.417 cv
375.061 146.378 375.227 146.399 375.354 146.474 cv
373.871 145.604 li
373.743 145.529 373.578 145.508 373.389 145.547 cv
cp
f
401.583 129.581 mo
401.458 129.606 401.324 129.658 401.184 129.738 cv
393.13 134.43 li
392.839 134.597 392.531 134.876 392.266 135.197 cv
391.98 135.543 391.743 135.936 391.631 136.285 cv
391.143 137.786 li
382.267 142.894 li
382.034 143.027 381.815 143.22 381.632 143.442 cv
381.316 143.823 381.105 144.289 381.104 144.68 cv
381.597 155.797 li
381.597 156.058 381.694 156.242 381.856 156.337 cv
383.339 157.207 li
383.178 157.112 383.08 156.928 383.08 156.667 cv
382.588 145.55 li
382.588 145.159 382.799 144.693 383.115 144.312 cv
383.298 144.09 383.517 143.898 383.75 143.764 cv
392.627 138.656 li
393.114 137.155 li
393.227 136.806 393.463 136.413 393.749 136.067 cv
394.014 135.747 394.322 135.467 394.614 135.3 cv
402.667 130.609 li
402.807 130.528 402.942 130.476 403.066 130.451 cv
403.254 130.412 403.42 130.433 403.547 130.508 cv
402.064 129.637 li
401.936 129.563 401.771 129.542 401.583 129.581 cv
cp
f
428.294 114.705 mo
428.166 114.63 428.001 114.609 427.813 114.648 cv
427.688 114.674 427.553 114.726 427.413 114.806 cv
419.36 119.497 li
419.068 119.664 418.761 119.944 418.496 120.264 cv
418.209 120.61 417.973 121.003 417.861 121.353 cv
417.373 122.853 li
408.497 127.961 li
408.263 128.095 408.045 128.288 407.861 128.509 cv
407.546 128.89 407.335 129.356 407.334 129.747 cv
407.827 140.865 li
407.826 141.125 407.924 141.31 408.086 141.404 cv
409.569 142.274 li
409.408 142.18 409.31 141.995 409.31 141.735 cv
408.818 130.618 li
408.818 130.226 409.029 129.76 409.345 129.379 cv
409.528 129.158 409.747 128.965 409.98 128.831 cv
418.856 123.723 li
419.344 122.223 li
419.456 121.873 419.693 121.48 419.979 121.134 cv
420.244 120.814 420.552 120.534 420.844 120.367 cv
428.897 115.676 li
429.037 115.596 429.171 115.544 429.296 115.518 cv
429.484 115.479 429.65 115.5 429.777 115.575 cv
428.294 114.705 li
cp
f
400.827 73.6894 mo
401.622 73.2346 402.273 73.5021 402.272 74.2779 cv
401.625 91.8478 li
401.625 92.5848 400.998 93.5537 400.237 93.9891 cv
377.67 106.897 li
376.908 107.332 376.283 107.08 376.284 106.343 cv
375.667 92.4123 li
375.668 91.6366 376.328 90.6289 377.124 90.1741 cv
388.246 83.7733 li
388.857 81.8928 li
389.129 81.0496 389.975 80.0033 390.736 79.5679 cv
400.827 73.6894 li
cp
1 .792157 0 rgb
f
374.474 146.575 mo
375.108 146.212 375.627 146.425 375.627 147.044 cv
375.111 161.066 li
375.11 161.654 374.61 162.427 374.002 162.775 cv
355.993 173.076 li
355.385 173.423 354.886 173.222 354.887 172.633 cv
354.395 161.516 li
354.395 160.897 354.922 160.093 355.557 159.73 cv
364.433 154.622 li
364.921 153.121 li
365.138 152.449 365.813 151.613 366.421 151.266 cv
374.474 146.575 li
cp
f
402.667 130.609 mo
403.301 130.246 403.821 130.459 403.82 131.078 cv
403.304 145.1 li
403.303 145.688 402.803 146.461 402.195 146.809 cv
384.186 157.11 li
383.579 157.457 383.08 157.255 383.08 156.667 cv
382.588 145.55 li
382.589 144.931 383.116 144.127 383.75 143.764 cv
392.627 138.656 li
393.114 137.155 li
393.331 136.482 394.006 135.647 394.614 135.3 cv
402.667 130.609 li
cp
f
428.897 115.676 mo
429.531 115.313 430.05 115.526 430.05 116.146 cv
429.534 130.167 li
429.533 130.755 429.033 131.529 428.425 131.876 cv
410.416 142.177 li
409.808 142.525 409.309 142.323 409.31 141.735 cv
408.818 130.618 li
408.818 129.999 409.345 129.194 409.98 128.831 cv
418.856 123.723 li
419.344 122.223 li
419.561 121.55 420.236 120.715 420.844 120.367 cv
428.897 115.676 li
cp
f
286.52 181.669 mo
283.056 179.657 li
295.095 158.705 li
298.559 160.717 li
286.52 181.669 li
cp
.831373 .243137 .243137 rgb
f
294.852 158.632 mo
291.389 156.62 li
304.797 144.681 li
308.26 146.693 li
294.852 158.632 li
cp
f
269.862 183.577 mo
266.399 181.565 li
283.056 179.657 li
286.52 181.669 li
269.862 183.577 li
cp
f
247.05 223.081 mo
243.587 221.068 li
266.399 181.565 li
269.862 183.577 li
247.05 223.081 li
cp
f
294.852 158.632 mo
308.26 146.693 li
304.751 164.201 li
301.045 162.107 li
287.38 185.885 li
270.707 187.802 li
249.529 224.493 li
247.05 223.081 li
269.862 183.577 li
286.52 181.669 li
298.559 160.717 li
294.852 158.632 li
cp
.980392 .458824 .392157 rgb
f
309.585 219.292 mo
299.195 213.254 li
299.085 174.608 li
309.475 180.646 li
309.585 219.292 li
cp
.611765 .709804 .8 rgb
f
309.475 180.646 mo
299.085 174.608 li
310.286 168.142 li
320.676 174.18 li
309.475 180.646 li
cp
.843137 .905882 .968627 rgb
f
320.676 174.18 mo
320.785 212.825 li
309.585 219.292 li
309.475 180.646 li
320.676 174.18 li
cp
.972549 .976471 .988235 rgb
f
295.373 227.497 mo
284.983 221.459 li
284.916 197.874 li
295.306 203.911 li
295.373 227.497 li
cp
.196078 .490196 .482353 rgb
f
295.306 203.911 mo
284.916 197.874 li
296.116 191.407 li
306.506 197.445 li
295.306 203.911 li
cp
.247059 .619608 .611765 rgb
f
306.506 197.445 mo
306.573 221.031 li
295.373 227.497 li
295.306 203.911 li
306.506 197.445 li
cp
.0509804 .85098 .831373 rgb
f
281.161 235.702 mo
270.771 229.665 li
270.686 199.788 li
281.076 205.826 li
281.161 235.702 li
cp
.65098 .113725 .113725 rgb
f
281.076 205.826 mo
270.686 199.788 li
281.894 193.317 li
292.284 199.355 li
281.076 205.826 li
cp
.831373 .243137 .243137 rgb
f
292.284 199.355 mo
292.369 229.232 li
281.161 235.702 li
281.076 205.826 li
292.284 199.355 li
cp
.980392 .458824 .392157 rgb
f
266.956 243.741 mo
256.566 237.703 li
256.52 221.228 li
266.909 227.266 li
266.956 243.741 li
cp
.878431 .537255 .0627451 rgb
f
266.909 227.266 mo
256.52 221.228 li
267.72 214.762 li
278.11 220.8 li
266.909 227.266 li
cp
.941176 .654902 .180392 rgb
f
278.11 220.8 mo
278.156 237.275 li
266.956 243.741 li
266.909 227.266 li
278.11 220.8 li
cp
1 .792157 0 rgb
f
125.576 41.6697 mo
125.666 73.6367 li
97.8454 89.7 li
97.7562 57.7315 li
125.576 41.6697 li
cp
.839216 .156863 .133333 rgb
f
123.016 40.1801 mo
125.576 41.6697 li
97.7562 57.7315 li
97.8454 89.7 li
95.2844 88.2102 li
95.1925 56.244 li
123.016 40.1801 li
cp
1 .388235 .388235 rgb
f
105.863 75.8166 mo
109.099 77.6594 li
109.09 73.9541 li
105.863 75.8166 li
cp
1 1 1 rgb
f
110.631 71.5198 mo
118.202 67.1487 li
118.199 65.5884 li
110.628 69.9596 li
110.631 71.5198 li
cp
118.167 53.5068 mo
111.133 57.5659 li
111.141 59.8483 li
118.172 55.7877 li
118.167 53.5068 li
cp
107.186 70.7393 mo
118.196 64.3797 li
118.193 62.8201 li
107.179 69.1783 li
107.186 70.7393 li
cp
107.176 67.9725 mo
118.188 61.6144 li
118.184 60.0533 li
107.173 66.4114 li
107.176 67.9725 li
cp
107.166 65.2118 mo
118.183 58.8544 li
118.175 57.2881 li
107.164 63.6454 li
107.166 65.2118 li
cp
119.798 71.7507 mo
109.424 77.7398 li
109.411 73.3938 li
105.616 75.582 li
105.568 58.5029 li
119.738 50.3232 li
119.798 71.7507 li
cp
f
234.461 34.9069 mo
233.451 34.3196 232.199 34.1465 230.801 34.4411 cv
229.938 34.6228 229.02 34.9824 228.067 35.5324 cv
227.153 36.0604 226.277 36.7242 225.446 37.4929 cv
228.812 39.4488 li
229.642 38.68 230.518 38.0164 231.433 37.4883 cv
232.386 36.9383 233.304 36.5787 234.167 36.397 cv
235.565 36.1024 236.816 36.2754 237.827 36.8628 cv
234.461 34.9069 li
cp
.941176 .654902 .180392 rgb
f
222.538 32.5577 mo
221.37 31.8787 219.923 31.6791 218.307 32.0197 cv
217.309 32.2299 216.245 32.6461 215.143 33.2827 cv
213.308 34.3424 211.585 35.8828 210.091 37.7036 cv
207.342 41.0549 205.368 45.3565 204.889 49.3615 cv
204.065 49.5477 203.181 49.9006 202.274 50.4243 cv
200.692 51.3377 199.207 52.6641 197.92 54.2319 cv
195.162 57.5887 193.305 62.0523 193.316 65.9389 cv
193.325 68.7725 194.324 70.7674 195.937 71.7049 cv
199.303 73.6609 li
197.69 72.7232 196.69 70.7285 196.682 67.8948 cv
196.671 64.0082 198.528 59.5446 201.285 56.1877 cv
202.573 54.62 204.057 53.2936 205.639 52.3802 cv
206.546 51.8564 207.431 51.5037 208.255 51.3174 cv
208.733 47.3123 210.708 43.0108 213.457 39.6595 cv
214.951 37.8386 216.673 36.2983 218.509 35.2386 cv
219.611 34.6021 220.674 34.1858 221.672 33.9755 cv
223.289 33.635 224.735 33.8346 225.904 34.5136 cv
222.538 32.5577 li
cp
f
218.509 35.2386 mo
223.715 32.2329 228.041 34.1389 228.812 39.4488 cv
229.642 38.6801 230.518 38.0164 231.433 37.4883 cv
236.395 34.6234 240.433 36.9244 240.449 42.6261 cv
240.465 48.3279 236.453 55.2759 231.492 58.1408 cv
205.698 73.0327 li
200.728 75.9019 196.698 73.5966 196.682 67.8948 cv
196.666 62.193 200.67 55.2494 205.639 52.3802 cv
206.546 51.8565 207.431 51.5036 208.255 51.3174 cv
208.993 45.1362 213.295 38.2486 218.509 35.2386 cv
cp
1 .792157 0 rgb
f
260.75 37.7065 mo
259.739 37.1191 258.488 36.9461 257.09 37.2407 cv
256.227 37.4224 255.308 37.782 254.356 38.332 cv
253.441 38.8601 252.565 39.5238 251.735 40.2925 cv
255.101 42.2484 li
255.931 41.4797 256.807 40.8159 257.721 40.2879 cv
258.674 39.7379 259.593 39.3783 260.455 39.1966 cv
261.853 38.9021 263.105 39.075 264.115 39.6624 cv
260.75 37.7065 li
cp
.831373 .243137 .243137 rgb
f
248.823 35.3513 mo
247.654 34.6721 246.207 34.4719 244.591 34.8125 cv
243.594 35.0225 242.532 35.438 241.431 36.0735 cv
239.602 37.1298 237.884 38.6666 236.393 40.4839 cv
233.642 43.838 231.664 48.1478 231.186 52.1567 cv
230.354 52.3474 229.477 52.6958 228.562 53.2239 cv
226.983 54.1359 225.499 55.4617 224.212 57.0293 cv
221.454 60.3861 219.594 64.8519 219.605 68.7385 cv
219.613 71.5711 220.614 73.5644 222.227 74.5019 cv
225.592 76.4577 li
223.979 75.5202 222.979 73.527 222.971 70.6944 cv
222.96 66.8078 224.82 62.342 227.577 58.9852 cv
228.865 57.4176 230.348 56.0918 231.928 55.1798 cv
232.843 54.6517 233.72 54.3032 234.551 54.1126 cv
235.03 50.1036 237.008 45.7938 239.759 42.4398 cv
241.25 40.6225 242.968 39.0857 244.797 38.0294 cv
245.898 37.3939 246.959 36.9783 247.956 36.7684 cv
249.573 36.4279 251.02 36.6279 252.188 37.3072 cv
248.823 35.3513 li
cp
f
244.797 38.0295 mo
250.003 35.0238 254.33 36.9385 255.101 42.2484 cv
255.931 41.4797 256.807 40.816 257.721 40.2879 cv
262.684 37.4231 266.721 39.724 266.737 45.4258 cv
266.753 51.1275 262.742 58.0756 257.78 60.9404 cv
231.986 75.8323 li
227.024 78.6971 222.987 76.3962 222.971 70.6944 cv
222.954 64.9927 226.966 58.0446 231.928 55.1798 cv
232.843 54.6517 233.72 54.3033 234.551 54.1126 cv
235.289 47.9314 239.591 41.0351 244.797 38.0295 cv
cp
.980392 .458824 .392157 rgb
f
261.777 31.9916 mo
259.253 30.5247 li
258.84 27.5348 257.825 25.1115 256.232 23.303 cv
255.561 22.5432 254.798 21.9166 253.958 21.4281 cv
256.482 22.895 li
257.322 23.3835 258.085 24.0102 258.756 24.7699 cv
260.349 26.5784 261.364 29.0017 261.777 31.9916 cv
cp
.972549 .976471 .988235 rgb
f
237.297 25.5089 mo
234.773 24.042 li
236.63 22.3743 238.553 20.9691 240.479 19.8573 cv
242.714 18.5666 244.952 17.672 247.092 17.2232 cv
249.616 18.6901 li
247.477 19.1389 245.238 20.0335 243.003 21.3242 cv
241.077 22.436 239.154 23.8412 237.297 25.5089 cv
cp
.843137 .905882 .968627 rgb
f
249.616 18.6901 mo
247.092 17.2232 li
248.075 17.0169 249.037 16.9048 249.969 16.8918 cv
252.119 16.8634 254.075 17.353 255.754 18.3289 cv
258.279 19.7959 li
256.599 18.8199 254.643 18.3303 252.493 18.3587 cv
251.561 18.3717 250.599 18.4838 249.616 18.6901 cv
cp
f
231.853 33.1354 mo
229.328 31.6685 li
233.714 22.013 li
236.238 23.4799 li
231.853 33.1354 li
cp
f
236.238 23.4799 mo
237.297 25.5089 li
239.154 23.8412 241.077 22.436 243.003 21.3242 cv
246.266 19.4402 249.535 18.4 252.493 18.3587 cv
255.867 18.3142 258.764 19.5454 260.863 21.9306 cv
262.671 23.975 263.824 26.7307 264.291 30.1277 cv
261.777 31.9916 li
261.364 29.0017 260.349 26.5784 258.756 24.7699 cv
256.903 22.673 254.357 21.5897 251.388 21.6287 cv
248.785 21.6643 245.919 22.5801 243.054 24.2343 cv
241.481 25.1425 239.908 26.2737 238.38 27.6036 cv
239.416 29.602 li
231.853 33.1354 li
236.238 23.4799 li
cp
.972549 .976471 .988235 rgb
f
248.137 78.7457 mo
245.612 77.2788 li
244.15 75.737 li
246.674 77.2039 li
248.137 78.7457 li
cp
.611765 .709804 .8 rgb
f
243.749 74.1116 mo
241.225 72.6447 li
248.791 67.5041 li
251.316 68.971 li
243.749 74.1116 li
cp
.843137 .905882 .968627 rgb
f
245.181 75.6272 mo
242.657 74.1603 li
241.225 72.6447 li
243.749 74.1116 li
245.181 75.6272 li
cp
.611765 .709804 .8 rgb
f
223.828 83.5635 mo
221.303 82.0966 li
223.452 83.3449 226.09 83.6721 228.981 83.0654 cv
231.505 84.5323 li
228.614 85.139 225.976 84.8118 223.828 83.5635 cv
cp
.843137 .905882 .968627 rgb
f
231.505 84.5323 mo
228.981 83.0654 li
229.2 83.0195 229.42 82.9682 229.641 82.9116 cv
231.282 82.4876 232.974 81.7682 234.662 80.7936 cv
237.416 79.2034 240.161 76.934 242.657 74.1603 cv
245.181 75.6272 li
242.685 78.4009 239.941 80.6704 237.186 82.2605 cv
235.498 83.2351 233.807 83.9545 232.166 84.3785 cv
231.944 84.4351 231.724 84.4864 231.505 84.5323 cv
cp
f
216.946 80.1996 mo
214.421 78.7327 li
216.82 76.4094 li
219.344 77.8763 li
216.946 80.1996 li
cp
.611765 .709804 .8 rgb
f
222.025 86.6635 mo
219.5 85.1966 li
219.402 85.1388 li
217.138 83.7875 215.46 81.6333 214.421 78.7327 cv
216.946 80.1996 li
217.984 83.1002 219.663 85.2544 221.926 86.6057 cv
222.025 86.6635 li
cp
.972549 .976471 .988235 rgb
f
243.749 74.1116 mo
251.316 68.971 li
248.137 78.7457 li
246.674 77.2039 li
243.744 80.5448 240.492 83.2822 237.23 85.1657 cv
235.301 86.2791 233.364 87.099 231.488 87.586 cv
227.871 88.5158 224.565 88.1792 221.926 86.6057 cv
219.663 85.2544 217.984 83.1002 216.946 80.1996 cv
219.344 77.8763 li
220.267 80.4224 221.746 82.3232 223.742 83.5132 cv
226.067 84.8992 228.977 85.1932 232.166 84.3785 cv
233.807 83.9545 235.498 83.2351 237.186 82.2605 cv
239.941 80.6704 242.685 78.4009 245.181 75.6272 cv
243.749 74.1116 li
cp
f
422.807 278.905 mo
432.463 273.293 li
432.402 295.04 li
422.745 300.652 li
422.807 278.905 li
cp
1 .894118 .290196 rgb
f
413.633 273.608 mo
423.289 267.996 li
432.463 273.293 li
422.807 278.905 li
413.633 273.608 li
cp
f
422.807 278.905 mo
422.745 300.652 li
413.572 295.355 li
413.633 273.608 li
422.807 278.905 li
cp
1 .756863 .0156863 rgb
f
432.041 262.45 mo
441.698 256.838 li
441.574 300.336 li
431.917 305.948 li
432.041 262.45 li
cp
.839216 .133333 .133333 rgb
f
422.869 257.155 mo
432.525 251.542 li
441.698 256.838 li
432.041 262.45 li
422.869 257.155 li
cp
1 .333333 .258824 rgb
f
432.041 262.45 mo
431.917 305.948 li
422.745 300.652 li
422.869 257.155 li
432.041 262.45 li
cp
.639216 .0627451 .0627451 rgb
f
79.6555 327.004 mo
70.3381 321.588 li
70.2483 290.226 li
79.5667 295.642 li
79.6555 327.004 li
cp
.0509804 .490196 .658824 rgb
f
79.5667 295.642 mo
70.2483 290.226 li
79.0989 285.117 li
88.4153 290.533 li
79.5667 295.642 li
cp
.372549 .733333 .870588 rgb
f
88.4153 290.533 mo
88.5042 321.894 li
79.6555 327.004 li
79.5667 295.642 li
88.4153 290.533 li
cp
.172549 .639216 .819608 rgb
f
70.803 332.115 mo
61.4866 326.7 li
61.4592 316.914 li
70.7756 322.329 li
70.803 332.115 li
cp
.639216 .0627451 .0627451 rgb
f
70.7756 322.329 mo
61.4592 316.914 li
70.3098 311.804 li
79.6272 317.217 li
70.7756 322.329 li
cp
1 .333333 .258824 rgb
f
79.6272 317.217 mo
79.6555 327.004 li
70.803 332.115 li
70.7756 322.329 li
79.6272 317.217 li
cp
.839216 .133333 .133333 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (IvAN) ()
%%Title: (1410.i039.041.S.m004.c11.data analysis isometric.eps)
%%CreationDate: 10/30/2014 9:27 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9?5dcgWlc]eCe/0keBBO?98GU4UH#`sHX_A;(f/RFU^q=+CW>?0LB>)R6CAi//!O3c#e\^fNd?$fRQ0.do#_fi`@^+=I,
%grr@#F\S3CplBO[O/8]9NFTF^[RI`*)n+Pqi2G8,\c$uVe*Q`'S%6scVk#ng0&[TopVC])425gTVGk*]G7&]n=gcY!X.<S?)<?ah
%6k@g(HML8WhLZ7,4$>OKp0-tL`#T7o'$rRsHb<PsLW#&.BDL#]HeITnHHr22Bn':%VM.0cFa`7m*VKSW[[E?<ZOB(\b3js>C_#*b
%\Y'[b*N\>+Mq-Tk(SC?a/HZ3?kp,^/qb+Bq#Ms*!`r?:gins7;P#HE?)s?F`N+49;JUo<\5:cX83Apk$=f+dM$D+i2DUTK5ZrN!X
%kOmUkqiCN-f,443)QrC,?INr\L+;?q/#Q&4Vek=!]PXmtma$XbCGY_?Fm<k*mq/7P3,/:$G)`7$Isa@p]"L&i`W2=LTP$1;LkAIY
%D$$*@ld_k">:Vs1s5kn.S_g2)!*nkILU[ka3D8plHSoX,425(>3ggM!fQGrHS[UH'FUL)sccLIebfR/"k:G0SG05DZL#7J&o_QK9
%n9(pE'0#([YjemK\88N2Z.!h_OZA$]p)<T(5@G"3M>s&qaBQMG[eC<).mQ98\8?0TZ>ru,&9(pt+.V9IQ$0jjC#Kj"n]rCeGoI$^
%ft$1Y#(P!<d)E64TqM^(Y<)/>UQ$;Oq;W4ebrRq$%cPIa?>%pHCL;2Or39M*GL#%">IQNSoO(V`\\n%-nAe.=RHQ>Kg2h#U#Q3tu
%aZGLMb(L6*cCUM8^V[VTVt](*mfS[R^Bcl.:Fkh)DR7e,3bId-oQ\l-g.j:k5PQ8e2h&Us%]iUU,rTiMmo/lckgG/rTjFZlV#N.Y
%KV)-OjUA;BVn28Ahs[-7)9a(o@F*BoGk/IhhJ"nE/\aO?acY$k1hobZjEH+3VH[HHlsBRnc)026p9/M7SPCtC%+]t/'PqW)^ttdJ
%pr;Z[k.d0<')X^bUQh9\ZZ4Z>\lXkpdQe,Rq]h!59f;-+NOC'G]^S_r;#KhlNoFJJV;;3,3.gY?[Q40F$u/l@NUmI0ML0]tBS5Nn
%SI?G>2qXm#X,D:-mc;OT\jW]-bEJSlr<ss*-jeJVa3+`K=)<dHG'cut!CCHU\,<,ZG$6"00);94%:^YH,mC2K^[oLD4+D)(q*VHa
%JlIt,;H^$BOpj*K<b5"VAOA@AkHO'">a.nN.E`I:W^r#KW/@J9MP6DpXV@"o;GtY07B*;M.]_j*5?(A-<C8WD9=<<E>#NOY7BL<f
%->TWYBt@niVIjNGXf.MlZ<#AQ\tgjfWb]2K)nN$'H9j4LA\DPDL288^r\.;=1N^Mk/Aj@Q7aWV%AYW^69aO"hWL0]bRC[+"VJ2I,
%=YPbGaXinrZYE'tCanjN/Jupa/]0=qd%W'14pA!#Q)q8kZ)UjTQ>G4YJ8EceCm]fkfHrM^D7a0liDY>(fri,gC0(eIBEbpHi"oAf
%J@8S,$8CiK9WnF0-pZr!Rm-V^,(3)Q.Dr&MT5(''Pis@`O$XqR51!dO(9"1\a.SJb+,`=ks!d^bp:h7?Pkh5o5?6pPMOut[4CpTm
%_"(X8ruMB/V$^WsJ-SqF-jl>l\=`uWE9@a6kVu$[W_+*?i'\`?(!7r;\FTr5L5`>4\7'CD.-`+s&A:[q!a*<Z`:1$bi<dO=_A0kN
%4+@OGiaGK10-8-SKJ=ss(r@.4@i3Md=EEYd7*IB6m'-j+!XstGO=]<%?r@,o(cF*r&i$C/i)NXi0C`!750tPSDf"TpI-3"Doo&H,
%M?A\3%XS[I5C25?Y,C*"`XP3/p,PHahf78#I:p1[mJE]Mp\9E^.6LqqF,SE51Od/"#4B5@gAd%1!A;7a#4B7mj$8+u#02<L%[;A]
%#dAj<!R*9W#ojIt!?2*!&Fgs[NA,eqTLZj.J*6jjs8Ct@_Tkf[s&&P]jW?`,$.&eD(GRnl]qW/tF"S#n*Y&8VF0:5,CBEoZX@8Xj
%(lS13j;-Z&QW]-<LnDbRWlU5$4#OfG$ap6/YmQksP'jP9o?)T'116O\3+`8)<</pr^`sN^Vdrd->?&BJ'6'[V=((S+lnXsgY\ut'
%d42A&("eu^aAPFo?'7fP8HX&mJUJ5_Z'S)E;?^11>ZT#d&;(;5a9LWVQ:p=[\PfS2Ul&'$3EEKoLer$QX%HBp8sO.f;CP[>+:nm1
%J/5@O"'TCR(#G'';Rm,tPbG!!oOpV<B%_\h1`/l:&Z&C5<.XR4-,:prNErht?:IMA)6,Ad\Kl`ZWPH/>0`(pe?i_MW^nUp0$G\!>
%goCFF-%NE(0O'(F#%4o@:^R$\Jco%M!=C7V[1m#6/6FD)<_S-g;h3"9TXkJ,?jS6d!,H>car7Lu)Q^4GZmu.t=+Hl8-Hm&m`!5ci
%J`:gFI2.!WCeDJX.^2\pfW>5AR0>Zb_#A&PM[JgIUfW,bP[SKgYerBcZO+7G_k*pIQXjCMWkbUVJ.Y5c$QH=f"<>g?S#O3RA5,t&
%^u`_Sm>=0O2IMaUGbkL,;ut0Q<DoiIF(N-LQm:O^%@Cf10@^(V<PV@4OlS!2gG7]'&TH>+VIT`dl[[M8@(.[[&o8oQ4=iJM5:d.<
%"&']u"6Kk',9q%XG(-^fMk0momC\`h3\0pF^m">PC.]Cj3$h"[/492a?;Jh3Ph:I#oTi,%$2Q^/r_=QS50h!o-1mkn%G4ZRV(WHH
%N/].:d(#]N@8:!Gi$i$Od>I&$[._`(^Lh;Wqc@5kT"Nm]2OXa?Y]'<oF.;[Nqh+iKS[qJObDdEd_k#ZQ#sW:gQN(bYg[O771Doa&
%kJMl*?cfE9_a:Qi7,-4o)U3TSD,Ufg\$60]]`05UC[`9k%.N:4XMWCXDW:j\D-r#:rH+JqhWe1;5.DNY%/g@Z$7<RCXj&[V=)R'h
%C6/K8YMi3,P6RE3.H'tagE?E^!e`dV%YV^U=eXN^EmEafTJYp_@)5;k"\a\\5sdta1/&M&]-n)T!k;(m[</(c)G_=]Hfr;DgTJ)N
%=,4IHEEW4bDZl_Vk@DpVe4+Fs!Lu?]_oQkebmq.q.H$H4:pl(\_qMp%R0k@InP-iQ(cWD7T%b>Fdg._4iJgE[]VJ=-kM5=6eXlYJ
%#aCZFX@:j@A2^2*ON0X@R7XufPF.(Yp$qo5_\h!=O.s(EJAYDHKkhM.S-2<Zlh6i7Vj@INT]o/OFOD'#C@3\^dAGTk<',3^oKiT)
%5(u7#O@r'L+D#-T"?+Ej7;cmLb0:n[$WCrO5aW?d:0X*+rs_opU?@%ZhgEsgoG>O&*#N`G#]jFuh6\o'_@a5\jVG;[_NnEYEXQ+>
%0:G,ZD6i8$!Ac[Cgq%M6XLWF<be?5AFFUmHP:NQfq=RMgkiU:L8YJBC#PGD"ZU#ra;jdeuo:$JbAA%rK@e3'^3H#Bt8ZKO>&_s/t
%Yj2_prJ&cRNeVG[p#Zt,;bt:ClSllte%h&71t?M@2PhXZRA]W$`C8Z)N1ktdVY*<.D(_g#M:s1do@9f/^osfdG"YA@rbeV'%J"[$
%Kl\][m/:A]_Pt'n2('D0U#l`Kn@-3KoAPJB;04UThEY49JT1\_Yj(d0Is*nj\"*`)pa\9-@!_T?ST]M@9Eeemb+'@ilS9NuRX]B\
%:Be^rgV[FKVZPn..DY`9NU%EOSORt1T?\mmQJFAm32u=e]jWOYSgj'i7:]e<21tq;N\`msN`kBB;]s`:;npds%'Ee%+AE8]Y.-_(
%fmQ"U+Vc0:7Ph,"?`RmK:i?hu%-+]RjRX3b9se,8GbuXL;9mN"RVB*&.VY:?[;pVIj#e6rds-3%-)]e=m9R<5P&mViUh=q]F$DFN
%`?NLgTAonA,0OU51cM#fP7!hJGAF(+@E+k,KtXfjVpd3j>k`^s!d0EB)n4e]7_O@acu5=pT>pOble$Qr'!^MFMWt4E'53bfn@XK3
%N*l2=F$8aZ\lVuN5D>c$5r7S&ZEZ6!94j`S/XY.k0s?Ora=We2?f."#;"/5u<[>W?!cF8-S*#^Gk;WimEA2jU%`Y-=OS(EUN)O77
%ce[jb<)Rc!R<'9@Ec*)=C%UCRJV'B@/CQ;ZfhXsr+-ji$:H\Grn?3Nf0fT"\"YBVZLNdY0e4q/U!3LA)[+fKi`,3q>P\K,kYubfM
%^>fpD[HZY.^N.6?VVLBZRnh5IgIi'ImTbX>Q35s>#dqp2V%[)US;Vf\6XM2C9OH6sgKqc:j70UPBO<6S@HOD'MOg+n<t;joH5r-9
%D>oj`R,U4Dr]!^41RNTj:W'bUT'B8@6rm8OCXdNi1)]>Nd;5]'fP03t`jRtr'VIFng9<FS'@%?o&f]^B==MU>cq1"tF`%\D'O:U2
%f4h'I0ktl1E24%.,-#p@^ENY)@p?JA9``pga\#/+?bP;51k);'c#7o<[`0`M5]im7Q`7n>Dg,\2+U':e1psAdX.'0cfk@umMN]AE
%Vcc+FUcC+O1qb?2SE;KfGDc>"`F7]s;Q:S8jc*FZ::nnG,r=/YR_^R(bZ;=jR4-W1'4iL!R5EPQDsiNP-H[n8B5_o>9'nNIU805B
%2Ku,KWPmlAF6D;CMR'beE5ojm.X!`I\L=l?OGe-@(t`]J77gpo/94T'\L<A@PXR2sEWXDNbXJMeL0TsB.`9J'gI3a;bji0sRYt(U
%%Cmmd=P(bqr=.n`bX7V,*cl'o;:cM<H'<S8ho51bjkMG2@fFMLbg/ah3fBJt_6'_E=P,\c;h^^IJ(XWXO7MU;f(upoKs9&$B)b3:
%S/Z%@doDf=n?m!*R^(dd$beM(Hn>Mn0)4.PYO.l\HLPI=Y5PWli^,3+g.ZRqKsnGJC/])ZKsJ/FC3.2@(:r4OX/4fj@RTGH+3lj5
%8*6+H$3"gIH*.4!$Sn0BN6DGCV-&<Q)(ioXKJU3(do.O]0qaS+jmWRnDb:ZFk&AiFdqp-`S_n(hiJd$\DP7c&e8nibOi8.!Xa#bo
%PID5T-gU8?.0olh_0>\C(As9+72`SDZq*od?$@q?mEt[*L(`4OXtqK(.Sq:q]d_;TaaustQUK19"^h8N;nf`9i_.%E2.%\_ZDdOR
%B,+cc9f;b`9Z*@ABME\.pT1Fi\*NV(FIVi.:?.t-E6HItN?:^uo,836aj+Lh!Rs04DPn#Rcf&gWJ^6%q.!a1a0c*A4C1a%B35*>i
%WoX`=YdCt#"Y%*if:uT?+sbh)`pC&H0T=-X$GiC\$T"8&hOIHV]U:(4;/t_0WbJe6/nl0n[;pVIj?*VjVPLK98\`59^IA&ZZhX!+
%-u6ALs/&no>8@/a_Sc_a,&O/%dRDB(&bF6QZpi2_&bB;HI/ad<(:SZB@_Rbfmipo+M##>FW+YO.^*sD<onU3g:jc$d<dP<6^G0:B
%KdtHZ\/=qq;PstUUn%_S@W1$9FMHXDZh%rfLs<s$eGpMhf<DJm$4*C[g_>9dV/HAN^EjKhe/L/%nY"C:XgF$?e2jF2RPf)(X#spO
%95\&/>dqBMFQdU"g@`HsBBs3*drYh!4h&/UkrJ-nd=R)<CuIGP2sgJW6@.TT9*B+j5PkZhio69ZL&YuJ5F\C;98\h#gP!=>HI%8Q
%2oYs$'JMQICUAhK;0Q9"pp8TCL>=]J"rZe)-u!TV2l4aBW-p;hk7[1DgZgQrHf,[O<,RO;U>L*/@#OY44#o",1rUWAr7M5m09sF1
%rlU3$QpRs#Z^nrX)h2GXGe&+?$[8p2`s_XYOT/nNGZd"4(64`8j(71o=ZB_'NgGI[A`7k?aeDuNmTql7Z?7:\E._f+4\3'LM#"/'
%1GP/YA`5DU8^90M`?s$rH-JMh\@%#;d[W@jog0=+:B/XdTo%NI*Cd@i3-#o^rOhaca1i'P-IT^!?Rmldqg-FP5gD:,bdr>;%@*=/
%$^A2aNJe-;ZR$S-'q#!SC<r>bSV"QkeX%'%QYm.)$[ZM6=&-I#CN2qjJ#,\5MJ?+3Gq+;`S:1+%a`Ds%4iKjPohesAPXk9,c(S/V
%(fK.t8r[GP4D(2-3u8]]GC\2iF6b8Xf=]N/+i3q\ZiU0KmbU]K@+KKJ_aqiGCs'U]Rg0<qetf.a)#C:1:R1CegYJ+,PLVM*>e0+I
%T_sO'"jX]\VZ8*(/p2fH<&u/M.()"4dft8[7BttSL`aN:pbCpH_HHXgAl8Z<DLilS%1EV/`lqVto1&<Z5K:R$0l&kWn7+$I(j"]W
%5RVGeUrpqdfOq\05.g#=[=QeSeS1g>J&1!2\1iC+2cPCfAC)1C7QK0hQ7'+&D)>1VQ3an4.H"sM_/kd:$qu$#3X!\)R;-NU`](=^
%s)8V(bbE_eA=DXZe5JDPqJN_(rYW66=rKIZdXFsEriIY,[&CMkD`)a7I#;-@#+[TN7VBa:b=/V`8jbnom%tms_ZUc%O:jjknIeBN
%Z9b8D=d0B<b3:WTfq>Dd5GuEUq61/6CS%)KMs;Z7@(H*nS>e(,3H<SEGK=RY-r&a=\4m9:WIUD+KWd5Jb]p^#)A$LFfddW]B;5rr
%c]d+(&Pu$'8:sKKfclrj2ETlN'\PKfkD2V:]N&9SBkH/Q$X7LWbKZe6Q]<@CXLX$B\$5"hcn)9/Kf'[Sk#*TQ$Z#/g=EBDmYkbTf
%;H/WXfQ/ugc_]9iKfQUrk8*48_OQMtbJKcB@0,W%adc!-bhSS,lgcV]kgBJdq^1.2:8`QoF4(>MKfsW!m(!h1k?O<_89mOKeoCJn
%h<hJG.l!4lc>BM@fbo"\J"C>&;<W(5f[Z]]`_<_@M^GC'm$d@eo;5HuhTE)nSZYn,%"<,lEio!>^RJrMe@aU3iF9saaCh*XV1`@8
%aJauP2j[M9fBU:*S=KU;5^fYs=Scs@JVAt8"2&Kbn&n@dS'W8N/tAAW;KL9#!hna8Km>,i9CR:M9:[us;kD!BLq[k-d/COJFj@\B
%00ES`a%o)'UG(C:I-IgoSomeW95M;k)_s@/"fX-]9[!/sX]*B<=d'%ZMGcfZ'E1VgmM=O5e34O=]+nnMe.f4Bq-TmS9GOJu>McU\
%<,RdKh+niK?-@74`8^L$#[D%a1Si:OG(&P>BF.UC^-+]L640FM6!jAngM+:!N/@<[1TUq/PF]QmMSHGnMIoI0>3J?^SS5l.:,i^/
%[8OA&:nDgerA89,64$gT]<c]3c9<%`HB#a@b=tuaI]g1H$>oE]<#ZD^CiiT0UsKs^8(IA@_4]X)%(@h#ZIp'73K9/ub</t*C!^Zq
%N_]r*[+U0W%5Y_!(;fV!eA;t&EgA.decfS&+[>8o1;,qUaMuo/P$+-2BrL+--6)-qK=n^1E)r6qCj>aQlpmqZQqNB?eF8m0)EtY$
%G-p"H?i%\B2tNtT0'^[+3[\i+cs;O?#'7Vujda7R8`0FnPG+hVC&"@QE#uO/bd5)jGe60ej_h4gK$@'Z?lZ;n2Oh4Y76YUU%WT,,
%ONi35N:kq%,\&uk7Q9qX-*m+th$>uqs+(iZF'N88YADN)`"$]kMVT!CkKL78$md%9SRtpepf7MiDT5@EF34#YWmfF*h-:OhMUR^Z
%7R_C%:u=0crVj\$<?&UjoRG*=%M,*$1qPgchFT#[+pp[;^J4$C%(3fXDGhL`CWCM<7W&m&jis<[]Bs:?]0N]l7Pjl61UH)#-AR\>
%K1DM/HVV2&Ole!E)8u?McUTP!*j_tnc@m=aYjQ*\l%SFJBm1ueXjCl:/=aJ4YDX+<Cf2f?R_b5T+>"?%AEg2DY5=P/d5)dbS\=<q
%O.[;h`O!j^(Z!8(>Q!U.+0W8*q&Pt'<p0ufYZ,`e&ERK8o;bT8+grp<g7<C^2=Zk(="o&W90apj?,+VgZ)D*C*o,nb>e4qom2Tn>
%j_KIY3#fNT>4QGV"/g<*rG-+:.m!Vu/MpG1F7#!;8YJA;LHXL=/]&lC9fdo:\(9foh)bMW)Y0^:ZB=#D^@R,EHNE$<_m<]1=iqcG
%5(/Q6ofM['1&_IYX^hBe(cajhAYCb!CLD*LS(u#Gdi0RL<G]86qLl6n%g2J9#!kf_JhZkjMpX=&%n<PIXq)J(;':O!reF;Op\O?[
%*&K6j3mHINS%`,&l*_,g]F#'j*%^:s[*7:9@7sWrar@?kWj'3_`Ni4mL+e^,8W&70,h5rb-WO5a%JCsKj)8,h]n:r3JQm./\,7-"
%HH`r`0Yoi95Mb$)-c:E*DUM2?g%L#106m2BBE'2=qsWI]K%J9i9W<=)-[>'04o.TX[O7&8[i$l(-M%-5FSmg!NqebrCsu3Se-&HN
%@:)u,2g+n)Wj](*8g(13U>lniO[3u[0=kcYhA<%e"Ct:?T]:GD\B#Ke"%"[F-JK5):=C3l>R'!23C76@Os1Pn[UH0-78c[5YpJ)M
%pe7#=*Q.dQ6'(RQ^9#\m]`0(VBD@6DIiR"%eo(:('gLeEs1L:3#WG&*na;]9:LN/>T+CG;b9sS@nK3dK_4p^t:M4,'")K-^M6B$W
%neV`r0IH&)PM`M6:(t89J"i&CGrf[C53[*c2Jfqk6.m-k)D.LsGRk@bn^!<?AEaLnq:KhY6tC1`hn9l>odsZe/pLS5?68LGJB#=t
%ins%`*u\^TP@<]lXHR>^D#%MOJ+h@UosZ8oLnHL%0JVSHc__f`F7,A%[,&iQ1hbM-e?7Va`B.c\?IOB:EW8(MkD_CV7m$Md'=7q5
%3H5;-#auHXMTu/mV"jhF1=cuFFI$en)AlpW72]f_qSj+UHD[qB1HesX[^1PS#\S#,+*:[B_#?)XdETCXWZk&;TYpDhqJXa*alN*k
%IsXAgMj4)T^LdJ\kCAcjRuQ.h@H3ebHA_8aLjq;IPDaM2*-fYp@,)Y;>*C)@Emk`lVFc#,B*,O71r)gJ#=fI&4Y%YsdR8m<*`$>,
%cNlqEkKOqPcZs.'C'E=gLV:^hjPW'n-N;H;BFr*#=[#+`h5UDkQb4p$iJXJRDRIr/3KqWh60jFudiI1(N#6$qR32JYiTCc&"/gA-
%%R?:GG>E^lS-mL89=N#o0UZWs\q<JQn\:=6"/5B]i5G3b.fD"0rW=JXgi4,7LHuZEcNL>T1m%ig%%V!?OA8^ND.`o0Bd09pH_&?O
%g[@(MVK;cjg<U+b'/U?7(9Gja=dP.;Mp5l<_?mj,mMnnjL>`s2"A6.Gmah,)V5%?%`Fp_dA+.X#*]?m?pih-5@>R,\;rV8K!dc^\
%Z2V_GR@$Lf*B81S0WJ6n1m>3Ep13UCH)rY6>md^uOfiAT`TL(MZZAl[E8GS\oc.6dR8\,KFo9?VCu"V^.7;]eI<8CJG928gZ!3p(
%4L/7GgL5^8*mj.44Y0)/J2HQ%5%o:?^/rsNjd`e2\OO?_F9X@Vku'(Qj%`IcXSVcd^"^VTDAE-V-KNEA2*<nPFmAY`fIa"N*E@"S
%h9I.s%[7pK>?KP$'o%?9mb$b7gtkG\Y1oN$F_<[a-0PcLn[<VDlZCr(/5C!5%-eP&fYf64>Jqc>:bC49m)>tt:A^s<57,,f6f8r8
%qW%9u]"(c6cU"^3D[`0-L7n.cL9Qr_#ojE[>l`P^+p'9=m)&0#"UJ[&o[8<F^RFf;ntuT!hAE\S?bQfA7s"@@n%_,Bh-@@E6GEt&
%9L'#,65WMLr.TsA\F6dXLX)`c46gqdS^Y7iml!8j:@m-*%\*E)Ic8rY0fnI8i-tIadnVjmUVGeXm_YU)diL>dJ:il;KY$:>F6*&a
%mL;ing]\<PUCf#+%Kmh/\hSMG6>`'#.kg#''9(Os^$;iToN(*+oRLsrcqD.e8XM:VI'_4DF+$[QlR+rbe9V,922^H>)TmokI-qDN
%?Mg:^e&3j*;hJV/`bu<UmIp7rTsitLV\h_9TdRY-p#r+@e*V94/]<:h$j\T[7ZS+-r?n[2O<gKZ6e*X+N`'XN\j4.MqYClHr=[[K
%=A!KGjm3,;(+Z66WOia[Lm5kM!-e&m1Y$OCmSC;0+9&)4/m#ne:HQ)gk9>bm>9mQ_-ugQA@gRuFHqHBBo@&?jS>Y?,::a10OK6gp
%%Xsc"AhsI!i\0\Bp&UL772"7l\Zb3HA&d2;!C\(i>st/JLi,^YN=rokr[Vh@,gSQf`B*C;dnKcOOOp.&oA:BD.1_Hf":%Y1qf])%
%XQ*J-*VY1f7ZMFkIYTYAkFq+Vpan'.]1n[mJ.`Z(@^N\?Hfb0A"9qr7#:7#8-dW^W1jInBn=)dAF+uVpH`G]I7"?Yu-$]bB:%atA
%]f$mEk$NI0pQU3-hU3$NA^XdT6uegj(1;<Y;(0nQAVhngKON<&k6V=n7LqIfq8^8B=d$-(-oph:;0Xkd7J3ju3!*/N]bfNhCWaJX
%fER?UB@QoL=IT8U1W[7D2uZK_Ht'.#NHW#,CP4AR)]guHk]DNN)^/d:\Uhu6+4<7@"ldY7PMu=+Vca8p/Lm4JOl,feB^=_.EjhNc
%IrI52=Eh?kF%*!MNTN[A*ef.\RhJQT9pdJ7@=k>>PA"m.2P]ss\gm>M0LH?EOlM5W'82IoSFd_]_9O/h:\J-$(:;GL08FA2VQ%Z5
%jFIpe()fVlpY1P%_jElqr7UK0#,kd`X1KNemmgD8QJEXem![5/4WVcX2GJMNfA\[i+5fVjg[4)iB`u7!MXC7mB"m$%[m8,Q$D*7)
%I>V/DhDRkcXKrmbk]c%=/D2UgWEXCLdZR)?_21eU4TVRY.:>e4"lC`PbJs<P#9D\C[.V'eWj)iDV9+##)V$UMpaIQ:"Oers,t8iZ
%`U[,3ft@@nX.DEQSLaG"Bbikod5Qc][1kF#O+`S=Kn]IQj$JNfWh"fud<78.^3@k2bPI4AG*31Sl]<)`&ToJT*LUm04>UC3^sl8(
%X,h,]oZnJ/QI?j5a(@!^$LG4^D8?_"'URHJXj`$,*M=']*$!V\2dF\n9ZNO?]m:`9).7=q<uY=LJFRm7l2<8SQR"Ja=rdoePPDq[
%q5Z?3]VJe8)VL'A,5SuID"r&QV#=K+=o1@:Z`lp,G(2X",64qa9rBL.Rb6?pZk2+D3jH/6!-Bkuf6OibhN%H.Aps[rfI6*^Aq6V.
%`ZRuK`gK4-at%c^O29D_SC'>Bo$WY!Xn=a88<)>nU\eLuUFn7/7f/o9WEi:ZL?6#qKsPYgCJa=RRk>$3=5t`uJV7d[\^Tl*g\(V$
%@%Ith0WB1;b9feoj;+Ja3iQahoHqa;Cu02YfDWdt;m[%3SYGX"-/bL\aOcm_(J`Zoeu7?8kd8BN=)?J1T(g9?*W>n]"-k_"7SRdL
%'YJOE(t-a*H]W7]`j02ifQJp=6'/o:Z9+.cm0Sc@EfJ9eDt;#O'H6\K*&)6bEN=eqg]@76gAj[HA;U7RRK[+BZ/)&.I'4=q*10<\
%#[0\;Z207d04Q#_BZML(i5naJIV]:AE^C-dbfPQ&Iah-%2NCd'$Oe4U$m?l]P5FN?*3DCEUJF16rif$dq$W7UqLgmQGSB=OK"BF3
%p\H<a(cAoB[VOnWM`'L3G9=G[B1?a/G.TPJIqu1..NNXG<mplc]>`Q3V.@ZU@B:u)H'AGGJT`L-TLml<NK@L+g>c.HlA:3M3eJrl
%2]a<LBs%(*H7WlC-o,cs@2i(KAL_^5Kh[^a+k%Zi*!irJjNF7bLOBsIH]!$#/:Iq^!d(u)pL[0V),2m&7r.m+g_L<abK9GXl6p,b
%,^9AXUtM9bXFK'iJh>=jB+&+Z*lt-`haN'A':PYm'DQDkc-M#+H)Y.mcM'RIb9[DVls..9`8Yfs2MKD#6,5>$#NKL._VWpYEB$4A
%GlS\L/VL[7(sAZq.@aGu6+l5S&22W.O9\*J7YXW)bt\?i,DI5<%1AtM]OgWQ@PlpYC3pd,@\sI<=,p%Q==n>PBt7?<.G'J8T"JIi
%FsC%H2+kDi]Z96)M1b)E6h%&EVqX=SHP^RM[pn1rgO\1P;b%K_kHsP;&L,@-6R`f;XaL>OcspukB#aTc$U46_#@js6)/\YdMFl$4
%q9rZV3@#7Gp>hjOXDiJUjm#t`G5RnXrjLeb)CKX>k!;m8MS9+6%oD\=,^"D:'U!N`D@QedNn[OD^?9M9Flg&QIHIMQg,Xh4Kdd0F
%Fqj[2ViO%XlCDuu`cBU*1WkmdHpC'kfmBEQIs6XX0&UfRe'7u*j"E4uf'+Ir'Pb#.HT>NNf5`RLha&3ScODqf;9d?CLs7ukVSh9f
%NCcl?QUQEZH)Em.?/^J2g1><U"eDo\q09-r+D5bdMdSl2IW!fP`X4Ks&NbsdJ;Xh!f6WFZLk9-FUr7*r5iU;J?(@]GGZ-U?!*pkG
%98r4_J%Q<DCO=cNZp[;#d8j[m@0:n*Gf4DU=u`\:UmM,c7Z)a%@b_=f>VSZO[Km=>iL$iYVdmD%?IL.W0meK?B&&u_4>fe>C(GQp
%1ieVO%Nt:$f:G2@=,7$CWA*Te3F.pofC5V7U'WkLQ;FlplV6K6e*b_gHCYhMXM<KU]R5Z&O)hTrEUDTC=AX5KZ)3rQd%*_8YXVB@
%;30H[iJl4HN$!fk8c"uU)B:Ji"W&;O<\p=(K(XTGn3`4nDG5BF'X6sMPWq283th,FOrQt9]8O\3a$G@P"sj<qO2\bqiAjH6C8X3S
%`XPPJ!'!q=ph:s=\C'H/7NC?]"Zoqp;]uB+blZfQK>DSS2/JhmSVEbj2@5UGi.Mc0/^Y^63@.,)W^*d2NIH"rf7Gt!7gXi0-#sIf
%UXYq_]!"L3&Ss*hb7!L(T-<)ndX;(WbhOqB"MZbY5p4X5`07jnao8n_r/N;2P6l2%6KV6PEj#rSVfC,R/a2Fqj`lA=Hdk[$%\;'I
%PS!sG@Bj:oU88Jk,BbMi6nQo7STAGJn,.?UrP,^1J[-sNcj1/C6(2Cq@i@`B6KYC!_^@pq.<%"%`Ho*Q8u(/g0tAt^NUZsDGn;+c
%#,S0NO]mltM'I`qRsi&:>DA^ea"$lhVe=9j)kJK_3%=7^=aCt0ffIZq>gf2a55_e!rU.e&/a*)d$h`K;H?#jlgUc+OCu9Y<]t:`N
%W75eWr<L?3k8!%Vk0BIPV[(q^c2GtL%X*09RTZa@#M,'>C%ipQ?iFBG>a$5qCjjPmhUu6$p36?dPmnRBB5@NbcYN2_:qV2TH@KR3
%F&,Df-VnO>I/_N)ComU3#8kf==-khiO1U&8pFeu&j8)rQe_0C-p.bfnX&"`P_eN>$n?2Q"q</h-;ne?"S1"%(^pGc=\$&#E/tA6u
%Db#j<[bL_cZ[H-XZEr61[oU[f9>g&cDZ'WkU%PF7"%"MFI!K??RlemhRhs&E60ZPi.#1jagV\&+hZ'jerTqonee(Te?i#*E[0,;-
%r[@6cp[/gKXmZc--gUN]C_H3-q@JCd^FueA.Q.1tEp61XgY+82W=N'gYL^FimZ\d+WKu>uj/6g&gqVRCeXUFQel]%ZlsI#kASK%:
%H]89f2B-"1e;MSJB91VjX.P0$rKE"$&:g%:XVY%g$tF+erN]@8f,h>#T,_ZaR'"\1)Q('m^JG<Og7Gs']d`haf#fZBDdhbO8$;Y_
%Q0OiudY7jn/0?uW?=.c3:%P=&@/-t@Zr>]5^Ak@AB'WQ^[(Q.T\Gt&0FhY"r^TE"><6jr^TmiWBQN3hZ`oHs+/Y@uG`p5N8e^NON
%MQtG=oPK"`P/#d:-uV*"&$'nU5PB%5"+U)<]hf@Z7QS;nVpQTe:TN7Jg\/8%9@gha<r'a];a)UVJAL]NeYc1nCJ+EUjV-Lu]-l?;
%p$])udVen;LAh[@\i1&)._bDMn0OHR]_ph->IbY8e*e'qB=-H%/j.UAO2gotiO&N2[=#7LnjgZ=*^(nikAO[F5;/Wl/Y$.t#)/fW
%[=c>qU*9pYbV((+_b9Z`Q1s1-%K0:9a;`"IYLc'Y<\rW[mVU[5:ANnF;PtgpI[ubSVt[[WZ!G5<@@53*]_](8]mio8l1M49BU]7q
%T$]/nHD>,g%R+3'/U$KadFAYX/hXiH<,?W\.i;l6ouV0`>&MJOl%QhXs4W_VXJ;]5H"UdUFE"F&qI2.;Y@_<(Kr+Nes*a>g5!)3)
%p*8HC7$hY5CqJ6ZLY\6DQ#Z`,E\;2n0"\gRRcGMQg%&dm<lA@*rS>?D$^ksOHi7.`8bQ`0]_C6(3#>u7C7Y99]dt.P/KRka(G@=2
%IX,8'QKkR_`(:X9@COlGT"GFl2[9.T4r0c_hL?0+":PD(E"C.(f1R`Tom.RFN@J4M^?``#)f8Z/Dek!]m_*\r?JX%97Fl!bYMZl=
%2>Rc7=QfOY,A$!9hX^`M/U-ep$Y]B]"d/.ZouW,Q0>(.856F\[iRaq)a1Hu1HE2#Um6u;qnRT2Q3k0G,gaJ[6F=qdoT'eVhMY6g/
%%(!Vs<Bg:1d]KTn?7FE[`o_X#pn:um?2o05NBi0FF;UKrq!$0inB*,>$HLEZA$Oj*k;fc`8"+^Nof-<'q;J+Y_[%7<CN-_'C-Fa2
%mJf/26R(U]_t$7TdFXIN33H<.<pj9++M`N^/s)BJ*r4>R!Gl]qP!$VIO$Tl8Ft.:*[3r2?YMTA;^ONKaoSK9iYD&1JST_![G[3ht
%mUDC/o#mBGf;mX@I>*+rBJ(C9=o6[#SY]feKp9XVq@jL@Bg$5oeoooADjX&@&!#cCYAXd5_n-F/b0#@?-$cu,^OtF8!iF.:,kl]X
%RCot5HKIG=$H%O(@SQ))r`MW!=e[k>:ZGtmH&]R&U"B5T9),L/\ghO"=&"+VI&ridlrL@42KEJIO&*pt=@I'!.d2ZtK*-l*f^Ym>
%e:1tdRc&:JBMLAjKEaIeYfS#`$tc"F0$l%2gS3PV@Ao7N.cI1e7\r>_7Dg`R_@&shD;hZ$aKo83=_!sB>KHO"en]aI:2!5t@CAU<
%JfT5"G(3G/7V!lSR)imDQZ0Wic3Y%cWpkm.+h3+gW@NJ^h-^jL9R&ps-6_6uD./X*Da%EBeDO,_Bo2&9!]R@R^(4:q02]sTd#;55
%-Oa%M+E']?"AiUg_k_F7O=Uh#0B86%V#IZ9LAQ32Sk^_ZQ[XpQlKq;2J-+S\[e=Ec][Rc7UQ@_r>Q,=tHoAi<Ps\KH[A89#0"3Nk
%Yt.6_N[TEnl$*+`M&R(H5)i<mN3js[dC/ucBU6\n-*J<:2mrlRXJYMGIf\p6]?1;N?"b%70.pU`_YLJVOWT;+[kHLd*Eg+2@<Ru\
%cX9oJAOFgHL9HrPX(R(6a#dMRdG<?qg\9#Wfs^lFcnPYt+_jK'm1>u=DI?'G8EEjfG`utuBO2I68"^NuHl?^:R9Ld-Ws/1m_$dO]
%_B>tDq#J<7SJRGl=^SefatKCcd)9@MB5Z\<IIa7S1>$AB<qeP=_nS+148)S(ZT4%I!qVA1YkRDS8)^[O4<i%)CL+'hg45TKg0#7n
%5m&jNC2]+?k3!Q$jVPVNhi^#Kkg.$1'jeV$NB/nggRG&*h>X,&j#Z/5;$9bq3U`FQq=1?$Ge8Q,%aVMthG!Oc(\_M:icY93UN,o4
%<9hVe&lZeMjkcp*f$[)f$&0%oV#X@)3+du]0-"$9hqsui)W-O6Xc(cY-)eP=AQY7rhb<XOhSImI#AOq(E)2p0K!#ZYH#L18n1Yp\
%Ne=7kbOq-5CkUF*dr1np*BkrYXaV[81nHnajSKZuWfX3#%G7;V#1bR#1iXUtT$nIjW9Sg'1@-gPk;Xs8A<b@/n0pa!J.@U22pq+#
%b_*-:+AC>"G$gO8V#"j!gY#N;]_fOX!3<f-8BS)Y&FK5bh3H:u)hqj+`>eU,lgi#aeQq+eeZuJYY:rj"Eu%2rc'[/8m>';gkf^&V
%rUT`4[F-+F;jQd9je9K`g4PA\Q<Dsl;1*f!"42F/^#G'&iJ48HlW5HPX6#VXpHsK&SVNAR4Zkrlp0XD8"%t]?S5;CUj5-$'52Y1$
%ICacKk2FpY4D\O,Ab#V)'bp\CMh$%2d4=grGca*=)uSVU%&D-oX!s`9H%cY*1%:*o;4''65<Ui)TO*ICgs*T?IJ27fiJhekmVKT7
%E">XdX1R?9%gsbsp$]+D:O:1/S%CTG")Yo=je:ZXia'nAaO?_donTp'p1n'@0[*T'qDdkDcFWTBcISITH,6JWkfnHY(W3$:L!r!+
%#8gmU.9/V$W%ae*lTVM4\iS31euX$I7cB?n2a-iT=R7Uc)64o.jEO:_'Vk0%I'1"-'?O@D$'Og),'7thW4>n[lQ;DBV]WW8Nd$o.
%)^+db09C0ns6PW/'_gahnR>VG+4o+g2ICmIp1;gSENe(KEGm%oi-P,fVbu;q^U<)Rkp(E4b5M/GQaG(O[p+<ug$-*r3_FjtfK+D;
%@P+C9][D[m6hMZTpMmsRqUi:h6s+tfLeu*Dq`h0Qc$)Aj>8PW306]>3=2h<Zs(3UlI?&biPiCG5+,oC4\KK4D;e[,nq*>J`nDdR&
%m2k\ZNa^`#fC%ZTV>ToVi*J+Oq6mh`$Bjl2K?BV3r_gHi/Yds.ZIV#Q(A+07Vb6?T\J!;a\2X#"ko.(4IF%7u]R!dAh;:ME[+F?e
%hd51(XkUb1dIG5Cc,NiN!d=OuA)&"hlXBAKaTg\JraSc/5/4(gD-_!H7oc/[BYdGNhVJ"tXQB^Oi-l+Cep7!F00aru`h1(*URlZ*
%i5^.d\RVg2IZr+PpQV<]?f^4B?`b-6/a3=uk5(kCFS#">c;rP_j1t2.Zo?@]ZsIqtO).6Z2XC&-+7U["f?9?UnPQ^T)V9\lZ6L0T
%epU1hep]H!2@j.RC"#I^'>l,RDEOo3rrg8=4t%DCmehkcaSgRen`6@XZWURSN+^0-h9r@PgLn7SBR'*fghtV*Q1o%67n)g915P>s
%fDBbXQq4E]b:fISgWr)c#@'RW)jpqQHYI<0Hr.=$?f(gWR@E#[$'_7*j.Ip"%Us>mD?k1Me+Uq:V)(O1mE57Ea)5!2B61CS+$MZ`
%T&"m@!YDM`Y'g13W0,gi^8/Anb'EOI1(:L7Yc<.%S=VpW)a]s*H[`a,go884A"U#:n'B<)YiPWYC8p\+FN9q8oF=pFCT"c4An:M@
%Y7$WEJnZ<6g=j#F$c";c,Fb?2E6snS=`:L7qJ$u%Br>mA?12Som:)H]fPF1k'Dc[+f8g+hMV<i4Dk92hX?B/Z/(aef]e&>2dkKC#
%YJ<9"F@60eFuh#n?_E#c!7o]t?pT1IK0D2)lgCh=b(l`XiT1<T/r]Yfjf<^<hQka"&J(8`1,/[ElcXet1R?hlG,5Qllc21+qd"X#
%q-Le>?SoshNuLacrjUa-[EraI,9LY'Bb1G%+Lq6I[.1^)o&]QLe)?PC-gT<?I'Hr4/0*R=G4jZH#_LM7j%6ZJZtM"5p%"^'>`,e\
%k0XO;cBi$OXSMG1]mJu,MGVapg@4;nF[m@?_8`t1X*5Yha^F;G_3\sA-qO:@o_?WCqGeUjY:p(.4>jm"iNJfK8-k9[_cCo*Y>qg1
%5/4[9/KZ"'<0t07n<nLgjc3OBW!,T2[3PG^kZnl./=7gZ9*P+Rq9J\[IO07VD"V``S]m_"<CMl\g\pGi[Tn2Y=mho36(T8jf1YD4
%IABR;$=<`dHC0opU9\fZRb3DnkX?L$l^*=Ne_t#cZl2H?K`/V^30jPl^\oO;+Q.\tA`mUuoBt&p(CQ>eH71TklrUq%$LBktrIdM.
%UdH(_#NbmBe[C"@:Q;bWp$p1n!SW[E"I@&&P@Bh^Y$HCtj*8S%2^5>tYMtsJh-.E,f_KM\'1I2UISjC"\SI*b9doo8o6pP1=ZAG1
%?8."01%&<_>PG5fJc`@O]_fSocTp@60^mM.a4tuhGZ6X?^/<kk7dlW:>)b_eZ!n*<fJKVc%[QJ/>/B1[2EJEA#PJ&maa<G))OB44
%W)_,)cdsPO4+6nl9?$_8GH]Y&I430Q+4C@`jOpU.Yh]a3%j9;i5_(Rk;8?G,_+$V<qubI=]iVq0->*+fpZR%uiNVV`[:'Y@+Y^t@
%e")r7Q7ZLBq+A!grVOu;H*@3n:k#[^>fCsQ*fE,qRSJbtVTRiUhHb'`(DpIQctiB>PZt<Lp?pNEqpl+X+.n,.XL2T$3PQC@UqKR9
%gC^a\TE2HsG.RM7lhRd]mAnZ%9N1oBr'q?mT"%3T)Bd#*Pus3P5Con\^KeKtfY)23?4NQ+c^OZhn1]j*CR;7MrQ"'_f@:On.'5u5
%7U9`/THn2G6$r7&A'==IDA92.rW)O$5ge>-hXC)<hVTiuI.?;gg"lXR0A&*n&U`%mCgV:8PC24@2U;mUVL9KB[DD]crk*P8pp+5^
%H/tQO,C0RA$YMAhh/EMFH>!3!JcXJHG<]9/T.B*&Km2WOrF$qfaa>GtnLn6g1R?"hV*`pffaeqB/7!\Xr_Y6em;t8tqSQ(\RqNX'
%AG`lA.ll5Ca,Q(I\ZJofb/]FRMXSuh-7;(U-WQC2:;L,[ha=Th/o`SRBLa/hdr3PkWo[Z?_OI_p%=,<eY-n]C+Akp9MUu(elWe:`
%FEn2:mUUQG&!B3qBB5Vt^/rfcWgIEtWGe(U"kLd7SDNEZc'RlniOH5oc$9(pj]XLBELD`G[eD:f?]''d?)8:GFD8ER)LlY_U-8JF
%pdP#V]mC/up[n:LLU6D-@[K=sNECUYK=GRa$*a$ol@#H%qY;pDLn4XbIefa0F7NV:b3S-i@b%pWk,>up,l;2U\g/q]FoD/]Xo.2H
%Kd=ON)L#cQm>m/,8VlZ[^:>-Ggi&.=<djc5Z<b3.Hs%ac;ki<AF8hnf?KKYl@D;WHnFGUs'qbQ('KiDFLA/DcLX4LL>?uT\<BXQ5
%],?=Bn*%.,M2:_A8)Hq*=4KeX6aoCGp,hIV]7nOkrW]6Y*1">r526[&^&qE?q8.E(&1g,gfR=:@nNliqmS`_'bI<tVJpR/6?[f8+
%?PeK8%N\SakA,3496d?sj,[F=*ocU[Td$rdnr\DVGIG5g%h#9]o*d2!3Z-iqlV=-PE3$hA=>/r[@;BNAbF>6ZhE."G?S9)AkSH3m
%mVI-]!UD_F"!KS2!ToK0>,a^@h<tQI:AML4mC.i?U2an;Y(-5F<:6n*2m1kWkCJ'WXp:/=N[7&NEiF'Qdj(ZXe]5'>Aa.$WRmau>
%\+Ec,PG*+0N.EqN]BF-<P1BSZHH/5PWo3-fg`[^0l0$2gr&]9K0O!3(V!Zdh0hkk'Q5]$\83^Gk%TTdh4tLBq@I9fP7)^dA:HY4.
%5M^s#F3s,/h*U1-X#HO3S."u^W9L\LLCW_8@Ce(unkShSW;.1OEbr+dS,GXe-J\CSS[[Ej?g$qLA+?Mb<^O:4FkDg,OI,GLAXqm'
%i?Dl+j^jcobPWu1r3pD'AAu^=S^TS>TC/?/q.#gr@jTCu2Lu-lQujLsS%US-bZ^W)CBfE5#0l'#2::L',&D(K:arhm%Gs)?=CO0d
%]++do(N7b+j6qKRq-utqQZIk`GG0<=edYihkd#'I<:Pue`Ni2WYL]"U92[VE,,mJ+s/kRDXl7O_3rZ#H)phMjiJo8cf(!*!Ce3IW
%fu;nHlpq)6pD]JVDsmO3kE]1in'PH+'>$NbnJ^D2rl+=sBMEua&bP0O]@5')VT!k/P@FR;01Th!?XSA05GAt):Cf-mf$I:KgF>eM
%.bW/ogVEbA/J[_EQScT<9H5X&agOLiBGl],l0PEngL(i")eNF-!/9$)e&Y1dM)ZTpb0-Ymj$Pu5Bs='\]WL:(?VPcYA"NsPW9-fI
%<q2lRf46#@rM2XUm3:a[1)SlZ%0&KsWaPuJ)HL`]Q8Fu3TcsoF#sG5;Rda;$>InY//6(BF)q7iqo87#Cm%L"01rWiu/OcE@-Zkh,
%(^`r82LrBi2'=);d1H]hL6c\9(-$5JVM0(f<9QWQjkRGMk>ar0l(MSXrIKa4_Y,P;k?&;p&L`mVAlu9P<Z[PC3'rNt6UU:GDWY@c
%VX-TWBU4rg=4B>DS`W4H..!@=C91jFbA?nRkG?(6Y:Ed_a)M[m'oO2,Ap@drPuj(ZE,u$(q*Pg-WPg\Ggh!o*^_@2be\Q:8VHRlU
%)-%/6"a_AmVATG.#4>k9#"(aXf%Dj=dh8>t,8s]PL18'TVOU^6L9RrfCdQ`RH>(ti9h8;mQBh`Y>Hj'P8sG-2C$<((nB`ok0ZJA<
%@$Qk`!fKY]@@!d"HSj(<h9bbt"H;>KE-_YN[#dX0Ji=O_"+&'=^9$UF#.=k;Zu#_tW!fLJj\<_4QZX0p<f+*6GuIV'&`Q.k2@L\e
%"e=n_QG@2c?$HA96r>P>03-Kj2$J/WXT<O:,J&e=iT(]k5?Tl7R`*8dp-R.83BTG+=3&p$/N#tkeM<(GCp+HU(mY^k>P8o(WH'mm
%ZOJK0D2SjUY$4pJ)B.rc9FnQiZn8Z8Q3$HD5de$QZ\L53(cf7ZLcr+J\rkSZ[aQ?Q$l^N;@S\0])p&q,F>f;(%7=#[4=*`]R?B"^
%MJWsu_3u;YOX[G`"?k.K%9!p@+<=$CqokGV!!cJR8jb@,LIpJOaJ#`@F?VEVAm$fl6ri#ZR3>D>bA9*<\<(;Gb.qtRAe>0%`4@KS
%#Rk"I")_bKiHEU$ZeY^g=kiMh#^67S;Sp>(Cg%bE!,s=27>V=$-@;\AFq;5VUs*M5R>Y9BeN"S1%G;E(Q6E;;AHji@3"!r2YmoH_
%=j<1)%KPN_nNJ`Uj9R,KNT"EJWePZsa]QN%-h51bkH@E5OJ9g4m_II$7:ii@.#'pn$kKqm=Ruc(+fT9Q\nr=\phMW?(oAl5-Bi0o
%Os8jAaXSq!JKcYqZ995F,7"[Y(G>`LN=eSr^s_;"h10UA!Xf:g%>^mS>Nf=Q5QT'ue5Bj1X'm#c:Gr6FC7[%$qrk)\R\p.Q542N0
%QGM1C,EE#@L-7E)Zj"rX/X4GOSE+8#o%B@ETErT9-<<.b]4tK)IBm_QAVmC?\?2'J_A/]3*!AY;9g\JPA3DSKZL"Op.LLZOC7&6<
%"&US:$;*%g-%fo;TUf5OCpAa@VjV.kan.V&.]I4n6&,K99P4kFfJp#8fd[R.3`$KRO\A+e]VC7:2h.2C@YJ:..i)>Rd'Q%=_RE6$
%Y?QmfN[\YPC76V75b;X.?;DJWKjk(S_HnpXd2l.P?.%_(aT1]<(m`D=1YY1j`[8aV;#j^lLDoH"R__^19h5.U";hqP7]Qj6+eYaW
%eMCDuoh8UX[PQ"Y'cH5\oTV8$Vi&'m\21MP2C`BtKJ[+?Sq^i-W1eog*&5R$&N`6UX0Tu>1L[Sp)+Gm+Stmh\;/0@OK9g*_ap@c6
%88f?&Vt>"P#%6M%M-,hWA1/qVHW?-AK8*f;L)D-],#TThe9khs5;cjX2.G;bj_JN\1Y%hme$911flEJRM4^G)JuUK.FS6+i9/J9,
%'*IkJOuf94P&@k'`1jR!La_?3,kJD3('DaaCd#_4VrNr6/i2*-FW%GWJ,o=J=%t]LV&2I[Lp@'baHC,?EWla.I:g+s$BRE]cTlj,
%%&T.]U&LohEo\q<@*@<%DM1:\6jCA7H6Ot\W*#o8`cJFJAA\\r3&2oK^iEuX6OGTAF]cYWf[(r#%[/2Q':Qd,SBjN14_;g7G/ge;
%iTV8o:GRqb2rM\:l*:?u!?Oj",p_G7BTTPT`0Z!-6U/.0h`12E4B52@R@IC^X-ZN/n>)O$1aH@,4:]Nrc@gj[&m#A<`YC6+SnuoU
%))p\`!Dee/PBR0W\2QJ_)%Q4HPoK4K23Oh`Zh*O-R%2A<Z,0bG\4@7mc3UZAYG&du$TJZ@H\0boJNJ3oa<^k)N)%P=3$1D!8<sm3
%51"JZN?KpuofS<R]'1AhKhTcZ,N>'6s.ESfb`HqiF0V`CJ=VS"L0^l/1j%Qk=jI7;MM+[e*Om4gBLj2LRm$klLj]C.M4$@K$muM6
%%@N],VW"M2+WA[m.AGXk8QM3-_D8*dUkpea.S2',6b(<U9oPHDW&;RH6nCn4!P+;gTGg'<"AZq7V^X\5O:=c2'CNY$#lpbY`FM%q
%,eK\oK?5f)eml-da[QR^0pP0d%C5V.N'm<7K?j+*i"<D3qCY#S3<=h"QaMWo5`J(9m$N*qH/+t/KC+j2"T_#7JPo`c@2dMp!n,S$
%lm8G9_JE6CG9Z?/A7)o@7.;CA6UK-Wb;4`Lc$'`aMPc)1-;p";aM*b?r7D;t/YWmDL9>f2_XNO8SMYJ?\KcDnQ6_6F+@KF*f?C`/
%O-TpTJp^Y0:+VTF!Y,6MEllm,D?S't&HNCg'>5]d&Hj;qON90iX<<Ue\r":kR4\m[JVD3$&sn4$Ku#`,LaL4f]*o6@2n6UqB)[='
%'dTQVEYSTdT#;2-\$23F+;@fZ#_X.3r.,&&.4\_3j:">mOL`JcmO4WRRR1@<5?]&]nC7S*4BWnE:m`?@Cj>(\GKg4j!7?HO56)CZ
%>7[3=ck36L+]FO^`qIV6*^;n=Bul_]hA`o^L)i&%A6iYj7sMc\ND*Ms;+CU8WS;#Q8RUaROW2,G;^=UmRp6R-H4nrt\f"N_E&p$g
%@L2@`S4G@J1^1huQ=:\7KUR]haYFK'2WQ-BD?MF8ib((p-jqM&Mh^OG;EllNKmF;(2RKWs\hPo\4"AG^<(%4$b@2'Wr?Ml?/]3S%
%N@iIo1pr_,3!BtUg7h_rQI3RTbRb&ikq$TAQT]'A5-kD9VDYeEX\k+XNJ:#51LV(J,,CFOCm$9:XaAaLO]`"FJ..+n/ndXM@rIm>
%([Wt^#\)c1<\/W3qVaeA7qO>j!udKL=YVWZR2liP?BTU#Z'6"[b;=o/'O0_*3.5$mggRYX8ESYK\@f=ia>0RpQWJK=0@k'M'TIc\
%;6l4Dm=V^'*$c`;A.Cm_[F[UjD<<0N`:RnlVQZFrqT@m7$c/Orn9P4r7#O*1]8d1S&I_Wl<(jJ?oK(".UaA'g,5l+hh8N88>%:GR
%G\fc=-t-EkgIdT9OWfSAQ)>C!ON7g`@P/uLUZgJ3'IbcA*](6%%Es+eE`Z'XCb]MHYcS1cBOFH2C*^s!@;Z_^;ah4-6FW@uIM&]j
%2,:3;/]eF=JPcLb<t3!.W%DY_s$Zu=/MEb0@@td'\,G]]@.D:T1temZ>U#)&TS:AuWa`5;Z@5]jDBo*lX9QZaX0$B%<PqkFcuu'3
%aDtW8\neWP"YGqhdS!Br\tEVM&ahG\PTeUrf%OLWbH<]`b>'pC<uCZg.*UW3+>A^;0l\kaSWHs`SVG&'G`,!CFGicr>5J2snfksl
%Aus;[s0p&_7^3V\);)7?,N6is@X7qUM)[0[g$'P6Q&(h`?OJfsj1T'M@P+'s46-W%1loW0MIOWh`Z9X\O5+^Q>Gl%Fr["-Q'(7bh
%Xk[OQs1[g"`I(6>!C:[Q;2g3S.tromS1rhF+TiqFD<@S0-C""II9]\&B\%-0+%tCcL_BQG\0I:eF(+Q0Q`RD%1#?ceV?Q)ugO:c4
%b/6Y5)*07BChfj0Gm5SWhBXbZ(.=:PPFGgSgsI232fjPj'7N&^/f/cV!DZSR!HPQ:Cc"+>(H*-ub],-/YiFPOCa&liCUu"*Y?T4&
%bX20b\RA$1O#koj7\fr53lMcDbueoe&o2;!R!>\g2jC'+]EU8Qc(CIKUUsW.@'O9=E!(+<DQ!n5E#uS]kVcX4%rg/dcDi?0o?4Va
%n]uSniL++V69u_ZITX&<-bW16U/s4;]sXK^CUV@j/?4P][&Ri)W^(4*@T,%$2:ki#U%3=<6`/mIaB/m9[ijI1`\nmr4W4YW72f:N
%32V"#.$Vu73R'7tVkU(k`TXMFpb#6@QI-?o*_hReR4/C[`E/.f>;B',V?7X"Cb$LDe:>JoUP?W1BXd8k>Uq.AU>a7h,=.J#"YhF<
%/;>k+R$Arf,mpms1a=FL.7Q#=MU\'370jJ[D+O9++iCc@R/n+*3D<61i$$=Cb44*E\o-fIoMik':D?[iknXAhCd&QL$_hr@$qMhd
%!4#c[`bNsY@![X3djSEY-s.@"I=I<o:m<[<234OOMRA2<7V7)&J@)W(gaYi2-@9@!f"XH/4=>G'kYP%8N$pat6%l0U/GY*o&eep"
%@)me[^iX*0!a2EW4Tah`7Hpee>Z#qgRdEZ[an!o>A@<am:`8al<fKXLR3;qA>6P%bC6HDBi;p(m$8SGF8-;mlQnCrj&I!<H#P*Sa
%1+L.'/hJ8*&IeNp`(XPBUB-NgKF*A=dEqNI,)jO%c=6DI*>3edZCcSXn9e$U&^ZdKI1t?Xg(H`q(fStAP!aW72Egq4#VE*cjnTu$
%G!o#a=meU7Ybo3`.J6!bEl:$WP7g4*T\-I[?&3VY^5L4l0SB\$&SK;YdG;kF;dNG8`?8X(0YsS@:)Xsa>T-#Abuf(]k<[W],CKt7
%3&Ag>bRBWLZB2bQ6N058!1Fh_6UW0LQMeW,9WD$WZsifF#En$hXY"7%7&kf7i^r5Ub)q[%7;R?,gaVJc0\hj$BkA?SHC.#g=KBNM
%=DE7LGU#o!OI>:p(89EX7*R>>V9F`E`Cq5gB..)(Ol7<4&F>Yop-ZbHcrH.[-7J,8RQ%4_7RU-#WjbiZPLN,TX@=Q%Fc"fj9L3<s
%`)QOe!uVm"jq$^Lj$*:51ckUY$5;dQOR98k1iuhW&m@+^fuo5X%5)QN_onSp?X$']fKA:1(?,[a;G7OmARp]L0uK.^Hqi$P3MLl@
%V-p/-,ls3Y_R:7oNm9cn;M=b64VLd99\HdH5=$_X#cl(=?1/elTbDCB)AXN=WfB)n6k'S9>aeuf)J)!L]N8rEpRFqrV^K\-YdEn^
%&u$`\pPB--:eTls=&FhtS[($eU8A9R@So$5,Ce7iG2],Q+jHKO<%+U`es2Au0TW6,<Fa#Z9,hHt9%JE.V4!j/aX5ILP=%j^;'pMs
%T]=mD;Wd_;=DOe(S-=p$6-),*_lI)lZ4_/;-UU"*FlN@3$V*<bX>MV9N!Cd8abn0Wc>l]U6d%A@J]g;e5=V8E8tY_olSi$-JBO;m
%Xer<EaCS%61ErMT3lrZo*aciBaQWH=8ACS0O`4p+2=AZiMZjGq+Ch;;+Y](?6=cOP^sj8\S?DJ%"H?/XMW#e'c:6'T4(f5k1g:TR
%eZPRDIWFf_bE?[[,C'2?fWctBA5YRLlp+s44)iJ#Mn?8"Qk:VnbX,)T!0UG6,huJ@l98b\96BHh4/uiG3s7)b>fbmb%,DT2MQd'O
%&2FQ,VBhq$1s##r6='+U6e[K\r'q3\19-_ET_n#h.8+h0Lh0ufQ/Ng#eU:)Vb[R`YYd5#l";G;j9Xca)"50JkStXWLTS&VR_Bbp4
%@1''4.$:/-0P.HnX@U\?'?bLgQJ(W3*p:Wl`c8M3a-@l)&27=CBnE4S]VSG](K'uTIYnc)CRDCL[Ps$kQnlgj+&+jg69\2n>C!M7
%ngn.]ebp.aVM4PEeWUoAAXS9fEhuq5*AFLH?39[2WJ5n'O3ZN7YE#W-VoL,brmJH#GnuiTlbK+_OtCs.>YA)M1YQBrV+fh%$Hq^H
%[KfMPe0US4C$k,4;?Bp^W^c,Bi7kbCbl,JJ4'5+@,,o#?Bh]>]ZW=TeD=Ph8>#[:;*CBDBXWPNklPQS[<Y5ZUA-C#3YHags#enFn
%'L9ktAC(:OftJ29>%@_mW'qP=H2]0emC(YMmh!>K+_Ys5`P<*HQ>\RsCIX[&Lqltj/I)$MVfq[UgG"0jiNg<WMO3<3g8:jKOk;I0
%"%jD<ju%?$gDKfEeM')3kWfCc1HD*jX]oEC3($r*0e_Z"a4'5f=1_I.&r>>$0g<gJif$OkK`;,"ea^ifkIHGP/B*t!U=Y<0ear_"
%@Ap5C75T:/1sps))Wg?((W#U%R//!LdVH9fTRC4k=p,2JEh6AXg'>_8A"mr\ml"Ab4FZ"]jdihW&l.3&/3-T2"6:M!3#Cj4,Tbse
%2ObmgkCKO0,h71UUOD"1:HmJKY9/mD*Wf,f'&Xl=U08.YmW;H4,/%Rr7I7C*b<,+YUJu3dgQX9?(HR;3Bm0ar>[p%ocEGk4nk>88
%\1o"SJ1`ufOi&;<+T]IjDZ^^enCX%.80HVr[X/Rfp;^)!'!(sckF8s`.d#OkmW?E(0V\4BZOMNMbfK=k3\<"d@t`6V8kUDWCUR,m
%+qU&bn?M(D.hj'4c1Z5sdQ(7Gi$824$\s\7"'lE*#&8J^e3[8hJ`a(&4K6G/f6FdXM?u=uWeP_-oJ'=/*N0M[F^)L:8&FLkp#"I3
%@f4Gm+`%@`IhXT]i/DR=UZo%$ZfP$)qjHS@iu+`W2)BA8b^$/0Qu73ujb;Enb*_2/nU`6#O^9htJngsWH5NJJej(Cj-aX]N^h68>
%['E<&f5/PJ,=nVP$9Ng40#b%]4#+;`NZgn`44[u?&26V@M03qd2/o!m\I7k2,R16\WLG@FdXb*01@s@gkX!T:^TW.'JA^A#8@^=u
%`0=aYB!OEhc-Z>2$V:_4D]'L6YmcVXQ_@jb)&eg5Tu#9i<:7GEk!ujl*%M^?JqHr(oOs*^A[!Sn</GOuDDO63W/A:p"^5mm/++fP
%OW5*1N1e2&c.n27<0Z<A>]N7>KoU81$E8Oja&Ts4Pq')Iie1Ki$KFZ%C)Lb;0-R#1N0R3M-IQbnAt6_@B!<:ha!nS<;+S_BpGA+>
%XLMo=heZ#t=@':Ek^mEjYqH/eUJ"+6PcIJ/P*W()kG9`gE3,cHQub0NrtctbRNcj$)e+5-0Bs6:@19R8plNTA3C76ZXZ")JeZbed
%bs$h@R1L6%YsR,#UA#SfLT-]I(DmI]i\3s(P#n/8p*kPYQc!eTAFbUE3M_85Sc!fXfe133ONUQ0;94Si<fpf/iQ):m3on$k63G0"
%=_'mUN"FUk.Ha9Y31u\6Y_WC87\kPDZ9XLj.giRU8cVuF,j<Fta>$Co6O]!R*!D3PW7]_5VBC\$TkKgpKr[bD.QXJ>?sp(Y$4$u@
%je.VtNJ-ua<Nicac"=JgkrPkPZHo9jGdO$5)E\CpHDM:YfE2kYh.Q6i<nWl:jgi>e>K*(ubngsW<*?[i=bG>2=0X"Z&d!YXfoZ(^
%4CY:+@8)tAaHoqm,`@G6]E;2hbjoa?.uQJY/$!uo=nc'D`):,17Uu[Y@*t9=N6"(K#Leqh5=sNq-!5SR,"Fq\#dK7W_h?)MTrk"-
%?BBsNE2qm]L%Ah8TEZ0l'4OA.V4!VeM%L>ZZ/DB#GhOmPUAOcQ%-`Ri<P&'XdKI7b;rBus'KIebaWBRfl*Bf/nUZYL$,p*s&,Oke
%#anC)R>`$YLBMEr;Sn?\cu$ebIOlo")Aa+;=J@,'q+G&i<d"jA#`k.$NEL!bd5YfT>TD6/dO\DUiGFcI.T0#NGW"5#G*0RYCJ<Yf
%1FOQ7c:9:30V-KCKQoq+4?71k/7X&qpS>&dBA/&\bERBFV5qS"AsBni"]Ism5i-;@61)3*50M83;d+n:a6K&T7a,R9a_OP4(-^l<
%p(aD0ME/q;g_tIt7GWMEQ;IoB)Pj7aFY"&([68Sd:;MVY)DZMrd[rm0'pc]-CZ>gjNA?Hl\-S@68YB$TIhjJuT$#HY;\BC4X%nA+
%X;matK7OBD:!)Lk32F.S<9K8j)S2QpTi#j@-tP,sN4MGWnQ[TSqNqQ%cJ/Ghd&X.#AN/a[Y``L*Y;BHEq'Mt_@"<m#M[7QC=2?.>
%:_;L)Jlin,E></0ktIip]92@3[LuHsE$sm8SA9YOatRKr>DDph(0hF,W.*A'SW4<pKTM<2^_H?$W/)@/\q#`mj2BkEiJm[=bISLP
%SC%iC?,QjVRO,Ro5boDE8^fn5V##iu8@&fT,a(25.H*r%l5Fc4Kh1IH60P[FOPbWSLN`hd^crZ?1;]q::smW,UCc)kj(KnmTt)7R
%ES3+rG\0N_>\;(lN&I93P&7F\"Ud^P7\A%*,X2`FRZN7?kr)ao#u)U40nk6l4NaF\@2O-+`K([k3-l/)2flYc;N$h+IB;FTeAF`C
%ehA)D`(J=1iCL'?RVeQBEXN/6o-E2p190E?J"BL,"$Q1t75>>EnGG'C$BSsKRJQHsCUCI8f0jr0QGd:"!3e^adNnl#Pnt)-_9c=+
%n`5$#1(NqaQ4"^uCAACEaKjn&[GhuO,i,sAmOD^Mk/Z`;;/,MlUtFbMTGoo(9)/[p\qX!\Y'SJ-5Up!Z4=&](Uj@a@7F)@4/>Nqt
%U5-[Kq:W9>LBJ,=;N\,DLW$L3)[HKu&KQL7QAhJITdKs;HK7P%MOeF&/#f1PTmjh=m"lbrO=gD"Rpbo^.tam:Uh*]#^u>,JC0A1N
%.]O9jA4Xm1_95S9MM<^o1:Wc"(sFCgD:uD[9i&O^=rQX-6?#Ya0KQ>g_?6ka^eGs:M\LRp*t2MbPJ]*0)pON;35PD]8&4>qBZU"*
%TJMk)S<'!#$!WlCXAS/BVUA=2dJ7H`D'L:<TX7Lp(,cKGL9bCjXM*Q6@c.S/!@jZ$S;]JLCom1X\fNGU+-;G-h)%G)k'FE4qj''*
%T;X]pAeosUHDFKDACZ?(J4L'W!OeK.IC[kVk^k@JZt-rofQE2$jaNFjZdft^IVQ0YXHod9.V_?Z9NH`/>sNjFXu+p:[PEMVXu67+
%5:^"s3p1f-?U:LFCuL0d0502#`=%WXiW]7!8*hX\R;eB9?5+R;W$tB`o5A1";,^E&X^"PTjgX'&7r=HNji72B<_n\3;o#0*anHM=
%df`"B)"`6\Lsj6-&$h1`C*Wu$m20t3hK7@m7/G.B%ak?Zn7ELaUW_"j9QgAE\BA\I,'GgZm6g)P/3d3mKR10!OI8&@BDrqth6rTF
%-*-XdXe+*WGfPk:CZIuC:q^Aj!&;m@$cudr(X:GS=sKti18T)K+qs'"]:)gJ)H"1XlCeak7.s.XG[+tD6"a$9=:O5Ned/hm7JXf(
%,@4bGGGKo!7MNeRC_.Z$i[P/PYh?_=66m7f-\KRmLfu%gGEbWAkW!Z*L3`;[Bk/r9<""5FjD`=okr5!=,7,)lkeO[/W.&Ya^ebF@
%e+"?6\;,CJ6tJ\";%M..?/\sTZUH1joFs#;;#48p#Q\tSU?j.qTST:o`R=.pMUG76U)ldeai6GnW,ch',)[UP]#dg,79'Yn,U9%=
%=]c$Q:u\@.5p_gf&!M-C!Z;Dt6tF9D2[YgrH<:IGZdlsfhT48-D^>'f$&:oG_5F&8TegLV50dtMGG,[kX`5`N<'#aFO3"7+&XhiC
%]PMZ5FiqT;@%af([[$_oLNPttAo-Y*?@j%<@Vo9T'113)4D,C,ltD(e.]*iXa;+/$>JV2h>Dbp1=h1l;ElCccMa3rMNhtKd:aB@M
%Q)VMNI%t\>he6gRgh<5G5.#u)Ou%72nSF(jr[OMMeg&-FkuMR]kuMREI]IV$b=hqEmPP_]^Ws2&rW"pYmUr2<7tQGac",%iMI9Dn
%YCFA>a$P:h9BJaL:B@^SIn*X,-]u@=bj8m]cW/^d[YraAk&ra<UZ;U:=sF,g\n>FWTlq,Q&lmA<a7VdTAo<o)%Z5>64SbZF'Ia.S
%oB07gA7NSI9<>YUiqa=&<RH\^UC'UA#mDV!rFTr4F5ofA"0HU03u!rY$2)+ICPaA0S%2ZC\Qk8djiNi>Z;`fW@]\oj1W>oER9J]o
%ECOV#^ao^:<!dIIh;2kA]Y-,LB@_5df7lU2_'6coH,Zh^Me$7BC6Q.:Ys's%)0C=cX'#':/PsR;_L-!$R^8-<jrEVDF/pIIhU*7.
%hOtmc(5;qY"u>]qB8pG;3/D-:fSs(0bE-C2M2Pr*fg]jqH'>>ue;DcI<W.h-P3_p=;cY=%D<BCOQdf>E@W"@XQ5&:?M7"^pX&R)c
%c.72s?/"$OI;(A19YrJ3GZ`g#6SKcl"IuFl_/$Rg+J:6HU0o0Bi)Re&P]V>[&\Yn=f&seU6?ot4q^)H;8%!VW#[W:_6uYT?CMIBI
%_EDJ3q<@gM#,X5GXR7fs=O:EaNZKr]nLsd6"$F(DRSZ_D')BoWVQ^`5TQTjY!9j,V,l`rCeYP%_TEqg`<Nq?dF,u'sk\KT$^NTN3
%=/&H03FV3"WH]$;BMgr<?Bd+RC]uoS(b/`%5N7TVJQZ`ZE--u.qmCRdW.G6YL8dZbRA+1nQ5Mc='gM[k-`XSqM<]bo+J\4\`!\#S
%W6Qf:(Te%RH]>c6/:RC@]2V^d>U%@/nl<Ocq2W$+=J[O:9nfFpEoV]*a<G@3[\Lli>rV6iXe3gL;5m>'gQ@!l?a7taVYI']BQ6BR
%KU;Ze`4:Cg)4$oC(FI:S_22Ri2!C6L3(AoKN_)E*6SBtVIY7T4Dj`[!FH`67??S#H,3ZHMd>uqZ4?_Y&?DOB%6Dp6`&0`RK/MG('
%VQAdRm``9V!(#54dt-Hh(l=[0ft%a3Q2%io+h86C'SdZ;p&20ZKI,Jf_4e[A//1\$,o"/EP6t^?=tWhU1X^.&mK:o\f<KNO#Bq8W
%2O,?mX/`GIlcD$<j.0fL4Q*)iE6/uR+r61JCT<W.,!^\Q$T!E&\-!l1@Fh"PNG9/\pAe`dAVK9-f?MD'AsM:l*Y?F+]>6nJ`?<`C
%k)KO)EpTFIBT5)a3DDD?\D(iq/+H<N4"I?$3pJ%um3>%*FkQrNOa]*1*8$2d$JR<3fSj_DQSk31V'4>2iA=<.gW]U#Om9+)EKFG]
%<E!&;C\3FPWT6rVNQjA+W`+4qG^JDj>ET]CDG+(237;ZpXog;L"XmdH?oK$Erm+M^`VVd]mLMC"pIDmJN:fH[P>]7_i.YI*C;aW_
%W;ik&!t,XurPDOU=p-#*kJ,q;_!m[CSeSEr]V0AFN35#aHE3L)-[1RV::R?`F]XE4j'[iL7H\@r@'o-R&q[6H)=&hf9/NStP%@S#
%6af/s5G3R@+^6&].SA/!g%soqTEJ)/q0CRCTJ^V,gX3cS8<nFR7IaRQWNH>qi[0=UAO7VA2Hc;&`N'_4WQH-c^1-21U?@[fF&>PT
%*+hSk@3c_R65G<J_kMG%$>AIR629LYp/0tT:t6Z`]74`t;YXa$80sQ'0Ij,Rh3fC_3f_A_N#uIHGq^^Sph+\7Tm.Tm89M^&eSSI6
%guoblaZ"j2^2ZQ<;DdH(OhH[4@($IY7BB!g@V@:%;+Q40<#JIW-6c<_E5@N#<Z.0l'M+J0*m[64IM>Du,?bf&T#sN$0f@e&qJeV@
%.`tAhpNb\](%fbZ]Q5pG?!uMLR\UTUoVrZHi<f1B\]5pm,DCJ,P&$kP3jn#*2CtBPM:Z(Uf'1"',RqS`iPh?W7'iAgnkl4;baffD
%C?f4]7NHirZ`o`-JHKh#,&^DY1.o4:Ci._toq8tQ8b2PIe(i:^^NMG4T7KK;!>p(+#.mbXXJ*WeZ:hk$0&C6lD?GMsi$%LkBI(/,
%fa,5=a,\rQMmr^'Q4\iohIYheK?/nhf'!d,UU/IXKIlfk8]bch#J;m^=9!k6%MDE9fkbE.6][+SD6I%R/(AFUIKSE<\QRPp4>4P>
%)?(S?j!+G6mPqF.=UT-Q.n?<]PU#.B0#W&nGg?KB6&_-j$2'c>J^_$O,ilU26[?h*U!!bo2Q+=K.+2n^-9!Ukb8X4LDQ?i9a,KRb
%4*%`BiYA9Z*j[f8<P4G)4WQ-SJIK,j+$VX)b9YrT/RpJAoC,?Y/0)F*bk8`l_/c^Y,p"TZFf<@SCO_=(Y+E&lXeD<SAM#8OE_8M,
%71[0V;C,Ij^jF70D%.:FjBAT1km<%SH+>D.IRQ6N*[qkd<)#)OSX&bs6l8a32,kl"FH7.A[1\CMOsCPS#7^Er/J,0B<]j-t02NG[
%]7FT\LkgkQa7'iIVKbc_Ng41C:@VjK^DXW%$AZ`fV&82Rdp6>tmPSd.Pui,C@E;YF+D8C"d(QG!_I_5Rf2fr'bZJ-SUJiD`+P8A/
%Lb6VEq0>lcLPQ`K;jp(pS\cu`AlijSG9LI&5<EEp\o:dC:;<[<W-=+<XJf`4b54E#WC>,#l&8\Y;A1N;9l\=(e3PW7i?6\cl0Vg2
%b2hnY08LL'),'LeEVaoGC2;&S_E(L:8CrY/$r\ZuN51g4StR*PZ<.1!N$>sFC,JUdA):55<$VQLMAsq4&C8G5;*8i+A2Zb:EHZFb
%DZ!0446mKKD]NmGEV)iCGThpk"Y/M#el_H#,GB?dlun!.QQF'u)IiFWRIU04i]$@d^=Y)fJN:=Z>u%mHh-aJWE$qEPBJ>Gln3=K=
%_k`eh/8V0IgffcDe]b.<Yr\(XHIdC/FXD"h-(JE<X("_6TZ)V2bubfOl2l4`GYC??G`un;\#aO$KR?]uI&0&5[=N-7%Z7*>Q,L5N
%+h<d21j,?5rFW*?U>j7Q&tsP*eup29s#[(I,Mcr>L;^CH6G"tX2QX_O7hH*@O2TVn>XHD4legD(O>]f&@`'&f:K&s!g;/rUrD%?\
%F/7:/NCR3>r*"0!D`oH!RS.!L,M$eQ5)=0K'?Tn<_JGL`NDcf:5>k&Gj&6:<H45%-r=g\r_MI*0^b+O+gC^<].2Ta@+^7m40m=3:
%<TOubb$-kSbT=H_,M[.EAn8R.231!K<P(^T82Msc#-4aqQ"_RGdE^=?O5.n'NI"UT_RhP*FLdi:\ibGpHaY[l;F?Ykn>$tk;q15l
%(Zrq>-,ee;Z:LToYh\qi<KVP)D$kfW4bHPP7/,B=Pun_mNmN3_MFcgJ(TrQ>hY:On\jm-3)@6R!j4D@_WJ9UXG8Dq?CWOXfZqs!!
%&Vpe]Vmm<edVH;P*A?>H_4+:*r!cBL74?Mr2+[NVTh)m5+B*-78&PQR5ars?.H/DPfdC\-b(Rjl#4YGEQemjV^a-T`'Eh0<1G#NN
%E0a+)X;Ds:>J5rt<*$6J1Y)G^XpdJ'G=bi3<(65\eNtfif-8s82cs2h2cu'<V+YQ>r+<$,^R=C2/>^j'9s08Uo[ESXA4kj(A6-Qi
%A<D<sf0^akP&NQ0iDpSmQ:2\#idN"K@U`WqNo\AYZ5%eXs6s3Q>k5^/`[ZXG/-;28mE\J)p)!-T@r3]!SC.caOolJ47X#JlXuftZ
%P'E;=^U+[Y0=)DNWo@Hp[h0i<Za34r9NV3SghjK!JXF`m@K6R#@SA6Q/n0/'qZC?!B'UXO7CmaC>&2hYO!AFS.<\$0XgCMrkU_s_
%p09*'<Y@K_6ru,CSW(\?)*cS=KPBfd>[iTZf_]GrBhI3#3p&!":6D;b.Tb1T?q@S]GRDVg917L]PRnX:UIAWs+!7WHa#jd**>`^f
%kt"ll/.mH02ol<i%Ijk8d@#"Ebi7"VbOLdIUJDlL:RdD/_B,nj1pW3A;Sg-/idesDFEXs55K[Ci<uZ##[gMCaPM/"][ZJubHK4s9
%ClR*F,a1H&0BSsQpSN0ob9GZfYpb(-X=U;'aVD&ALr@D9rJfTNbLKs#e0K@TX_,c@Y-(=.2`JYQ!$Z"KNG*mCP&OPuo#3LhKn\3h
%S>V$db?3`2i#PN(Wi0FILos8;Rqf"IhSfBHlG*a;\kgAY91S>coYf_Adb.*`2^gV"K1;d+oR>s]nX5QpfP;"<bCr(rX3_nE$I+=S
%DmV/.gqd!g^62^<<a5>PlrJk%Jt;q5ArquSVglt*^41b7*oaqB]Is2M<YYQYj6H0[Qd.F\%!LVMX)BL>CI`c2_.^EM>K-LD/3tM5
%S<AG%ilr\nYe12uI+,mZ0L0d;6Tg,,p4P!h'Kks+Uc3qH)W28LrUW'Sf+f@cpBM-KdEDOUK'*.CIXc?Nl/gnb>8m2a?EnWWIa`0r
%/[q=`loF`n$i=S?n0\1-]m&4r@nEs.^Hhh'?Nd`^L2=V31f%,`?@&jQ5oLF[5S+hslt0&<A6'#5WY+C^a4<$;aGb'K*ZgJk1UeL"
%q\6T.iSj35Ao;3u(N6pas8D?"nf(Xj.o9+Ud"h",2W6c).AH(9gu?ZVcJSU:s3$JWa![/`pqPb%683ogM\1_kqRbYaktdYD^\Q\-
%rnB[9T9k''k9L!#J,Ffrjj/G0E'NiY5Q('ORF13@+9(SU'`oAN#MSPE#RWU*U\bmEV+QdJ]DUpnQG<Io-h!Z+iTWT,(\dRJs$m"X
%5;$XB5Fg0eJ,4qehuEZDT)S];hu)f4rueZ."MFV%q5rTP3GeTPSpl=lr29R41'3\WP+jngBLmq_.r+mt2<%KXLomqN$BaOLE#&48
%^m2ZE18]j@8;o]AHuYS%+c2IqR65:(/"oKj>>tj5N?cNI&d_CDS1kQCHT`&MQCC?gbHo9V%a?R[9E\cYVF^l$0U-2]Lt+oITfB<N
%#;o:Bj=:;OJ4*G,A?Ac5X7.^N"mVE.fX_f('!rs>h$I7qX.GD*mBdWDU/kZ,-o?B!qUHFel[X"B3u>q^]iT*3/0=qWY@%Mo5RD-F
%3gZoR9I:/qg6cBjZHfW6-D;Xk43=gJN+Ube:kGNm&eUn*NXR7:N<_2,-ts90f5WraqC=9O9Y^o[;%ZK]\UU?b&rG7J1cN9/b9qXU
%JCL7F]HH0s+m9m*"*)Q:(.?['U(7IH%Q8nbnRnV>`!sQ1"LWajauV6T"@'3SA:)hodEPC-_.H,)?'h*Uk`[uT.!g%t5XeH10d6^*
%R&sQb^*Y,^kjt]])^\Re6?:Z*=?\`]+do,k[7%3[%"<j:\t_LUZbh<)"!$7UC4=8a;1k@bkf/jpLs'\G_(\2.Jtc4hZOCsnX.nQ$
%`#pPM:pS67,s%VL"VUrJ$+XY(/&^CC2%VW:`j9d%H$4E%GR<DFW^8R0Eb!C_-.P,)%k*]DL3RnMs,+YB:+(PBb'#c>`)[0M+k7g%
%O>))rE:.MeYs%sm_1C#XA-Ol?%@00fiBdJkd"'OgPVA\Oj5>Hhnq@h$KDAA<m?<ANcR:f<.MaO'J*>$_@!pa`)#H_O#-q5gd37Hc
%r@;GYkZM2YfrOPk>=*HZOVcQApDD+Hd+1pQ%eXCBo]m$#oMZC"-Nqp2TdVGNX$Rh87XVSMY#H;)pqeF'b@&,93pN0R&^WJ+1"JT/
%`+)'%.OqrP&Br'nm[bG^\$7!J7h$FGAON1\M+(:8Sk:^fLJuRe.Nm-(Um,fi[surgG%`*fm7"=/1idf]7(<a"2-?UL\>k6S>T$+f
%htF1)&<<U'#75Pt+:[E8+3=-\69_^[+nE&")#g<Up(.t_QohD;U4]-jR4n^c+$J5..*&7s2O'XY$8SM#Hg?8aRS9YrLdqj>p11p)
%Aj)bT-4W7lTX'E!D>_I)fQaHp&lqkGh&F7UGh26/c5I.`\Xa25Q'4#g4)fCs[=TCPp_=eST9L>.QA(![;u)RXPH?<6;8s8G9,&/?
%4+aGn^qrV!=n0qFYdG>dn2b<c]GqO*^.6/a'C>'*RXn/f1E`6n[G7nfmkqS^@P8[E6%eF;hSSHaB)+8tTM]s&5P2An9rSd^XE:HE
%&meFtMrFhL+Am(j2$I7Oe#N\OFAW'*l"4W!=4J?\(k3VNs!%E5Yh\#[eJWRAoAE,$e$q#VNU>-QW8A_8Joi;80?k1AO2t842E?KX
%']?;<hgOu-r,\72lN>;O+IT/o$*M&+,ql7ZkF[4$HQa;3)s:Y;_Tf$4b-(t9fit-U'Jj;o(C?j>IFhAO@Dm1gj*OS^StZbu1dca_
%JLqQZT+7$rU#dss\>Uf*Y_U6QCV_/"&`2Rc>c>B11KgE?o'"VOAqcHM\jVepm)G]66E*lO%/om5;6_5^CM9TLHKpi5oiUj"@g$#_
%$EOFH(jO@f'tpmB!Ua7b7X#DLU`PHJY7O30k@BB2!C)YrWK'L!:1PRQ`W-)MW9QXH.tlSs\@2?n77+H)m.]W'-A`<<MNYpQ]M5=>
%Aqskl<hot2QZ,F*iM_iV%0s7mJr4dXc-&PH'o7=GdDK[2'nk\,agT:6jYWnu!c,f$E'kgA'_U456`3c77GauUoqH1eM/&^ibMb-&
%'S8&Y`^,)`U-Nj0ZAO\e]s8VG(SF;NA76/dG=7uMC-o#mW)2WE=QhQh8*(_<?>>-0e]`[IP7fqK'd?eg5Q$@a*Y^D1rST!f3oIAr
%p[%`4e<%k7<^SK(>Re5kNuBc^]&=$'^7#`q1ArI8f(*;oBGTUkaI^`C%6eb%`MC;3jVNMW/O<uG1WuOrDETZIjg%9k)eTQJWbBh^
%(dV:r80L`-+L,A*!c1/r5c6'oStPSZ'U,3"e-$uYCqW@(8$Ap!pY$-^RMS*W_$f\"/rHJr>IpMuAq*]HIjMP@)d(%F1HYD&SW*/.
%Y.B5FI-3@=QbM+FGn5*\c%R6(abtVkj-Q7Mm[=KKjK]o._nJ=<p1&/upH/Cs^[pOdofFh8:rS;nlD^J6WV/?L[t'l_=e6#]iYX9f
%Dqu5Q.'b^kn23-8U;Wa5'ms9n8ZB5b%M8X-hWh4hIU`u((8I:CE[/SV2nD8dp$Pr.Ge(E;SFQD%CF:2!l2dK8e&d$u-4@RK3c3uk
%9)O=F*[a(ISCu5ZU=GH>`:uXoSSaG^F0e$\bU0"11?_JVISE,/-3)s[Jt)hPi;m)N\@'UY:Tt0?hJ;Aahsq"XfU%nTedM!(#]GS]
%OKFD28,r4YW-h!+^'l^ZEG`tm[Tc@9DbR+Rm.`=/@C82S[,g]NEmo]FkDNhkcXLQ9)]DjA"=#a1bP=W?.[s5_\=QFJ_^s$l^8kJj
%`H!!61h/>k?uUY%DLWMnAWoMB(HuV\=H^sub#Sm0=mJ],^%0c8I"tWUo;G=LZnB$ZE-=>k^0dD9'B1[T@rc%:2#TdrZG:B*WiQG<
%aT$KWMLL`m9-J[H[hZNVji12WJ)dLVdgn`_cqpJMSn.X(HB8s=*$Oj)f]q1WNYeG+,]JLGERFHFcC,%.9&W,2ZJ:/WgTFs>KBqc<
%_#_c-7pXq'qUK/r(@-+VDHP%<M0"feSD'.:c\!D;4SS-&S;[IGJu3*A8ReQ;/nQ]E5/KGaNBG*O!Z&qfo)fS<\7tdNOKfn77@3qh
%_*17tT,IVCO#)(k>n*5gnkOi[5bD(k<>p2N'UDSgTl1e&6UoS\:u7XIqf9:t8L8VQlqWMuJu+.Ud7BX;@B:lol<$c3k!dg#@578e
%o;X@IfEFKp=RNFJ'FsegAK%NGkZCNV$_%E-0m4<@N<XPs6PQAg?@g6i0A-`d7c`lLn1`!Y`qDg8HWD9IVk<b`R-dBbrNbCc8(f?l
%Y/jd#6^Ea!H7c96jf(^q@4W..\`TfED@DJaTaRXtOEWI8j^UUt$9X"a1P8]''J:4@c4lS^-pl"_5;i'b@TFIPP8/M46huVB)#B*K
%M?-JIaE!IBC"gGe;hFr%iur`\2qd(k<Kr#AE'D4A)LX$RbHHF?IL'p]Hj?c*`n^CnT^^qdTiQd*9Q2r<1`HqVbTnhE^hRsA8jgZ8
%B11-&@0hQi#c*DA1UOc/l3tQ."lo*V%lJJK8;ec%QFlL5Ac:^YJ<g*'.bdc<\On8jW3RB^H6VW>#d;^_AO6pEMu]lDb<r3B!Gu9L
%G%tG^>h<G>6;Kr8!b>#&#*9-*NS)3;KskfOb=elPBE7]5.6`a#Abh'V%$P:j.k:9Am:N7)fo!Aqi+8^J1("[o%3o`8mdea<+;mVQ
%bmCC2K/adGJc\8>d7>gpU'S!%:M'5.+Wqu5Tk(f:Oi<kji;;21(is`-$DBr>E')(QFn!J80/Dk-673PJ%"MF"d:j26*D"Y%&8LIZ
%M:QX2)\ms<Bl'p%\,jk_4/0lSNs^,:Amh9jSf11E`1kJ,dBs3Q-JhkU6C/I]^]TDK[LD]=TD27U!s?jO@/!Y&)1QR-qfmKVAT'\`
%&e3(/%?O//GCf@:;<K-\7$[i"qJLl,gCm5j:]^dqQg/E&Og3M)+Pu`YXMV5M"_WbfkMDKejUgAR$fgn&(%?W+:^(-8P8l'W;%?^W
%TF6!E4p[m;IBWrfUB!\l):@$8NT;si^"X[D0^6:r-op3'a.hu-lGSgA6rArlQ4MsI.js,?(N!\pnW=9Oc(0_+O2<OOBM2^R*UI6f
%UQh`;OKc/ZOQRSiGC\Bi#/9oo9X`ss&3oFg5Yp\2BlGXj+t)lI`p*jBKnaG<4?TPY[aFUM(a:aY[QDr4OKT5jpZ1`1V)K@7'o(L1
%E6F;.^R?'78aZmq`eWQQ`qpH17P^]74s\_&d4`aX%"45>50/Y\/VK6_]!pW:-0[s@&<QH5WZCUp_M)JrRDuhhM-/0CO6O<e%h(QY
%>ekJ-J6kdaQ-i;%UBXHrJB/c5nq@?_YWnWAR6Z[tTBNN,qF";_(L8cFMdlAATRTIg+T*5\-6JU;d#sA5?Q*^Y>!H<SEa];:0HAaW
%hE2qp_LQW4K+gfb#_DMh;E2#tjCT*+jsi#F19p17&Fk@b(]\^]&9R/WoM@/@<3OpP6X(kl-F3soqq?sk"i0`!G.iA"`)EseSt'J`
%Tsa-(Q-ABPkW/ue"i,HoB^H(1_c%lI;iHmgAH_Dua//rQ/43@.d"ES-XP'$bOh;>.(7thQTL\o9hsW#>WT:"R(6"f&^b62YJ=qFe
%JCp#+;fYQ<JDPp'YNLUCE-K&RBiipd0t"&XDm#c$Z-2:as6EMFIeS7O3/iX0Uh3#$C?>8VV6DX%<d)M?gc^c>.Ig"_gJdHs@XGDP
%#lhsd8tLA^1>Y*ug;JqsNd^'epRJ@,Rb7W_*Ynh<+ClfRFHfdMq*CgU*'B%j8MD3^Vb,C/PVpj9Pf-'h]bBRP/DLV]eQD!e@=NC#
%cBlKnZp1>ZVjM50qpS<Jgr#76*Lb$4<Ro=l$#FA=rg98eo(?^He-ICd@BWb2f!<ml9`I+&.C0r!drfc.]hY@J9o@Dq>4)!dB.Bi(
%o@4J3k38CY\V7K$BnN&Q^g:I!5pi^SdQ@3GWG9.o-.Xp1US`B;L%jl<Y%t4ARkfHB]dN2pVnq\XG'^ktk\(;s[_g1[R&l=C=gBtl
%Sk3O@'1]IZK,o%jP`EbJ)-Atqlc"gcK4T3_h=g!%SsF^ZE%p=g<h-;6Kul@.V3C#P2fD^@h-%Q@M"[/*A4n!RmUt'#GD<ZNfZAH3
%m/)JI@.Ft)SqOeh5ukOf=2J2[8'f0@gXnMOoVgD(8m[;o]I??pbL%W27qZ8*<k*&DG'$LYS]Lu@f*>:VhWp.<Br,)&[*PLRn7f#4
%Rca5=3EbIeY1HBB1A>d#n.PC<"KKrHl4KJ;Rns65j52t`VC/7CN!M:/.9RL>YVpW/hrG2TYc#BEB4FJjJ=5[0Jj*sHB0?APcFUkP
%d;7Ha^oqd-J,AU,'=b1mMN]qB5oCtU4+6k'#!m*^-reW\lhRR(Tl5piT4W$g<`j%6jiqePg<nGEVt%M#k4.RjA`4*%XU&M<H$9]1
%BCiHee:*f"lfTMsKT,4,BO*uPL_Y(qle*a/%S3CF_*cN><Dg\j/;EW%J'UE5]hlHUa5%!!Q.]ASEg%`(R*MG*+of2AnlM,ALj&j;
%Wc'dnY&(D"'3&lRm]d1iJAm)Op:HA^JGB,<NS?d!<I3AoDqX?1BP1QuiFX:7E=).>6\cL&L8^_TV<*::>Z@bYG/GD8VBZL="ptE!
%=*.P\-nYMRE:S`SP?%W(S,*jEZUA=-#TgBoo*&]u"0m`*A,t>iY%YuH4jY@%5Nu+(Yo\Eh3Fc>3)KdTn@Z#\Pr^%INhVFSN!<$c!
%EKO=5BOkdq)6MNk_AT[g?G-LtQmrIL5IGeJ-nM!s@Pp1sr.OCg6EGNr,8&$$qO<4-2B6$!jgf0&2,n"8H2.Jt&:N%oOAc:oK#=&g
%HB\Wc*sFK9+TU1n&LO[>mIs^LQ3E%pV2>!j.>R@aj8F:5@8?T8BPc-fk<G2tcjqGb5et#o6K8+-VY_sfKmkr-Z[%46Q[":CUH@e&
%&oYO0Q3[D[Xo%U3VkMI(OL-=\4>,o=)6q<?-j^f#A1219Xbl22SgGpN^Ss5+Ki"&E5;WS@l)d-9d3-XOl<&k)&]=Z]T5"3O+OK`j
%8C>;bJ`5[A0%c[oqS-I8HfS"NC_a!Ko8/"k@AKk:F<hR0LQ#pq$Sdf):t[*,e$K506=#(o$ekKm7n_22PkAV867hOIO(`QmX7&PO
%E0'3ne6?_lQtuQ2fVEEu3`+P([@ii!76\#_3FW';"!4:6_8-^uC1/Ik"1nK+ULs*RT;$B7+5U-d>@Pt7$NcS6ac7OQ!"t;B]UpWh
%!p&LM;17]%c-gNHT&<9*8rR(u8>r-!IY1j7r`o\=7mU<!-SdXp8`Re.$F$NIfH9/=qN5_/<%KkNYg<s3%^'N0^:;Y]=8A=0p'\?k
%OhMkBCWo0[o+Bm)lC(OOcjM4o>p)7Q8=*ce;cGX@K9jQeF@Tjf1o:\;M+N/(-0gN?.2a#,C2ck@i!qjNndm;11]A%^8mr8VR\_L(
%`EZFDFGdEL(%lPHK>4BR1jmA?<1\@b3EYGBBj-co!U?SQ#+Pgtekn:cJK@A.T`3"8;>r!57u_5].#j1"#U^oX],57?ecD>r,';h:
%0FW$/R3n`(ON)HP[("=$JSI;%,PL[7c8PN<$ES2l!s!(@d-+p)i?=d@glrrTl;M`SQ3(5m:U[b,Mu'e_kiGkopKqOc!`@cMb,-Fo
%fu>j[bQmt5i&kV+i(#*\!I?Y`AXPgh7n$7tl5n,.L,a9RTH_=-mk79g#]!=5;u/m8cT'4LXM8LhSa^msYQs\3,k]sq+_o.>Z(URV
%9nU)s=FiQ:P%?qH!%N(4^)c?U/*bK0?>S%k8$G\W"(soE0dj=9`YjXr&SpQh6F!Ol(eD=D&NBXuPlHR%`I9c<Yj;oUA`;^J0"$6]
%[tXAmaKVaf7QVkBhHi1':\Rd,i6,lLQ^cGB_cWBIr1ba6"[24[?abQ\(s3=Eqa-)>%cKJP(:[+cK90Fmeh%(U'KcZ9n+g[EgAj3G
%k`AKG2t5oM*)h)bbk8tWgKai[9%?6aiU5aA=0;29h8b*+8/KeS?<(%LcNb"-n<rR$U<%3;'8"l;",IRTLER%He.:GIRcaQ-_/shi
%"`:QQrWMSLbWGp57+t*ZoZrL=^9!o4DA.>Y6^6JHPAk'.&*SJ32UK'qUEY^?p?Z%9pBthSL/Um`qo?/p/]%BLNQ#R2AfT4mlfdi(
%VShTb*C4b%DhHoA^)fHs$?"5.IK*kUY!9P9kEZ48<ASf6_o5#)m(tU(qp169Tbn<4]2OjIIr=<MQK./"SmHj5ghqSaJDbQ[o1HPI
%5Z2A`lb0C/$cDn"Q9]eX"\i]^UHWJ%UjQ#Z_e"lpQh5Fp/4,D%ha>EjmUVPphBe_=Y1,?4Y3`)J,=QCMA!dt;r3cOpAbGh5LKIr_
%mPh)MK3-lI&?IBf3#oq=pML(W^P'b0*MF8,h;W??hI-mq.XF%8Ram;N_#"XN'44$%^"di:%f:W!L=Ycts'r?Jp"XhpHQ*r+T\1qF
%#:>='eiJ`DGK1^5)O^"IW3a5*+*FF]hIFS4h@fuP:U'&u4Y]3[:&In5`1XRg#@a&A?P*C_F&quH]\=UZ^1Up*DMJF`:fVPCL"\eH
%%Du>t=>G[4bW,;?Xh5&uKGnTYiYcXlb7;2^#,6\A_a\f'DRt7sgEP;B1Y`(OAMs-;9M=417q-@%9=q;s%QUAuctL!U9GCK+;D#NZ
%8aMESiW4-[kBjF2Rs3f!-Ig8@ER,JGf\OFTBt_/S\pM[You#3[eO\HEMVXQ)3U[E1phiB6*(Vs!XJ$S9<$Sn\Pd/2F=%a^p*h_7^
%:sX(t,#$msI3M!=fPK-&W?HT<R(3;DHN.m=_W9&q"KUb=:Df^*q^DE"i/ND9:<eJ36F3haW+Lb1!##ercq+I/Vm.1k]!4OMmg^:l
%gC6Na1M2.YO'YJAim+]H$;k$>(rGr"\$t2/([F\bfnF?k(.GL.hSl?g_]=nZ".*l340Wq<Fm:_YaK%dH7_E_/K8@H&>YOgFf_2Q+
%kOpDAVl7U,;<1\c'ah')$0Re,UDo#h5H9b'foX&kRq)5V[<aViR3[6h`.FoiYoS^DhVN\s5AC?qN$M<m"sD9j7X])\\7`39`</H'
%maCm#A&G=,Ej[rZ?5V@)Li%bOiW6dW)FLsK,CT:*$Rg$cb28;tq[5I$-U'T\);K&aKtRc.Fffic]&VEP]]8bRknSBYfb%kW[ZnOH
%p'i"3NN5f#keYq3D!>ZJkA9o\Fa\nK'5GD:?*SE.^6A#7ce18HNjI\2a=5qbG(`"Qj^GAOQisnl44].?Y#UnqCW"Or9dV9,hiKq^
%^'?Ub^4CpM@ijpn?r?^Y<Iir22f9i3')7L#'-660U&i;`)I[GmmgZg?msB"`mi+7=)tZ9-&S53p'OJ*&ZT"Z<G#A<HKKN!uni("_
%37WBT^4CM+c!>2JNk[mQXC/@h0"tUEA^B7QNe^s/Ig/,=l$!Pb6gcr3#2WJ[L(,3E[>n;B*fPs\_(,-HQlHntHA('.\T[1qpWm_n
%0pqlngbJWC;?s,Nm)HW[$>LRcYi?I,AaW?Th>sUMXE>X,\"_+$)Hh/Gj%i]8(e(YL[5LLa=;qoYln_HGATMguGkj:%VTP@40`(0k
%C6s%<k=7DG(?9jt1L5V\+f["#4mFVQX%AC'\E")i$]^0EeE"SnkfKPfZ9''EBj8e<Q,U+;Q6Ue%[(lEcR^Fmj4&,9o<IKq,53U_!
%`83*=&61qW_pb:+"[gnBS&a@9YtH]:F[k,,0lDAddL]4crIj<(B;T%CX?N3I4HWL=KYficJa'Dd_+[GlUb??gHtAb'+Q_%Q\pPoG
%>7@RQb>^Uuj89:d^XclLY?;9#Ql1W/V_G9$OS6tX@2.U6J[rE.@0t.$O$,2A2om-Y1`\KK6n,1>YnsGulQW>@M@l2VWK%T@^$?QP
%cAcC_L;V^ubAk:S1P3rE+iGCLSK4o[S(8:YYL?"q@N<l5OFrr[>!#F?HFCA_QS3/FCKWhmYWMU@`7H)U`?=&0?3)4]4N9_7(e/t7
%J5Ysf64k5G-82)ifO5Y4fZ6>Yl5IjkUE;a9gT%WR.9/:1HA(h,/mo#4:FIrLMN;M&@&.D;m9If";iZ#<RC2]Ad:=9sjJ[`ea0r>k
%]7^=0gF8ka#,.\1UX2+>pPB@`m8VVJa@aknS*9Q:QPVguJk`"U<Wr\(7\20(&ZlD$AgmLl75Ju]@;:0*jUO3T3O1'X<Lk;,BV#sS
%N*9@P4`:)rV,RnEE,lN\l<@[DE87IFEYl!u.!j#RZY;9>PR5A'YsK8!P[hL<'KgtYZD*&,7o;c2VEQ>)\jEgXN'5%oq3g0,[[g33
%[,sh/;B*QE#:YTPc.^A6PjH^uA0THChB#Qrj;_hRC#!7Q/.*sra(0WjoaN'6MQf1]@nRnG&Gu,n`858gZp;Cbnr/3?mgRN<E#-Ya
%W+fW_)5W%<,)gKe4&"30PZ8>/\ilPIVBd)P*JkN&M;\72P5e;[;MA%6b'4OR5=BnQIM_ZSV/_Hs[>odJWk?;5&`mef;[7p?3'rSi
%g/d]7M501D/JZmFJ6]L+YWt+>WY+XR\NV&Lqg*dK.0_&4MS0djo,^l"'^_%d'Lk!RbWlA!\/PF4N*,#C:3A[gia=i]cU:_a+]9%`
%>q&5?9npV1SLUXP!cg6>.OHG5Sp03P4tES<W>(S2##a"?)]/mXLl5ge0odXCJ?eY*3u@lM\o*R@/PLC93SC5p;4-Kr[#D,u;PHL'
%g\*IW(_ensF=PEM%m[C::`pDJQjFF8m*T5-i^!eF%[ZOa&WtWUYMBY=*Ne0Jck^K2LbaRHlQmD_^_*aolB;QuTVL5IP)]VpmJ^F]
%h:BIeg62it>Vo7LJ>+9L6FuECb%#gs5(<.>$#,lb3b&8LOkG\7X9S?.lRH3/Kg_P)[gf8eF\!4O@t[OY(:B$BKC)1ceSY90RNNB!
%fR*R&*P.+U@2E2/fjLc71qpAUBae,>ALeJKW_`]#7;^Ud#hX5q=AY2%VDZ+>q^/cQOV]Mt_[\*PW)IUp!*0A9ecsF[G<IC5M2GiY
%MLI5_\0opf=hmm[XP->l.\S@K<h",GeW4A-(fI_>mm+"H=pEK@5?fNoPr)qV+=f9uBgf:)U1cSjYTCi8@LkB[SE'<ZC>GK+Xdd+A
%F\#oQNae-EQ\9+qj4UGe$ICs>D=Y,ol3C8n@Q@k]k:PA4(7`KfaF;thMhV$_R1dbS,*B3n&edmm:o<:bc$Gmj`kW6rkUhf<mF&nJ
%JU0;FJ0J\&:(8CHFgT;L.RJ,:euGSY!2Pq=]*7m>6Mrp=:828scg<RVbQK5Li^>nuGr&'j%6TP2_Gf-\^*sQ.NJ1nR*YQVEr".7d
%e/V^4aA$YFX=C!DBc*h/q$D86^7q$;RYTBN>pi$i[h(m&Dp*!p-Z,>XDND6<m5'0jQXZ$(^nc9Wh124k56tWQZN(GK.$[UTao!7k
%5AZjn[sUZ9R#&''OVN-[U*s.i=K$l*%&8QB2_.dk96_Hb0+^r!1n)qu1b%m8KM(cl&npdI0FT'5NIE#hZ3b8InqJ4*r>HpU)\s!B
%Ao,VJE"Q20quUPf[f%5'E#1rKdft.2=[6soQ/;Yc#j2X[N;H(NM.nm"o9iC-F'0.$HBiF-PrQ&6Qdi:5UmJCuZ!P]nchn-FmESqe
%I:@CB0p%K/#e>u:&t#T='s/3`?db!=?D9hr?-6=_7B(,a%0ju*:j)@ul]T;le)2nFqL'k,'F,P/0q<<>cJsB0E^D->MOIV6X.C8*
%0fAeO)/J:iq2rtj$g#*Oa_<N^o80*Ehr.52(\n9Lbk8GJ:?@-/f>RN$^<J-_cDn'*:FE]O+>AV>A1!1cQ!^l?mVNZ$P7nf=X>VM?
%j;69?d?Z5]oY@Rh9eMR3o(1h8`Jl)U)96Z&Q6Z=%LVntn9?)1M;6hsj_l_Lg88,u'#>Okq7J]A2]"Yb'qrEB"N&7+$.DpDaqQ;3j
%ECZq6T`&sFE[)7$Team8I(0#//cQcjqX#N0D'n4Z-J,S,'=E5@#.)WoCY;BhGuNAH_F,@J^fmbpfa=W;C`7tMHkH1oq]7.\k]s./
%1JTARNJ6BYb116/-_*c@4[s=L\t2dL?F4-Vl"_m[gh0GK8)tWnX52I"RUh#E@]6a=Q`d<-+7N.g\Bo(YOq?qHa%R#_G2lM7'uU6!
%Rat>&T7Q,qbH_l-)ChE+JEGN.0JJQjf,uL8ia>`,:?G";W5)a4,Et7C*@%,IE?iPB%&jaod$)Aol"CN8>srqQ'AF-UdsbPIY^/C#
%'r-2865lDHBM(U9Pe#De6Um7D)AiqK0eQWK;mO<.-l]:;5TEr\(:oB[7P-kj`De4B.r$"H+Q(@;<5d*=nK7!3IN(ON1(ZD]K;G9H
%)(/&maMaVA3i0:/;O%OG%*lMdB_!,[\cgNP9P*O&?Ikl:\SZ+oP-rofQ(:X#<UX$V-3lNLoOS2r_L4iVQ"m00IS7A+@G`\>]H,hB
%?%3g+/HQBA*I"tH(=WDAUQ>n*q:X20FSUW:`CL.ZD+>!%@]-Z5>h=j%%QGFtag`s_:;\+BDH`\6)e'!o;Q>VW%?[u_-e(CfgkSSd
%?eBhNgcDZ,NljDU+3+6CDhBA$AYa(HN'Tdaa]i:j%?.JaCu^;pN+PYQG7_W^)%&-jATe3"Mbtp:=Bs<eNO[WXL)MY<3sMmC;,5*"
%'Lo21PnELW(b*nT5VQlf!qQU"]in1^5D'B%cHe$`&U>Q;dl!@P@?h/]Um8b*R0ejnRcDSU_;\Th&LiJYDW8HcC*Lb7N?j2@E*8rT
%\s=!b1#lCP#//9n=.-]4J+F-&rL^31l<8!2^(Qq;Y=,;(9At_)<oOce6rsF(j/bZ4^\u3\&B/`l@MIk("K@?d'W&TH_Gp&.S74Yi
%JI;2,74MWP&un"W=fg>Q-c%;-;R?eF'!=:>/7,TKQ%6h-.hO<,;TKc*'XIio"g-]U;2``/.q*5.T>[ki97\Vg;WQj3/"panT>^04
%rPu>("hkV_(hY.Bn_TQ+"hkVbpA7Da@in`<)#LrY_n,m*.Z!Ul=/$PMYnG&!ZB[BRXY'`3L09=COQ9"^KABU<=ZL44bfWehBNDAm
%$YL21ZZoNU1^dt3A$^tt$JUoL8+Q*\f`*nFq;\+Hpa!LqAt>?5/FP(=,+"D*8eiG^!EG6[SX%m_kX=&Sb`b?jW0G6/RuL)jT=Ue3
%/UWEsnNPJIjZV?gGbM^/Rl-L5LjIZG1acQ&Fk!U&UVpcm5p<,nTtHuK'>25g.9YQe_U*,GI8sVf1&!%<RCBOg)A8>PlhIL(qHpX1
%e*JUfBtoafJOgUVi0f[DS]<Da^TU.9&>A7rSJM/kB?n#gb]Z^kC**1N5<WrS"[rEj:(gjLRq!O.&If=dR28S/i&u[I'TJQ_],:7^
%cePeB(Z/':^tP`n'^"+\&>dNMlsjR44A^g%E$Pc3`$4)9^TK[N(B&Wh&thu]<8rj%G^)Qa#KA4oMC=WG:[ppg*o<!IY"YW9:.<ok
%m+FBr<jJ^:5ab/4PT_m5Rb7*>&Bs7T%R.'SHe8\-g56idj9W"5"!PbQ`>!eaq]W<S-^&+&'ohTj8eY[R"\fP$lJ-0R'UK8O]_Nkl
%]LaBOUWs2fXkX&$_[P*PYd=*A5[926$BGTb[ZA4KBF^[@]7*+M9aC`e-ho0<YaaG#K)I_Y<YC;L(&OH-)[b,Um8XOAGG79,:=f=X
%IeS@['cFRhERr%f::K04j<Ii@Z#b(po$i9_-5M#9ae]fuO_UsSkg?dL<Cm15a-NO?8mLj_?G:_6Us5n]+;dLr=5fE5/HacPZWCs/
%4>CRjiL65.,s2NWG`-4tSN-j6ns`JeOh"IeB@;n.SY%$3CWc?$d6NVm,BD!"-*1&:@VFnLJR3%o%>CHujD,[ibIpJ]SBVMPg>pZ*
%`f^db<4+J9V-g&aCg#KulfjkN*h9qTBR_3h02F6A#/Z#Ai4i5b(8L!l^C)g9+f,0![K^B(*E<G5;lW4\(9>[oE')A(O<T5U0;S2S
%k;Um:jb;sCBqGTn*a!IFgEW[^0=g(2d8nqS'1t$sSe-BWR,Lg3UaGMNN'm+-;Ck8aBj_'0Ui96t.U`?EM!%rRSd<r%#_(SsB<`i9
%V,X_Gh4<sA)Y,&3TsH=F;ompD"c&*T<H_c8>Vm:K$(9)!+q8bs<2dt@dP!d)G0e?ad8$d^<mT[`nD-'lj7cgl_6c#]S,[j!mXOu#
%5QBhhJ,&Z&5Q'c,s7GLSn*/_.fmik1^]3>$7&0d/=k.Hipm45Ck44:WqJUlYj1kT2^\m3nqU7\/];PZD^\ZjW+*H!.m1Nn$&p<42
%09f,_?/IK4Vat1*E4gpJij,'j3l9q2=3'a)&prfs/eAeB#,G5<pJ;K:>s\6^1`XJFN1MorXQ4&DJCLq3,'2`OD[3;-E4RU@rL/?f
%UMqcR:=WrX;s8FNG8Q<GCrfC^)M](ZRHAJedX7gU5qN@Kee!52$;e>5[PlB`=H*,7X/KK77f>)J>:@*]W\r;t@j,F=cWeR;/nCQn
%<Dg24k3'Mp\N3ts>J-Qu@bgR/]F!QcBGsm-j<4"-Bd/2@?A+@KgA4S!+')HM*Ed#NRb\UaeLWhBY46,\"g+kL0f3Z<%NQEVgIV+j
%['?Y,o9\"3?Y:\D@PqnkFuen_<6%;7iPph7f3Ze$fLA;<(2,U;Olm(b:M:],TV1su^4pU?F.KQABHc-CeL&P/=5RkB%R1`gDf)Tl
%e$u!4k\=2N1L:LePNhem$g_e.[eI_"'+J8CFu&Z8RT%7<_&mb"kD-Srl4]YY_;StUCuP;%Z#4fi>./lta$F(SDW#kD2DGnZO!S\m
%B9U>eN+5r0lkaFu:@th3oLHMH4A*h02MWh3l<S\2i5IP#"8f42D:dsibYu/*8,XpO/1d6M35C1u&+4dUWR8<fXd2`Y`I2*@o`]cV
%kY)X&AOoG<qD#,8s/S?(gRg+UIN0I)O@9eiV-lb&%>?[`,_k0(i13t/Wi`K?iN0nnk$5$p@aQC:+!Ooj`rR69I770#<sY#__WKO#
%X#0WY:%mXp9RD.^j"#$B2.,B0:RiMC+s:bTd&]\##8h#VBHDd!4\A?):XD0)l2g_^WdH)5/i_ScQfYGi5r=MA>Z^NOne%UP3*&Ed
%910%6Dt40Zgj.mg/2O3?ZbD)RA2Q$#c0SSg_W&8JOsPcZXPP/I>;4,Aji<sHSGM/2a(8BmH,&_86F9f>.kkBYEX*J:*]]Wt?c=8]
%>fU@=;6O@o.KPmel"(mIYh5>HE(kZZpV?L,c<dSeY$VW[FFg]5Gu[i\4[M1=H;od+f[eeQZ2Mf#d+tX=6<e9Eiba;>I<%%bFF#)8
%)Hm&mQZT0(_:kY,0d[8/b,&ef!igZ,HI,KRKL#fI)Vu'/J(-^-Mg\oLiJXBPDa>U/;DgXD=T0176Z=C8!gfBAn@_tJ&14O)C@lX8
%T.MZi*K'uAP^DI4N#rZ-V"$U,U;$LF!sNtTQrs-i(o3A%.5Njf[J:<)P$m<G,E3#_(Dcp[m6GPF;QJsKnVLcfOgrB"(A-48bmt]M
%=J#u)%r#ubMt`$?2^NtJ.!&A7V8V48'?BRg11u!EQC./uZLPZ^SGgO_e2/B;JfgCB5j:-o"9fF9n:F9I)CrfMCBZM&GWqc9[>#0(
%>]gQS_4&Ii.$r&&Q5bLC$ZrP3B:i9'os3Y^Qdl;S9JK+gr>p_(p06F3*."f:Or:pJL++1!#B.[K#g*XU/KG'6.Bt&0UmM!/AG"@(
%qNjCdGLEfb]F`]W:`P`3@ZNOcT\3\^(nk"J$Qo'8QKS,(F;ZImnJGFL<l[RE&Gkqd>98q(UXU?ED30m$54G\*D$55obD*%[+]Gg.
%kZPZHB,^Z%^8SrhH[X4b*8AT6*R@DB`',Fn9P9&O[!YTtKhBi:!^"C*ril-3eB^J\+FT"t"GA8gi`R/9X%38KMNWXu;EsRcfFMG#
%VK_4rG!^kNrK@lrcr%':"bP6UYG9RXe,4oRn`Er.PP/hAVLhl:)bVI:OpdPY/d(bR,3.CP`B:Hb5+kkJ``3(%e0$o8(56PX':('D
%V*p?;(\)lX)j*-?4,"HWh%6M8F9j>SYf.$c7KNC@Sakn_KPUa9'8cg)bm0u'nRQU*B!!$[1j*&L@d_OBnnu4mrJ7u7\h&X8.]:_(
%/:dCbK%bIKBiT)G)DgZ9<a!0g5KQ1bTC9'*pU+%PZlcE_ld0'-m;QV4Z9JL*QBTdR,XiT`LT7.Fe,dl8CY"Qc<B)I^Hdn[HXLa0"
%.$a@S+H&H>k-Je:/YD1])c2;/9:ZPG73!N)A7G-=?],ic8R;k^XbS]fi=ltVS9M>d+[A(DcTD[KN]%Gd"QO0jP"$i<.uC/mhs>P8
%hp@c%,a7J3AM*'=C-+/pnnRB+6)<CqnA@FdXT:pK0G&I;E&h/#X"7Y-s)g>'$:TUXBQlp54T[1/<gZ>SRLV?G:^G@<%7QOBT^:6#
%qF?<Dmndf*6q%0gFt1EI;8e$YOr>ER,%4QYDMY7$%$VL'*>B7X(uCAmQL*8&.<'a]7:VimZH7K^26SDn0qIW<Pm;e7=7a^b'bU7r
%V,2#`gD)="&B:`B5R[nD.X+1<dD8O;H(H5$(@6K@(@@4#Et5bP'Iu0o;@o"b8@t5RcRVT[1;HIf9N#H@3D1,l0]GL-cV"<YUibD\
%q4gV*mupVsnLH8+@3V.97PmSULjd[[(>nQ+&'l^BD"9QYkHfeQE@AN!2A4]0/$P7\8Q6E+)dVJKq\lL",:J-q:]S&EYrkm(q*X:6
%G"sG23pU]\f0UXiB:mM1oD.J)5Tb)3//%=PEuJo>N[AP5Fd%0dK0H7GY.9nT&#"0OP6$u)SCe!J^Gd2,fA$`UF]TIk6@Js;QU<Oa
%2-Rn/q(G'N!bGDPCsS6Wk-ojd4"H_SN&n&Z82jc!$iI5\AFXJ.m&U6o(U/-O;FNPij@Xh9crX?t'pInDN_&EV"I`R59!bj,7i;,]
%Km[1qdoUH-in?,D!omD+!?d#OX;4FXga!L,*C^iLT,0%_%oq1)KT?,b=:J7:0Csua3!')tZ`%.pi'u'$REeV6IYt48Q'^%8gVJ%-
%7$lGs5BtamLWs!oRKquSZCt2N>+5l?H[X*@eQmga/62?<a_2@5j;2,;id(nro3Smcf!9EoB!)]:X3pcA8!JZ/d;"_5p?q?jT4&cI
%EbV,uO/=U1\unNd*Q=hYoWF$8!hsM#VX&H'3(F-LBVqP)+tO<+BRPK%<S"kfOM'kY-jIiFN8tQb7_TFm9n1hR72r-_qn`NnaU0QC
%1],!]T0LJ`?hj-d?503EL[9^aXrmkNh]5sX<o>C^8pWrr@aqnQV#B7QR1HU!Q@ARg*n&2a=_NPS?prMk-uGR0O'_]?0r+OB&h`OB
%?M01<JHAJ&H,JiAZDfeF>qYgcK63ET]:bpeeg?QE1PA'5]KOMqg(Zg`KTVj.A4CkW*iso_'ND&&P$CVWKck`iF,JYK4O;B#$bG13
%18'J52Mat#B%'#olk!Mt)FOcY!^&F\l\`lpL65;W`+>bjUm!i(-?p*to?m'%4-5`);([Xj0B9nhG=bST$rJ2j!WoQ`<jY1S(+W2b
%j;m7HJXZsK;P?Ru-BaWUqoo,?oJ\#Wg@;3d+0^V,hlW+YOaq7H7VW&FW,"36=WeVQ*TZ?T[a$G3@_<q(:/q2)U4;N:cn`lD\fQ+t
%9YRMr;G\*8?)Gj[]<56QHc@sP"OS,g<$mb(65*Z;LWkGI*-beph$_':9'=HdVY2'1?@Ds8955k)K8Q9Pl',`S4m?7PQHo#(j9)h!
%%G=nU"dLsFC$8FC2=!YRX<a5H-lcp.EI<=@_+nR,NX>lXfq/NPZ9#Z2Q#Fn8i%7B>BI>WoZIS!+hu7XtbCoUoW1ZLd/-[bfG&=:9
%9(NW&l_ETl^K#0oCb["(rPC8<SWMO*XY3Lg0FZc/S$TumM,beA)QotdFj^+DCH]%Ma=eS[\$H4h+J(b<(EI/T79@bQ)HBULL=Nh(
%!Fbpp)+Dt5=7e[sQ3r;fNp<H-g6Q'_-T9POo-S5%9sVi?+rP8MBKkci%`CF\SVa,_0o4L1mG`-5L@LME!9#p>F7Pb<'4ED]H"rsP
%oA+TQ9mGe*^#[0J?i6ep]3A?:&K[ZfAL4I[pDt4(&F-<1:gCNF)1Dd5Erq/,M4#AD]-77Z*-p&ghbbin'?<o&E!%sPOdLVAW#'d`
%;%=:2kiT0GYjSEGI9K><`Te[.3W,YlRl6cq$p95'B)SBBQON=Roqi\I4P#"LT5MG^*P-VJ&]EV^JfJt!\S55'1:,%ihYct;?F[mP
%rtnLZ%D^95+uYP*;+@UHiLl.6_rlk.GOo)QX8b4irAF\`k6B'9[cjFcd1VG'.]aS>U@.T/9cOm"[t0j/pjA0,9Kf:tRFt"<(CK2<
%6E*ul;F3&b1b450]f9j@k>=bo6Q@OpTMHOgZHk?([$n.Hi;"BC<=cFH&?Ku]kZK(o(eT$14m*AZK%.i$RL[?J4_UH8kg5H0;U9cg
%-U^5Y/HZ+#_!EljKa?#kH#Cf"H'aclA[2);kN'#+=+:.dLXD=1ZP.Ulf5oR1_g%L#%W(b#]Rbhm^WL*b"taD4qt4cs/E@)e$-#8-
%HP[SNRr[PUh<?N74Q\.g*X1^W'>I@X1#!]S$P'L))WGI)Vc_)uM+'(u0u%>khaBGO("K/eWFV\0R"!lJYAJ]RCRSm^=cN5WGC\Rl
%l5g5h\j"qi;MO>CMn>mG5WEC@.^7cAp%E[-#eq4Tf,a(OVj38:GW.ooWcmmQd<\%"-^HVe5A<QU@'VG4J"dleS)^50Od;5de2+(b
%(p631?^!AcVGk/lc._LTaTko\eaeC/iPI)WS1`)UWa_)ZpTZ5CkBi:"cR1h6J"1RhGT=nIV`==9Zn?=Jo$(Y+8(Q!;U>\0Cfk&js
%4'1'?+ll"Hqd^=G=2s93B4b=L2Qd-*r$$OFaT@_D(?R:@R[i<e0M]]B'kM_^ZZ-0c_O5LY3<u6W/j!fH1Q?38:?=O_GIF%qZ^k=P
%/,SEsI(S&r:Z6V/PV4t>3SA]%G=(CUe:j(5&;At1[M$i,DujJe.hUD&Qnl6B9?\++`+V+.fqa@Qn4dX%k<.mBdK\Q/GsRD!F-2&a
%"l5[:Xi`@[-Cad')KTn&<hs4cTs]K<rgLlTm1j=0@'g[S[XuX-^]YaZG44R(MbVb+/ZK14,lWtYQ@>oC5N]$;Vjp0A;?GRn#^a98
%aC6`g=)lB?\QdKFQ6gic*$A`)(^-s@C??[HGl])8X.OZ^'O*h1!&O%GSP*I&9.+^l[)gW_A:RB;Z0[#6Z5W758LRg=4h13T[7AH<
%QO&E,(tr1f:AjI'O,lB3WmOibXbD!Y>7p^=#B(^(I-hZQILGQ`][NV=S3jJ"$X^<p/gnj#"B<tElF$kPE\Y4!nJ_0Y&,Fp)UfTg+
%RGQF0<l-:qrbYJY:!liEXTUO9H5\bk1rsuGN;2,UcTFp!7k(i#rMl3nW.niidaak#>%Foc8cX-Z?.`beNp6"%I*Ln'L8"-0N&fPU
%+$n-ihGKuP@FHL"`*H*;h9)V(!O?BPB[G\>9)CI-=8C+UlQG[WgO12J([F)S'c'(eCrE*5>s^Hp/l'<c10[b(-+4fLOA,Np?hki9
%.G4T+%=&r46I8`sV=mls\MAE2U/#SJ7kp&2P$8qF`\chYXoN/\S[ZHF#A>f0E,,ks.m^4#^<e_K=d'3BmB'n+5dn5AIBiNMO('1%
%C\7Q<d)C^)[!_+E1bEJ'(UikKE-#-@%A_`h]?#\8bGn<.H871+XI4XZBYhOeCS")W#$6'CXCo,n%\G#9QI-N]^4^JEG]Zm"$WAtB
%<mZul'5-8t\=nX*C,M`YNf(9dOAZ)\lN6,$_aMIR^]p2B`3*UC(bGPF+fp)qi7EY'b+Od_Tb:X@*<b%s9FF"'C@=6rBknoVe`0!,
%LiR6-f>IT/=2if5%ZRDcZjs;G74oJog:W[e6oq*L.*%EK<_alg"Z\^DqSifnY,pC5PX(3NQp*sTJaY'q]!-Wi?n"-YL^0Zk"n(Af
%oMD'\R/K<6ks7aeo;KfspjEK@X0E.E)Y?;0#t/`!Gok<7,6:Yn/gF5PSKRPZLX'm3&(*0U=gaJdH=6VAbd4$[oXqu!+RZQEs7WW\
%KFX%069b+Y&CeiTE>r$`R[L*WQrGd@aGP0%'!HUD*m`=Q&S0X3);os;,n0hG3sq,<RjgMiX/T@h)Kc,7DOrA7TY_OAS,tta0a"NR
%bGnVJ08guLYg7J*1;"BkA5KN:H\km_e.8Yq!Y3Z.da08iO-QXMo^Oe=/C%asJY0t+;XP$WlcIOn4@Ip!EANT"#(BmX6J&W"F3oT[
%TX2eJ<3DPFkFi.ll&-?_BDj`[.`0]&lTo$PL-,Q&Y8#[U>!H:BZ7CoYW>[EU^&@6_N<JbbXXXFg^gjnjc1`'>cGR*Mma`k'ZJg./
%R5;DUb[[5qT8+3En$K<mg"bgmr`fh8l>+k9BAhs<.XO<U:tM`660YM(fk0o%"b'bqPJ]RGRYY`hP%J@Z"F;!92B/SFn?\^!/5qQr
%f9L?E0m,W9`:,WI]@^:!rp5/'(*_$VV:[WJN\aJ-)MQ4O*q2/4Ft?X:c^"6e\f6H'K,S_8BauK%"uMoW/45<h3V9X#;R4Ti#AZb%
%AMNH)I;V0[SArN+(;9B:a7XkLQ[IPDrAeXtEIStKVtnCt4kOu!s/[Eg#H_j^iB3^Xm$!W]J,IV2_MKIV!-L7"p@id&dkBV/rpDkU
%.J@#$W3:?.LdqUlY9<FiTJmZ%a`&6*/?g8hiunKPD=j0q*`>P/$AH)5q5Mbq6FWd]k0+*mPBAs(-j*aSj>nW?UIqsX<cIO@@-Ap_
%bsm/uK!8*?4@O/!Y83HBHI_cW(\jl]P`4%42?fF_3*d0b4;\mfe.63G<1n\:fV^kB`Q=>[BK'Y(j+fA`g/MQNGm:8ms([pH_9BQh
%EX*tIVCBW/>4ii%K*B/uWnkj5a>6Yh3THq2*CY/&ThcD_MFSeXBl7l77LQPfS`g1*bKYpIgZmRba#jIk4D/#3KK?FKamaKebD=@_
%k>>*W$dmVKD;H=HH>^'F\Tu+Ld#QR?;#uS9C&JNl/0R;@\VA@A?].?\HV<u7fW#Z3o;rG?lS.H=BVu`#=>0g2r7Yl)@`N^p8q$:h
%B&t`=(J^I/Z0F!a:ug?b%s\A.?F^cQ-]WeT94@(4=LorITM])7),Ak?2CL9V2Du[qb.Hi)LCIp6F.rgf)9(mm]r]49"-!GjW#R;T
%2SCleb[@?h4UPV93b`1fB;RcP9mb,bJ([]FAb-Z(a#jGg&+BMHc+/<eES<(9qg&QV>VRi3V?'Jsc\smJS_=YM,28(f"<R65bk`uF
%cr(q,&D$K/,['Ej5J-EQL-,Q4L"IJ"_c_)2"O3jol!_"boB(+65$dM33ugTY6$7@@mEWB?=?JT,&)_:`p5U]YNP3)Bp5,?OcL*i3
%:U:^PnmpEc*;j+7M4#emWbS"RcWN)_g"^AL#O]N-G6#B\TDH8pLY[f.*G7jpT,Dt7q#-=r4Ia4-EJHpJ<?9rj7ogWsCd*Z@8(R6M
%S&Tj+'cbN34q>I*-sN6fbJS<<o!L]urlDUp1-_9N)9]p/FUYtGe^_KsG!5GW/cB?UO5%f9pH!L.3u`HIU,u"o[^JtknpB-)50`g"
%g.4D2daX<Je$-:P(Q@pum66s4a7]E%Q,E@P4XF8_8?<5>dg7gK$d_;HDmrDHZh"b>;E(Ah7Ea"QV/7^@I`U+fA6,@9!co>"A^Du)
%`74P?N:Mrd%AGrUcn^;C/:H@)Zro'V"25N[Z^_9k5d_eqO<(t9]"^D->:Cpo>t(e-YD.L(&Q.Z"DKQrt<.rU!1;Saq&Ze%c0.7+!
%.&Z5.i]Q8`9<lqT.>^WuGgi*a.&/3Mb`n"3%nmXGlQj-*Iu6d8@iD)c[!20nh66:*'`>F)nD\7Bn^C=0KBm6=p_n%+Ih!BK8%YBd
%V[R\-,-<_(2hS"<E'NL$`(r5<)$+=r-GM[W#NE>#=X[)o\O5r)dd)(9_VS+J'sk'9o9a1Kk8!5gQP@-1r"Y,@H"dG^H$'B7Z^A$I
%-u9nfFpKoDOWTLCZk`@]7"7AUK"nH90jUj<09$Uf:ErJJBQj7b:GB,Yf^9!nO63PLZ"]N8oaWb]``47>(u2"QG\T,,7AD/P:.(U\
%Am%0pl)A?1ck-^gmHm&QX5lj/QcHCcOqi=fEb2R$pB."<T,/lpp#I)PSf!s/@6.UnLX6Aa]%[HrN`a;239<3jEZ(U^%-CfG`cdI^
%k;$(j_E*^NC.f;011G][bJn$Dh9I1nK;)W>5)lVc_jG)0d9bAYD%A5*%H8m[KnJjC9mbFuqT0L_TK:?6q8I3([NG)L1imhi`0aT6
%5Dc8TlMO3-SUC%na:j;'7Qk5Q?of>rX.sEXU)a_-*ffu-j2hmZ!4U3dIDg+$:i6Mc[YbV"D@A'PWYlAu[0B%fClt0D<b8]YU"GY9
%'ZS*gboB2)BbWta8k2P[NFPsJ1QDC,>@F'O%f,PBog($sdB([:24MdUP7L3dik@H0<snL/jop3;Xnq2tpH+4U*AX\^AX5qN^DD/g
%fsm-;YH!TND?I$hmel0`_"->iFi!Qno07O7Y@g&9V)NDYG?d*U?Zl?pM0V7JK1h'3PcZGbr2N'Q4C1j1]XCN:d]8QK+?VSdB?;'H
%OG0B/M6Q(P&`sWpGf5'LfDYcL%;r4i7Bt9mQKlmrZ'pDpD0%P`FEcqUc]7SXTtaP;VD2F^#49[#U!)9F)k4L.bS<!Og>9&:RR"&K
%6p\5-;<1^l!QO+(YQEkn$mLRWQiT(p+baB8E!!XJe4g;;L4!S$,5Wu#b7t`&*ni0gd"4,r8]-EXSNdh.0!5^8MT%[!Yh@1K9gcWQ
%"Z_J,.!D,)><K6)$4+fKf069e:h`Uu7!qPCdhMFHRc,;lN8S-gf;9\Zl4A8Frg>T.5u'0"b=4)]A`Q-7Cq6KQ,ES\7CmssEbcgLe
%4ag8Ua?^V!j`@=Sc:[2tm^ZCrB/Ok7%*gmYoZDei\Q1m))X:1VS^t9/)>Pls/p`9"+5?LX#^9H3'\-%&B$=tV/UF-6hV:BYk^q0F
%\RstY?^Uq1B/h5Y+]BKUFW)4-1;D8H9j/@%j34]c6b*VO,;6ndW/#.0ns*"u;R=W@":^XT*qC/,kWi"Rc/s:C$19^5Q%W+gqdDK,
%L3tl!DWXeLZZ,_PqQU,[LaP\KrLB0fUIqD\T2Xnhaqa)!fM@>60opn;]![9d$Gfue$VNGEVM.5%B=h;*0GMaZ;jSLCm]c4<&?Ut^
%d7V^qr\NFIr1$?<5H?j^;6aAc^\ne[Y5[7d#Vmt=brKV1!]AXcScYJDWAR<[DP@aVd9K78MUlSgGuI6pl*uJc5e0cE'S:Mn-#\()
%Nn.TTi:6(d*-fSW"2''sYEed23+M^jEjq$Mp:eZb5S[p$f4h(]i<"f-]l!6XqeBLsm,VQGEDJ>!d'!$mUV!%LK4O;VAIZ^0@\j.,
%<R7;X]_@@\qTF#`PoS>@Ej"UW<MC6'H-#Gt-bli4;L'k/Q]ce9o*kQ0OC$NPRC&8d90'HoL^WS@9)H2kkZ"R1Kt[2feC0^%h%KXu
%3dn1&Tb;:A:YhR*a(&j(8b7MA"O0BJY:a5T2q8==<u4ui+]qbr=Fm)G7eh+C>;)!*K=/ERVC&Wu$/4^O.A,HX#8\!fq)oo!A+K`j
%2Hj52QgG9[phWll^"RMgG9`\eT4d2"F/suTG:(kop0(X6du\5#kEY1Y*Vt$6o^U3$Rl0r:Nk_q*<hMI+pP6*rAc&h3E87?E-j;]g
%@Fd*o1O>R&qkJO]gon,;Hf]eji0nMfkncuMA--](Ys2r>473Vis"khOVe>m5"ZRt<o1<`0EB'$rBD1n(T8rrHMQkSU-LfWsa5<[0
%bRa9\+6qr_;WbP+'MBlr&4`K`_(<'%eY?2:r$+Q-H5?7hN0%DddSFAep'S+F9j<;D#lL=SVO%nGb?4+FbZ?]9%p=+BMDqBV*OG1B
%9BR`gDje`AW[kSTRiMjgPk_i6RU,(-c9n0Vi0VVL*NY:gs1Z,1hHh*'<*eYZU)`f%'r_EU$4uaGg4UN?pT.]T/E'u(frD#+B\*de
%0W]03>%mmEVXI`/s6f.?rf=hl=et0.hu*2W^\RNdYLigLVn`-CI_-Dd?hP+[@n"@N+kP134"_&#rY<IE/2n9`G=9*@n*+A8hJb!Z
%WA<TR8^,@[/=@pOqm5^+7?:r<nbF%ZnQ*^&.ki=(0-M'/G,oBPX6W%(l`N)J^3:m9"J7<''QN=8%W+de/#R\nF;jo43HJNJomG/]
%XG5/FGolY>2\aE99E7Rt38'r`gkp"tPf7C?B.N^^/;+^RQO8mu2`072C[h"-QQD\S((7[E0A=<&(MnA&$X5+'IXE__36HQ"*aEBN
%Ll3"%YJ9[Tac#O@Zpj]57!7-!dl%8ciQ;k'7A&nhE%A$mBI/2$+beeA=l;C$KMf.d#InBIfJ>c_1hoLO&T46l+L97doe%Q5b0Y`$
%pa.Vo@G_1!+4bEp?$#'*1cm0!WjJJVLpY0D[QfhtmO&^R>/asiL<:9Y7ADBQm;G`3DpO\5TUu@1ce9,?8X%^l,3mgq"<DTH6pun?
%E.R%'&uk,j2.n7.Fh2'04q?j?N;G4a'&V'>,l'05%<>8ZpBfW9;N3>43":8gO[Ie!%IHP>8C+eg)Y`2Z'Gu`k@QG0co:V&rfS6?"
%KLrD=LtVi&GG;Zt6ePCm4&InM[NG46&-a$UZVl9cd3BB*5j@IOC,/]R0B\gH>khkjm"<LI'*ak\roIs99*/5Bb0-1e=\'MO+\-Q_
%_u3*4hnD82]u`REoW%k'b<=bcnY7ooFKU=''IC)\`)3OLXp3Z'<c]ntT>M+T_q1UqE\ZpUbJJNFf.S^9A@5"'VCc_"ZV>4<27n.d
%LYmn):`;%ON-i%)+K>W[;W%<3S5?)dIp%g//rg+4r\<pk2T4$W7%C!Vko*bbYNgG#k*9;>j$*1IE4-@Zcajkl94h;qbr,PR7TK]B
%K10/0c.VQL<j4stMO"7$m+JL@COX;&^0e4;q5F!!K@Lb_`WCFMIOGXs\j\/O15D-QV;0E[]JkY=\1C*tI,R"9j*JFMYre-^(oga8
%GXGIV<lC^,PO3X7Am`s'EY435"&5lW'o]1F'^b;PiB;6mL=`3$1U9shr%V1,U#l>eL^E@,Ous=(Z@VA]7HuGX95PaBiE7p)e2:"d
%P6f_g5uI>^lf"U/a>qo^&J]"r`)&Prk-5M(gY^8N55n$E!,46M=YmaM+T#H]D\5\'8-gDJDdiEF[0)_H4K79o/&<Xn39pCfaq@>7
%\F'095I_plelJao`nM-h4ZY4nZ5iScjn)_K9[*NW[^[Ua/84/,N+lo'Z?NjX2`1:V>&j%ELnAm=!p'&02r3nXWf?jlM+0jZ;dr5j
%`2&Dc[+"D$OI[SB(!Tq:@P:3!Gf_ltjEe7HG#e!g`F:3FJmG!E_2a%ke-G10'7*b4A$KR;),[QY:<aEGTl3^=Drj:^q?DX</5PEj
%>H;]OCuJLQHu">>dTr[7Z`,Mg$Gm3GLc4RZ9XO>MX0Dnf3F/M%hiM`jZVfsr8_<Rq,F'\2I==uf%P8Hb'q>TGH/,maPjds]H:BBb
%2(dBT1jnYk(^,Ue%!LY1>Z1CS?&>MjdS-3UfppO4(!Cb,+DXon18$gu0pQNXf+XQ4a`TD*XJEaCd!*Dke(V8?8Z(jLp"EtnaLFNM
%_421f2I0'9oZ];THY)U_OT;4r7Lm"eXhC7le?o.s:T'BEh@udHAA+9B*AM5m>YW]sVA#'KbS&K1UV,MYg,#=6Eb7*b5<KD(\F3"\
%SF"D*;Mp=.Fa.WcoV)L/[1"3gaUi5gLB[?LGNCnTb.RZ<.8aJOWWqj$/^SN@DUk2+hU/3n?j-B113jS_2kLa[((Nqh,'UqLU7f"W
%;<4Y09b>[G<grq8RepqCpK`Uj(@h`SZ/;(J*<9[LnDo2J9'G#-kKTGSi3F?s4c,Gf?!2U@"^)B??U]mTkZJRKJ&\X=.H]Rcai>R@
%K#]O=^9&oXU99l\;PIq%+JghUQkc?/TN+ntjKM,<Y01k@G9gqc-!ei`n'NW$Zl3(5\Y6&",Inr*PHB.,4EWt?X#2K[:Gej+r!4:g
%G(KQ)8EK4ZO?_B[iC/8W^%W2GEsV`U%[=60,.)*-(7gu&?Q=c#6!F%KMZm0;naNh(pAM5_]V=`fiXqg,%)n5ljq_m6r\bp]3NY7*
%*AQq!SLg)6=T+/4FQ^O1%YPp>9oYc2-N=1P/8?LHdkaJH$:RgL&ZTT.d7-*:79(sTC>#afM.VaN7k&&n_O-(+7k?a(k^'sfG5:@%
%d["W>=[Yb.E#0EuDq)C.fd32jQF'cmMalV#bk,$U^m/`H)/i:uDoK%IB]kGUmAQD8LJp-Fjj`4.9ur];7UN3sdrj/pMGG"OC<=^a
%M$XcKs&TkH(8JScG+BGam>-K.M+n\Ql+5N1?m/'(RftikeE(4:hi@qi675$NjXp1BB$kq.VY+;F%\Xk9boaD^B`<o,TS/49.tk'=
%+^28;P$On`#L?C:AEn-saY+"%Ml%%LH=m8XOkhSa>F@euDF0(<LepcOm"l>Q)OWA_O,.VR06)oA8>r.1.*BAq7Dc?$BI]B3$:Pjp
%_g@Ji.\Rqdd6uKS50C@R'Z@M\el5+9Qp3^_>He/5dl.-N0DYcGj+n61FkY*o:+0:fL#"-"n:5qLRdNXgg2[@0%(i9ChdUR01,N@I
%3&WA4"V!5k<Z4.lL_e3dADcVG3=6,.oO/k/T(=I:o?uPe=tg7,C10@>.&aC*Lo8ope=+aM?Xp>E5P,onouD<d-Lr)3/_8[3JeVB=
%2d06X?q-9UHD>iXL]`]kNC<nm:HkC$q2V#eHLh#>mrtkRrV*CkJ&eG_XXhs6D_)q(gTE,qDYp(#qlaARDne/B*5Aqf.5FRenIX&9
%%n]474**OfmGl:`qV:t-hPr2FOGd"Ko=>='`Hicg?oo.*8<jhc:d=(9q4(\h<su%."WuJns2n43Y@n)se.Qhgo,4+\>1(&Vk.XV1
%GJF70m92&ac/DRp8[Pc+_XU+O3)Z.4,mS;PY2,>'A/Q$!EqJlJMV^WV6qZ-VkFHe!p01V-0-$H-;kt'(mA@@9SO0WB4*l`b`cS[(
%!8L93*J>h0H%`'"*4>3$YgSg%QjpK6+e$cU'A)",\u#oRee7`?3G'9E-$WCH`6Ea!]R6e]9?Q[J:`E=t5"a<b$h4I:$RqNP:1ag+
%N&.TU)lb8k5t+M+Q^gNn6Zi`K1D_[.=PK$ogh#uM6V5M?+M97?ETV7?6;@9Q,jZ=g4^0mj.44)d>"ZL2D;B%SqTQjkiGLX6TSS<A
%g*68VN3nnXlnk`!<KnO<8_a'%?L&tgJMrgp=fd"TFm1-WB*dpt5TL@M=S<X>RfUo",O$Ie8O5d8&4=_p%<>uA+N7]BN8IIS>+?4O
%YqV78L4oG`-.!.F\=P>jNH1e*mndJ0BX207''jjbhGTej6U^.,)A\65/D&O_5rr11M&A08JK!BbP]ji2d\rQGLOr3a&boXTdgnX#
%BOOh5"%sks2HoiG>kTI&Ei>mU+.akCKj;q?mGQqF)\al%RqNn%mQI1Yd%g3oRO2(Y==j9eIN*P_%Y_?O"PU>_M0I13dDHq]_Xf5@
%eN2)ipQf:b[ZRnf1oJ)i1fH%dZrtomDcLfnj$#Y>:(+V(005L/K,`;l[>q1T,iFupSo)i,F68o<QHNA]q8If@-7BR5hJ,db%%;Fe
%S6<51Qei7`/S;K3B_UR>=lE"qE^9Vlg)HmF^f\W_Pbg-1UHUeEcKi!3/NJbVrKcRZDJ0k'D;f#H*h=[Fe?E,q[,)VrV5>.Td^5o+
%ir%]$(u?u3-BDJM=XgMHf%tPB^0"nr/mg6r<-(KVoZ/2^X;mt+XsF%PFOs%*nR:4nB?=j2fCMEY0t-su"Su!`78W[tje?NPgRnf7
%au)mEQa'Yu\R/WAmqII^TWY#]5SNUR1HfZhr:%uj[3UPT.t.d0V`HIB8eir=5*"-#U6aT&9!V[jC"S2Rb\8*Lo-M<AX)V[[#0cmt
%C-4@W8GeV<H#U2S+c+)e((5SrT=S^M_A'<OLYeUFhD&(9[Q/3%mIuc%0<A+(Ga<8`iS!_*7;#b)*er4"HE/S8d.lk2*;B!VEa$QW
%I*ig77:Uts.;qRh)]*P"S8?Q)1Zk,QQHNA]H$Eg>Rngc)Cpe-:fJf[apWT%EA5nIWm&3!dh,(GK]#BHP`E#qKkt"gcJQ>%1Ntg8m
%e;*51Gp1eg2)@qB[\pamDs4.pgT*QnT1<P;2*n=0YupR9`B#U(cA&3EF2bjJ8\AQAKR:pI1*$-:%S*T2G-bNG.'D8fVW9=uYh\Nc
%VA.PDW6(2OO(1@;9-./S4^E!cjo#J/BX^mO8];OLe'iVY*h4<RPd"?/]\;=lomYuM\/%!cl^LehHfi9;Z$P"Q[]EY;2,KSH@^`Eu
%g7i5^FcB-hQLLQG&gnS9VnP/upZ"G"5L'YISh<'+?Va=-2MIH1bI6UU_T<!F3_unm@^V06P(sR6V,e_C;R&KtT0O(YQnpm'NJdNe
%68!RA78s@O`F_GU,tQ7&o`"J4#D9LCZp`H#(Ls4C&`.fgLZcm,+kQ<SB12Zd;&S.[Ig-gHKiS!&#!FqYY%_@UN5^reoXDO]o7_m/
%\HkEN-JgOk<fp_9]G]"m3h3FCFq1Q%=oCX4f1(!qY9ThYkd]#]aiY4?_`g1mc3q1S0,f[-VQ0<09>AX3j'_naI^22!cBi=(==n$f
%A>0YR7jb[7)ej\<:D3,`07ug&3l6fWeL%OZijHJ7`HAblMF`a"%dRkQ1hT)Wa"\[.-)Y<ZcPE$87[Eo4eqC[)=EAE%MYkNH4?,R.
%-t0ZBBt<ANX`_QJ$/($kG^WdgGgDo$H@hmr<:!g#XCG0d)GN*GU,i1nGtK<_J7pcLUZ=!2p+YjNZfAEQlhQ^3;EBd)2I_?-m:Jgd
%cJ`;\*h=J+"L2(J@_q2Lc#(t1aJ"jWFa\%WGfO&,7IIF%/[Gg^YO=MK,s.p6%EEobYuIG,3OF'!c%<,@A$?<Yo=0k-QIA1'kDMg'
%RT=6W;S%#A1)G]c+l8c,d"=.:RO4?D==i-QYd$30KnX-H-@Q"j]OT6/N8[I-k>t_S.D07!!_l.mK)HlD@iJR>DM/`9eW:<H27bdn
%kA_T81ZsHscPMSD65i_Pn1iW+%H\H>L#[!%*h5#^BO\B.`KFTp[oTscUZKTudbq6AiZ3(e4C^BR-mPdi$nlGjEF]*jiD$Zd&2:ED
%XVd%9HD0N,nRZdYmY?4<`gdfb4^W=1.$Qjf#QMN3FY#S=PPocG^0FUTEZ+J+LC6"!Mh>l_.Lu@ZMKmH`=co]u:%@]/D_>.o[Y!d]
%+^7JbqVpS7W^m?UDl?^_8a)#\2]qC8gkY(9Gp1f276<4TeQu_VjEO&Z$Eps][QfhuQYVad/Rr,WE5C\!hGC>:`_R_5GKcBBOYIr5
%(.+$c+De8-!SgK$/Y]Rp(0hJ^.ukGKU3a+G1kF<]@1VB^5$Lbi\XkH8UTRbH%>o$k$H$h'js>n]S8HW*oAuDfQHNA]H2(m-2lROU
%'jLM@2"@.tZQ`m..,fI?oB)1CN$[7UjXmEphsj))BPZSu%IJVoZ)V%&WPc4Vc^FAkY31^dW:SMUKCUT\(8&J[*R`UF4Z[5YBk"K/
%`KH!X2E14Jau40L$/V*thD&Z#9QQMcK<fQAG>-MU^Unb#-U;[[>Xeir1KUBHX>&fKq.QqPH/(pQbf)oOkDLr(?02`6(-+Y0HCD,n
%gt;lp3+jjX@_I`>P$dRb.,(UhB!j%>T0O(YR56A!QA1fhlma#(90:LT;@6?(>;OlU)8QDCPsuGH[^Z5]LLD9q0c(5.ShD"!>LM/r
%DIE]:o2p)pfq(]Hb;DSeQ8't93+U]3MfJYL`Q]S'`q8b\R1atSR&q^>r.!?=ZHQIG"VlC<I#H3eU9ukQ#`'s]MK'`?2ShNDj)a=h
%OR)_:1\u8BgRrAf^dOrCM3>?dP'PgfkK>_W/=3VDo'jbQ+4\<r(..m3B];0rVX/?O+>ZmlMd7V2[Botf@qXa(n?j">K+i%D#J4[t
%g./.'DW(cj\.?oRo0TVCMaiF(Mc!u:r%2)1Z/[5Kh;$Zf4Z[5YBk"K/`KH!X2Kfa=5*&_[Dbh&8Qo!\Ndj,s`jpnq<DHY4mo!l!j
%D=]Crl6rt0XlZ%Y[T%$Cd'FH]S]?/+cC>Yj4^U$\Y\/"`[2Ra./QSmca*+mW&'gSYRTM1PZ/jl07HIYB@/"*1:[lplnKse%qnZ9>
%?0(erRX!@>1m\C]c^K+/W9.b0,Ks:(YE&$Ep;O+?0>XSAPXU>LerO\ep'iJF]A&'69=g^t*a)<_i;bL_Y[Y%UlgAS]hJu,85S(%%
%R4Qss=T?S.2drh7EV-1sl0ZURm8)M=BU(#UdX:::jtcjZ_'b,]oJ+m(]cN<P:<C]FXF:8PWJnet5Q$q)@G_[?c:ba?Y!+85nheKA
%L)\k5.\bY1k[N1g`O'DI=flDCrg2#/7dlEh>e>3nBASqPhEBJ*,9ZhT!fdd!q*QH9mWq.]6OUp,o_@sS=nL%G'p1"GN.V'HMcD@$
%7X[K`4"ofD\ouIfWWn;I'?jKn&#bPb6Sq/GFhLT>Lh0A\A?hlJii,,:Z..tPGAG%ak#CpNq%X7-cdlGV6clqMPYjrbh`;IfM;T4D
%JioebJl%$HI4Y7K!jmrFR_uZ(Lh5`q?-el+jj,(u.>C$$-3.V+W5gcF4kZh/`3UhUZ<G_iI"I1&/_8m_e@bH?HYYrns'2$<,c%7u
%em]*pU;bWLm-L;fTch)hh&WOL2`-st_k-.[jgac8CZd!Lc^0]UkJ]"Pe;ZbF7Q7o1Aue9RO8GO$G"jI02(dAiPRT+#L%2T`%EX&#
%WP!_p9aQ8:F8H[[2^^RGFXC'&+OrKZTsHA>@0H079jOliS-FlnLODs'40@^m\p?7:<j0+Ps)+'%6iU*P4c0Sr(*G>mqjt<@9dm%g
%/XB157]4mYJQpN8o];t^b5:AT=@Qp)kVBP^*EI2%/T[\rH483E>M1bJ.Uoa&(o#_@\`dID=cWB>\9;3,omHSJ?)hX57*DH9,N<*+
%X'@7)Bcct21$o:DXOaa\5>a7S*_j,EZhD-uJPt>hgP5FLBD%-?,]7I9\i_BI4Y4EA)MJH@JpCj2+3hEJ<qAiB\huE.%/Z'pG$<;d
%I.:lAdYH"`.rUE5i:OY._rCQ>UYZ[5T$YSg8W2+47J$0"bSTBp<nZH6l/^6pEaL&k3$HGbg.FH!is6k%\?..4PPL0V=Rhq/SfBhp
%[.o<a;V.X'#Xaq-dE0^0Bn.Z7B0MaL?UH#c=6#&\ipi9"+G4s804=jDHtJH%er)P;>0d%9e&.Z&q]GHngF)q$CO\Fr0NPs9:_5AM
%:a]u<KsW$$Hd<Y%`6?A-!Tf-t*Qg_&o%VZqbg\cC)iD4F%!8$UE]mV`n'&-r(RZGd)`jM*/QihOH/(@6MJihe?d"H5"&EaIO9a*E
%e?Ies`?l5:4.3&nW2S!i6Yj+:'IU6)S@X!6;9l&j-bMUJ)D1SRd4_-L7*7WBVYENri=dkh"'U^g$olXLhbX%5<c$<eBp80-?pb/<
%q,2+hnG@2I?:oI@2KTt_nu=K!$rI6!M/$/PXYdIR>uf\e%6#uFO.GKX8N@7Wn2l1l0F"kA?<8][83n"3%&2eTEQ?Tn;V*047dE%.
%8eXanB\V)*Ib6U7M!m;o`SgBR&]F5@`?;*(#2*(t.?Z<$,d?!uj2*Im@3>F:3"Zl=qnJXQDFjg9>'W-gRK\K"DnBe.CS#i)>Oo`P
%9;)$+%Z#*TVmkg_TGYBM5=PMVWD>#AI$7iJ6XfatPLkC>MFIur:T-^1=cWCCdVlCPlhR8Pq:PVjh5XNofG/O0Z>22]A+TR88Z\5_
%=>E`^kRah795PGop(L!V%2naPGS?&b[%S'WS^0oi6lAheTqaV4Jf>YUe)>U$i,THm\#r347qu^47S%T^"mRL=qFO%rSL0NBZXOKq
%&`;t*CH_dD/jAMmfZ@:WI"\hL0um)5RK$'@s4&\"`V6\=s22=[BKULdaDF>(M0-D(C'gUr9\CWf&*#jf%%e;U4^W<M(.VY:m[@1S
%W4*->Apga?keVuJM<n=un:Jo_n,@^C"cMb'[$o;@h4M!H14f^:GU0Z*4;%c07ai?W<'',7m`DV`$<E!;jm:JO!F="dcKY#`bYRge
%pX_T86>dlT*<j*hO*W*=<6o6%Mi;Cf9,/r-pG=\t,HHi,KAD^7K0Hlj==iNZ^1_dA=0MMM^%I"%Wm*j;asX'M%=7fO-kT&&<>Y%S
%Fhf-R//>d`E;Rue3gm_\ANAoM0`OcY;`7gl806nXd9r6cnhC*14#AVgZ5iSC:Qi&4=FJ^WpTGHC_)*e`E0je7P(pOBZAh\gS/SC?
%=\gfcbmH<NdF8fDJ&2E)?i(rBD=uRE\i<gI##XftYHjX8'7MZsb_+^**NCK.&OC,R#j-+K?MMbQ\XkE7+\*h\4EjS%SUtO^]JJ`P
%:r>E`K6-qs9rsYc=L+X6BjSIAF1$C]T0O(Yg&VbJ8#V-t8Tq/+7F9T0^UXNgk+Hqo?=^8W4!BK9U:Q4PQZi0<@]W`B?*D[Qh!L:0
%?<I\J6O>##R6DBVpE+to>"OB:Xof[!V<Oa?ZPcfO"BC6PGd,4/fYlWT![T#B8`p^<G,2QW,@]*GEh7T@\a%W<C4r0$oQ/lV:TN=J
%T0A$;n2Yl+^LJFNc89)(@7li$5a:B*63>=\-.HAniP$jI"$*+P6,bnW(:,b,q`aX?aL[nq+?QXW6W@t2@@>]Y2,9Vt/c;mop;'Oa
%ofaqAl@K(D:)J5pr<jK_,"rbMB-E`k+ni!(X@8%PNR:o`aFH#+E<[U,+&EKiT'gQJ0P7]s;]0&g2Aqeqdn)LJ2o1O9Qn0M`b4>rt
%Dc+Ff2$'>!%P>>'PubV(;Q!@4lI!0Q1tj6$^#A%c3#^?QKX-@PWbnhV2-K;bHQMq?<SD^Af@*1K3a:@("XGU%'+CV(QL2Y7)\MGc
%\.:3^:2"+EN5^s:atHXHJ^4&4Q_-VYDsi.GSWWUh8n]WaO51=eQm"L0?NkH6p`SUH,E%,Vm[b"W!7<5N[.^@sRp1EU7mH?nm.U.+
%@P]&P"FcZaKnN!0UZhQZiDVjS9q"JHeKY>Cj>8@Z0JceWr%Xn,"l<'YIb'E&%VT4pCJ:&6n=hDUY;fttE:r.5%BjIkr?Cm#$UI23
%ap68[A#9Ld2cMd*#m^TP5G0-Z#V!@2"UbbDUIX6q\Hk"K&('iBngH?f![&^EYricK*b+8-:oH_lKR)aFlMaEL.*7;Y&%@!46b"E<
%H;u<^*>PhV@Q)`#aXqVrX/?2nDK38`!^DZF_q]gfb6A'3Y8n((URk9a-NWKan\bON-p:qA=4J@o-q+Td_lb?)$kGV^p11I9TsH!F
%O")GD\rFWdog%S/nDh>_a6te-<C60a&LuuG6&7sh!:g&74R9:IUiqkOJ9"@UTnY6$67Ei&EL14^Ak0/*\9>2#@cJ3oLdr^)E8q'L
%La3h`MF=cm#!>4#OY?oq,,,fmI6_'@Rlr9VGulhF>H\TE;^chnI'^9td7)*>%Mg27MK!u1^=sj#lQRF.W*7a)>8s_ppahqSa_'>?
%lhk2Q'q<jD+-fGda%K6RJ:omG:dqu!!tgVg,R4-O7!fq>WTpKGEZNnZ1kLf(75crq&F>04Q:OR=-2Ws0Z/\]R]?RL79]tm:FrX>D
%_a>PDi+gLD2+S0?><q3NKg6dA&FBY"a$`=rQOlG2P!,85Q&6RW./OnW_\Dc@&MINg5h]rm&ENq75*+\FW47?X>bA?fq*:2Z]VZJS
%@Xc_gW8sYfi[uf`CCGsQPtJ<7oo0^p!;SbsZAgEY=jF/]af+c7h^t-E5m6;c?o;dDMT#l?A0pBsKbDUg5adAnTk0#;G\-J8%m^HB
%37(8uaWeC1eLubS0DYgj`JaDo&%F!_\B$X>dM?AJR=F]TMXEWZ_.3OD^!';`j&R)*,gK%^ka5i:.Pu7=#na21h-$I*,!44uZ!"_<
%o7L_1*T1LgGepo2N2Y.k,PYBAT2iff6\"Y`7d:1iI8rY0'YX(=n>a!m'BhkNYUR#PEtq=s%5]b2cDLf>druN0fShD\@g9753Us1A
%o#7-eJYH\)psr(o'Er-4DJX&[8:1RSTC@pqg;3r*B>8Y<7PTV`[o)3+pE5+K/CZcP\i2-b=?0oDbh_q<b9#sj7_#GmY*'@HXeQ*1
%s+aQ,>n[F!ZFpcO0K\)pn3Y2Cf;]Ica8Lqd(GZK.\>5jY18ZLk&VUK9/Q^"9rj4U!9>V%?9LB\*VbE3d?'H31AUHCZB/R?)Gu>(d
%"aj8ATN;Ro"INVD+;/!+/@VVaPk()H,/2l;h5uEa#G2/VC,7&']nR6$HmmbhREHtQ5nE"&+R_+q[,]fgh$6K/19c:QZ)8UGRXIF,
%Ab0*T:XgTAQjSq9oDtg[0PYn\VN-]?3^Y@BCmg_47R[?4G[N`Yk'9j@=mm0q&A\[60uT*]Sthl93;Ak35O2Fj5U#>U5lDH]:5R1B
%BIER,\cin`%ItQ\>#>MtVVb2qi'Ql,TG#%=RHGQO6&n-I,\cm9c2+`9_]9$%NRLVIGQJT,Mk]e4F:&22$S(lcHu2e)$L&I2UTW6f
%'D*RIXY8Oa#[5;lmWUo]6eY?>)01DiLD5?#NT@]:rWp*K$10Q0hh6Yc,PB"?$=2$d`q0QB(&%];'_38@Y&Gs;=^LlpZ!?e@:u`i-
%2?X^=F<EgLIf^=sNeSdU7"#hrS(S")3#;S"]`F3?l9(3-T3e1L*,9iMqd>I#LY#!$;g?Uo<M;K>R0kaC$ABAD7\m-\TP-]"1l1$i
%2@-JgPh8TeV#d6qn6*-&Y-sE5p_%=O[bMpd3Z"KnLG5Choi[Lun@#ie566YEEe50&(S5m8GVV9%`(BOQ@T@D,'Mp5uq]Tbl\<^=/
%L[814IG$d,UkQOPMU6:tesgKJO`l`XKXR&\hmj[KIo"R6DB$I5:k<X<eb1dBmDaTWj]m4cjNgg"q8Je"KqJbPXCt1b5E$Uq%&(UV
%MGSQ<ZQ\"K;23%:QfW=:!g:]V@RmYa5UtDXN)0N@;+Jh#7^XF)K^ruH6umF((qQO(hJLDkIdORKLPlp5/h#D1`ZcDrjJg(NI)gT<
%r.IHW%PM?_Ks%^.,C0L8!X-1Vj^S$OcLdpqJ]"lR&K1Zj#+'3-^s6#cc4oV@+;A$4C<i(e@P)%h.(L8:F7aRIjqKiV@00&=kk9OF
%KR)92*UQ<Ql3g7BA;?,_eT#aolAKtF:ZC(d#e,1Akm$fGnXj4i\2&65U[+):V<AHS7+jr\%1%ELB7%)]0d>8<+#T&*:`b-Xhd4\+
%q"Csj&.'2IAcXA-gL(<l(a(+kBM*D$=/7.EBE:P"U"S;FIOq;GOM*q+pl3^)["W1O=]p?".j0s_?D24=2-<h\TEQ(L'h(]25dcOW
%M@rX:Bj-CEc&F`3*32N;-F0]@p:COh*Dj^(8Os9C1`ib^fZ&-&%=hW!2EbT2;Bi?='TnRV-:q>+JS:mu7Y/UI#?6jXTerE#2AlrD
%abUhdaBkKM7L]sW*/W`E!<rg![QW?]p1UHU35(pEJ4`YS)-\3#PsH2I,HEnC+9a<Mh*"["5rq1Y6DklR=GuVQW:@YAo<:_Rkd914
%.QgaKpSb#f%(@JbXhdc"g^]7EaM]QP]>E$2q`N^/ENk.]g=UY!fk0p1[r4R2=$N@_a,%+%IJ4a$6D"#o%04PRQU*$KHa_@j6W@$%
%T%]XYUXY*e;]OJjVibLq*=$k1`C=YT-9UhS?sD$#o\&5^EG.e(Jj%lRTO]dR,;fq8,mN6NXbFoQC7'rBZG#7oe)7ou)]\,pD,>El
%Mh7%<?/*b+m"Bu9;ocm'hc)TKHF*uJ.)48u<3ZYgD7rcI#(N[196>;miY&7"['VR%8$(2f<UcOQp'U!A2hfNnHnm.1P?j8>j'@@a
%U77AGLTZZ+Y2t%;'U9=l-lO5Tl+:?K0-Q\4'9^nRe;(mH9WV_C:KF?aPu=)7l&%MbE8.-QlsXtC"EbnGn46NNN#r>L0fj3rq9gD@
%qXF!a:;a-\'r`5q?O,SCqNXB=_[JrUg$gL\>m/r2;;[L`*g"]6Tr.f5<n5C)G84,g%.mgIbtNZm']CoMT@`j<7%ID+/QI'bL[V5g
%BCcMX4U<c)Rnt"%;-\,OHe,*r58;l.hWmGgo]J4Ve@t<&D=0lU&k,Z(RM%+81IFsC!OZIa2HMdqVg!6Q<aN+Eo.JbcjN(;-XcLb6
%:gnN3S#=\76VEC'jUA!_S,H&/B66%o'P#c8V#NZ+n$41kZ<W67Jc6f?!_>Y#\GbgO)I4[;%?r3qi)h+"U7+=o#uHrjrOmT\A\Ro!
%E0%$CXGf8aqU?h&DdKIM%tBt9gN/c&p73,[AsUb"f`sku^ZTR=!fYX*n_L?2fQVbkY=?&N5Y:+'Nc@kq*'V*i`X]Ll53Fb'hdqm*
%#I0SeTf_U*.ZZKD>LqsmX:pb1[?1S<>bit>T'mYAGqr]8q_"<LLt(<COcgZU_D>V)SEh"H6a&XuaU<!d2h/G82I+j\G3=(+oQ,R%
%lsrbdqlV&&QKm.O%hahg90YY>>B17@Ub:<c29F37:9fIIFi1I[D2=Eo;*:@X&=p2GMC9O^aY<FcZ`S6oUZ0CchZr8!/f_5MQ-2sg
%53N_-%t?3\Z1&R'fOaqKRtQE)CZjAS)!0ufc>7/bm2<O;G\f8fd`F#\4efE&"M;:#Sjkar>^d@i\a)kLP+rkqP*t8eM:l.%<2f=i
%J2;!MR6f<<P:I8&N#I0*Mm7b3`_,rHK!MaM^5A0F!-n=C*#oQ`0]*bf8m_Q#='&GJYT>D+,4c&J36]nU[lGOVa%)-W>::l*,@`i:
%Qd0V8<c,A&(b_RB5d6%3<&t!OQ<\:cj)HiVpAZAO<4D?/eO6u6-I>d0.npV`=PuT@^CDAY!7H_LNS5VE\9)f3N:mZ\EYB$!b]:IY
%^,Gb&^LL!pe%S9A'G^CMjf4$l:!&WXE>@m<*]VZ1Y,AZ[cl'-BU>`69&Xn\&WL?$1FE3uE7,dk4=m^_&!i9B3+"b`B]^rA"ZCEpi
%n8^>#YRX.(!uGp#Aj0@gWPUQNg\[bfrCD_O\@jJe8kQ<0[Da.>]#A&U8D0^rWu/l)S9`(0^rU;CAg?dfK!Nb29!<]Kc4U#]ET8"^
%kK)Wad*i^!aBcMZ"+-HVrL?6I"&gj3K33q]3Bc+j<jWDNjaXR92ET&m_!<eD)#d3#2$D+o?t.Gu3_[2&UGX>-6>6]k:1_%c8V[Mp
%d;Kd_],p[0\1R^"X<tZZ^0>A?@eTOFRGpEe1e:;1[3$h<^A(uC&mBm7QOeXm3UA+Fk;k0hnr3XDD\OM%pu(;E)*qNH)F%X^;i&k0
%+o4\pKPfrfntJ<D`r_tZDGsa=NH"#0o(`UDArcZ#gklS/nVL7A1YWiccp:_q/`N5Wao4aTq%HM9NrS*`TW/dmGd44e#S/+^S-Le+
%WX.I@;"6<Br!CQ7K$c4YO?%Vdn_CQde\VWM'.ojC?rDD'E4q-KJ&^"F0P6f]\-@$*o%KOAaGK^VVX_Kd9P-X+]NA]+_p:sVQ4U3"
%&_pjNcWSR6l,S,H*+B6JL)+Fl9AK3o9IC+R*=2^E<kpJAi%sd26D7_c=k<^s3m9*FQAn^2pc650CC(1O/Pj,riG.)_CkcDE,1EK_
%,hR'saZ]tMHU1L2mf=.a?Z;^Jd35H<FJLH&[.^5qKD0nF,hQ,=P$4bL5NcG:N0"jd;lbt+)Nng&N'PK<R.fmF)qcIZ9U!eJ6AlqS
%E.]C\hG@:@XG'?fD#"5'@Q!t+P0j6N<+X_PaC_Mfs6S:GT-U6FF"<Qr;mYb<^a$hRR##;,l^tUK%0u<)_Z`qhLG<3r)!jR`j*m/>
%RikLZR(qb1r>g/$E^.Bi?K+cgqK$=2WO%WQCj6iZ8q`47O;RT!T;E<e,J-p7`TT[!d%B$C))Zg*jiIb/;fI*_=:<e7<?&O72!jD,
%B$0PYC4&B@p@'5oAA^oi1q!`Z\8N[FX`DEFisA0)Jpb[H'graQ%8l8o2uTf:<g$M>Cl;RsM[282700jA%.JPl:D*eLJ!_l.R27O)
%1:oO*)),XG3/Zs@>YIGJf&hsT.=Es^lR7*Ck3&gVaoK@X;!73pV.sBIP5#?g$n@h`3Tdf7"d`qWT<K)l`;<t#6dpE[n22s7J4YXL
%QQ%#XIr]l!r5bKtb>1kP#.>g<cD,iW%]sO'i.'K=kcTk@BI,X/9nW/*Y62!&(8Sh*AaG_)eRqf%fsk+YIa[=*OJOsHqV@Db9COYj
%VmZ+pg,!TX9]K<<Nb%D_P10&G<(bekR0W\T`QUoW=:<Q9MRX)??&@,2d>b,a[&Ba?9NUJ`b=((1G[\0S8ee:r7spIu^nE#K!>%L8
%ReVS-ONrp"qppdcT)#fQ`bON.m+&>4B%M^9b+pS`EYp^90u`h,L;]H2GD#u;`Z`R18TIGrO4J'^RX*O]Z3EYIi1mOaqC0/"Aos0?
%l\8Y4bM,JR<FhubL<O"gEPW9;_1'[W44BjpVE"l:3.]?&XuKKY#?cOG2H.&G]FgFO=+Zu9A9P0<!W!t,V_LDI.<FAAbO#`2NTGE3
%W!cKl^Y[%.?fnYD`e+S)Ks!m3@^.OZ5T2a@lB%F55Qs=i=@3,D\@'SWJk$MfcdqjNUK=4>Ou7k['m#$A6.pS;ZJ^e<e\T]6.aM:.
%XVQP7aEf]QN.G%c?VXY!0b+"o$?N;[]j1Z$?N^.F;qh&%LXIY9TEXZT4!r8LTeI8sf^Z;IfkRBm5=s,DBJX1cFka!?4`^?++2]^b
%UHP%od2A2e0e!/4NS60$^;7-c`ofJJ-b5c*AYqGe-pC</MnUT5"4O*+=hK8X.)Y5)0P@cBj1[os*AJ$#8Ql*LGZhP.`!+d90CgBf
%]nNB@DgkiRXp!mPU1&f,Jj=!,<PIDVRk6c6qe<3TkET0+[J6gu`@O;`TeUG4oB@Z45s7)lK;d!q=U^Qj!/@/!`H^NR5=n>>$ON"e
%2jfcni6"&Xq8JW&_#tUtJi;c$qhV.M7n+NcJL*k';!JjlIZdIDPWt&*LpCjM25i4OS!?RA;7M8l-)EI(prY.*K6!j+[*emA>7K^8
%R)ZhQSf>$pYP6k,jNnU+`(#-2C??Im@@?goOT+@,P6@fg;ERQG5[a_-Vmp?8-E*YOC)VUai1m/YSU!:QdP(QOEb&8TOp)Wj,k9nQ
%V86Yp_N^tZR6$7HD,2\_2U)<"^Q8(Okfg]O?%/I^)G7,Z;q4e'C"*8/JTOhb\12N\4OqJkpg2.UI>Qb>L`fYa6<QP-rePEO`IM6_
%THuQ'bVb-5+ncd^W/-sJ1T41`K9O=E?=UU"KWgho(r3ik*E.H`K%jZ6.hrtr)PR^-CC\'s;aL[(SRYKV@<04`e"Tu)Ro<@-Jj%+e
%D8SO$\%[>H]:jan#etqr"e,UX6a7<gcQgp@9Mo^ALku=EJ%@Q5kn<ub"QV`?]g2(?94U5K`o7jj2M8_aL+14H=#PDV9TJ0SLBoFZ
%)o*HOF6][S87>;S-i)Z/;T*[YL;arZc+$Ll7*Nli:YucqJ+mq"2?T"M?F/I\T_s*i3O6PR5uF.!=p1/-.V9ej^hQDc5W8qg>5p5(
%]:lrK=pIjt+X#SPA`OjX[N%/2TM<e>V5-,IR37>ZBnF<*9+rRMgb[C^6T1\p`Qa6BP,Z=&/76LLcQC=\rT)bO5Q3;dKTI"6&f4q"
%`a78a,;Uso2$aF@6RK='BC==sW5eu6@tFptB#l9Ya>7O3BHo;WaUDE`Qm#NJ-dUpS]*:W*5c.4:G8"tmn+PZ;e#?F.9c1GZ<^mni
%+$]Z]+l^U-LY1CN":AK[$L+kKNeuW6-1W\Q@g./QUk%X$fk'9PJef4Z73=tE6NJe/e7&=O/lW1B6D`F+GU!%K.,pt3(;>kQAh$ER
%81]AlkbGEDJ[`QB_lgbW\UPh[U>u?'ejgs=F2e"YE".bl7em$&V,]A_cg4PoFIF*4$3;`k:+`5c&$ngGesW'!@cpHI?)>DY@fAK)
%:m`8&kU>F=GW+Z(-.+[t,NTD#(kEGOOPu>i%(m.F6pN^4S,u@JZ7-Ce"K?*$h9JkN;#)Sm1#W@HPlfG'd9em,>>,Bp]^,^_PAP@W
%)\d&fWGg<V@j$h&`%6?)K;9TX(Hio!*&\IY+f/`Hin3f9@s,UV$pT8k&/u>m^`1<7@P/Icm3522g9\i=5(7pt"hN`REO=>j2co??
%1P6F=3d;")7\NNr_eDq&n?Gkg#>,?5Wr`m00W?&1.`D\,8Hbh7+uLU03HmanY0G2XJ^XWW6(A-PP?Lm^,tA@A<\bf>g0%]I(gJp1
%PGT:([%+tBR5eh%1%6hoi-5t%*7*OQ^>MjTUVURf_F"[f(<XI1Hn5]K"H)ogXpsJCGVsJb+'0D*IXhD'#dXW\j<N;FNU.%I!-KDg
%J-`T^`6V-4Ldp%e>#]eY$K2E-0X;IYDi`a./6h>5<G85Tg+SM78Z[VOZ9[*!@>*JF^eYXJ?7uFYn;Fa&)e42-i!?IZGn<]Dj_LuH
%^t[CA6h5b1"JuPcA3/g/2MTbZn9$]J$PYQ&'XWVS)&.L.jc#)4NIV.mlTKTb\+(iV1LTuMOjum@_*]EuW!d]l;M9-=WJE\lb8?DS
%p%a4aV_hB$Y!$3UPr]#pBRlMVnL,9X_cHqtdCN=\#>S<M7GE<t&t,[3i9>i%L7s\pSh(Q(WSK!)j]NZ6C)9j;a-$"n!c8ehM(fW8
%2VC'?%8u<gMl"taMF7fsJATEWQSEsI,NGiioJ)8@X>7l>RCDO)>EEZiq"f^R:cWhYR=WL^#r]G:`fua'^D2m>5TRUsi8E`fkX%]T
%#^loV`Q0I)c%rWF;\Q>AV[))iK\TFrNA;Bt2_:Vn]O)USK)TtJ7B8RpOh#`cK!dc0[%u_s32VWf<`V5eMA6\\%(-lJN!HkE[Y9<1
%-+iHkY!+@=B4$/r_>Rg9!31gL&M?!.EOC]hcZQ4LN!-aN-sVJ=k`)F;OUu$4)_K`u*&?8O;aR$23P@n*=nLo*f&Mb%U10&)Gstu(
%WiD)^+P5CuOd7*F_8rE=@?Xt5.>H?MeGZnOZs!e,i7\)>i-&(gcq($"Ai_=qA2:/SMHuRC?snS<,,Lct3"J0g>lt[hpIPohd#\$c
%@i!#75UobSQZ(TabPRH%^49CgXP*Xc<U#TAI%o7*GX>QVXOGI*S^'N%Um-G!<`p-LQQihL2^YQO+<fVcpi0d^bnLl8TLKlZ01%Ke
%'!**6'1/uS6CBS`P!V+2Y%&_8D'?cCfS6Ko5JBr'2^YM#;0f'L@sk)I,"$3iF^1>.,IJ1nSR=5Z8-,$tW*>kfluBFq5KT0V//KI7
%B$Ai+"MAW!GY*,?FE__'U4EL.;[)j%TMXsjJcO4B1T%,u)+DpQjENRl*DhSuc[[$7_a)?0eo$,O?>HsE,9"Esf/FFW?oh#4\L>QX
%!5PC>?KCiPLiH%IPgWOB!\i\OAkXYi0&QrW9P-u?b%^Oq^ZkoU="7;6o+Re3;]k&172`)rSm@d>Q;J+?_PuKGLlPYKAlLFQ*Ks_G
%5DJGu_"VF%Ao9qI7/ir:+d!Fp:(c3J=BM5Z0ba$"oSCdp35U0_T-%n+04GYBF*PLcP\>6!%u/DtM`P^:<X82gUD;7X_'sQ8RV#5;
%N"@d%iG$lW%*2"@<'PG`>:kT@#uCgW3Y'A.kjn=o4g$^5-b1jST/0hF,RZr;]dTF`UXs)l>8$L[nL3Hj#+phUB2`5L?:G?c;32Po
%J\e0Xn06j\YGeJYK[Gr3_Pl&%c&HGAGn"k2B:?E8k%n^M/Z=.)I/]D9kLQgW!)015dU3A@3\LhjAA0b\6qF^2ZF)$"#+O[/M2>79
%.['li_sqa$!4i_m#iSXFc'9&P466LLF1H4%)[8hoW2$9@dl#ej2"/#=#&[kB"G$go`il)M?)Tr3Vr9eB7WIp:i%kkbh2_ohGVn4P
%!k18>C7_hAIKOcqp'`)S:l+1-GC=rQ7"D^B^&04cd2S#@koJ6r+CaFRqSo)B5'Tp_fV21q8Z8Mufu@h23J-+Y2&)=k/<_RaQ\+NM
%L]OTdC:HTsHhOu'aIhSJ6mQL*kpJfOZe.?M.p*I=!YM;OCf\t5A;hc@NAh-VXm+PiaNRCe+Va6C8g8p&&4[iC0n*_!n`lqAEZ2%O
%7[b_4L*)Z\7/Nk@(7XD-M.)cs0o>Hnp_Ml0_Ca_+(h:i2bG1[';98fpLu*7<l'W\,D\"rd\E#P/U]ZRKLs](jK1V_:&kdRVD;+g2
%`$/-3[k(WkiJ90)9I(h@HGetL&Xj>]/Z$O*BR#A"fn*',DH$m>A,?=t1Iq[3dm++_en03]gk;+bZU`O#Y_urs_OM<oQP>P_M\iTS
%-gCc][Ji:E<VNVr`D.@<>Y??)UV/5L(C+AaFl+&^##sOVam>&o@MVOnre+`+`*$Kb&IjIk2:l(+\D"t^?C?kb0"BK#:\+cV=b`YV
%2O\gQ(LbQ=&>tID?]Yt8olM<;VL<8sb?HO:UEmea#f<):Oml<UJiFK<inGr<g$"7^VU/\pkV_ns+6Y\rH,1le=kYcFJWV?W)WXR#
%9[!rPEm5%;hU3X!Gq'UBZql;h719Pr,]^e[dLea>[hUVDGDlffC/Ns<YH%ucGltY;QI)2_$XtpuLq\\4R6chePq5]AiL()jJ!Vp)
%oLB&s[h[fi,K57*5Q-3Pg5!cP&Gb=YE,N"^/UTY>rZq>?_oU<>SC)b/TR^J4gjmr<9QMhfSE[mQ.90(2j]*(31]%i.,j#<i43U\*
%^PMBc9^!*]0koK,+[eo/+e>,t8VgJU(Xoqp"eYl:+d>V:r*R.A,`qP05g'-u8_b&FVDdb0%]YC..Clp-!NPWE+ouo9:1On;LmQ[X
%LYl0@"Z9;bN(\+EWGh4@4egNkT-M6c"7/oV,Ac;*QNOe&ANFsbj@Zla!hdV@'e*:uaa8A86'ZqYI=6Lu6O-UGC%=l-m!rK$_RCCH
%o9'R?LAat=n:7&=iK10MNu^(GbU6%?#6kM<p<cGD[DaE=._pR=P8AjN(%!6[#+WEj5p\1g!AZJOreNmE%ULc5h.n'IhSt)p-=2B;
%U7>=fEDhu)HGno37Me7r;\Dq^AV[#D8n[uih[*b<OVBJq4XU`4^8C,2K-+f"4/gS_lef0ZB`snfs/_E(E)n\A!J27F5SWnESf8dh
%>,QV'4HjM'Z\Y*sm3&\T@qJ81^bCA^@2H&JN?*$@h`s7KjQKc$Tk2rbBG:V\:Mj.@OEZ][@Bk6Ab>%q<FR]?i6QQ@KAaSUqd$`)0
%(2k%\XV_P4'/F<u&PiW!ZZ*g<D4Z;N^n9>',/CB$Ym,HqLbu,f2K0R>'ejNTD#BCKXq(''WE;-aj>IE6[]-Es(l:\)CCpW:n=GX#
%(bl5LAK7"PQH(qWTgdd3fj(S'oJb8XgJ;d$:hTnM8Bf$Sk5[J""(^9*.s!U\hF\XQY2j$;&s/Eo&e)#a`'?nS?ebpH%$q9c)m1L.
%g@mnL#LlB`E\4%$%-K=kTD^H2<Rp9kmDcjb@$->c1+FET7&h$nLg/WY>"9U%If5e[(sj]Q:>BR<PKgrK)gkO#,n1!;cKf1\Or(?0
%?llHbot[f24gctX[9[=8BUG7[#!OZKok1g40q3(dZ6^_RB;t!@X"4Rn'0R!^:Gk_p"d196R1t1mZa:Y72&=eq'MQEYD$8p3)CP&Q
%]1u=)M<Co`DR>$9@i8[8Wo+BgT0fjYdM?+.7W,O4'9'IOS$m-D+0[_pK`iiAHnOAFBtKq*Q#5R_XkIqcQVht'"7[tiD^7KSrT+>B
%nS0"Y%\%j$M`n_YG,$0@E"0-V#G?B-&rioB.=g]PV/*:R?Kn]IN$d]Yj7g2IfJoU@%[/gc$$Uo1'K<,C&G>7\Se4.5'FdX?UpeX=
%OVEI;)6gn=8PR_fBlp21&RBR'E#HJ3mYYbR&93XKO_I!K,3H.IPS7^YdM.*`q\PYL$@<uE:tBLu![U6-p>KGbMiZ&prEW*)Wg_(>
%Fbi'qefC\WUS^/Y.V4u_9qoT7d<\XVXl&1s12BZC>=bNgBr;,-OkITp$n<AlFJoWnfmB1<S]q/9Lu/)bk\V5V8!2sUC=.8f0]-PH
%=<ljre4<LBd-Ygp4+X7ZjZ*3N,p4I:Q6`/LdQRZiWj*`#qu*5"R+7`d!Lc%?f86k3eRXa_O,XqfQbZgT(p#pmonfW,DEH6YHY.Gs
%1/q=dhC(e)SO#f.WouOW-^G4#&HY=[fR8B_RHO8-#*G!Qq^*T`4+^ncTFiRj;<!:Ra<bbV2TDYFFtEc;Rt9JqW38(]&^d_V<m)c:
%7>/TXlmM,+$M6LbToh1S8MEtq]!#eWrWTrk-l3Gb;,Y?[!;T@("<9DjAHO605bEiF,$@>KQmVmV).En?[MMJro&^epOk)uoaBcST
%3'ObQ0S7@d_DJp-Pj)2/X'Ig%/cZ*1f,WF"j2upBXXVYj12&WYETN"BK[pXKnKf53+abb``j6_ZJ'T:J^gDk$#on\g(OK-hdZJOI
%@G.u1!A5E='ju"ai"ZCuA1j9j!#hN%ke:bGW@9$UW/NVKg_];Y-AGWpk?piS,R%HRS/_@B*YfNo!#YH5bM5597NS/.r1G'^_@)#J
%WWh"$p:/bqT1(u^iM3dg*R\.42o^26WDJAl'qp!p%lchZ+=p)MGkXk9g();OhXL7U(<Pl*BChn6BL-2.5@DDsZ.(f;K8Ltr!oVL9
%"iqHk<E)?GeRk/o/#*<"4cf)aqW9(MeeJD!$:DX4i?=+)K#TuqI4D0*g2@?<-kUG=a2lOAMS_fHf9/js/MZ=Tp<.L5YH,9ufF+m'
%qINnIFc$Fd:hb8H1@^jL;M$M/;0`ijN=UVgDMmNI[q=M7k`-K2>?=IL,C9giH%num]DtMg./BnCc%hAYd<lq#`Nr,X!b2$J,7d1f
%Ns.D&g]Vdc5ahoT,ePX[igOS:`0cQ'bTeT%mL&j_!4XC>BReri60'G1K6#hRa43*I4usL1fSN;OXI.F2dqj4BN/frC,[;bn$1F_d
%O@YYoA4,>,!,SKFU(2ah%'Z!r>5Q)p*0nEqG:#&NF#+X24KhP1B!X?r@GhsQQJi'dd3=GXl2rGgPoc4Pgsmeag-D5X9)g%9SAUg$
%(kc9Z%3f<*87>!:#@qR[Q=i%iPbUGLEf^"B,,jH'b)VFf8lo2+Y.lT9b/9H3ZQHtI,;UfJ\2QV?eL9pj!Hf@'SK&+G!K'L1/!?83
%TZgpW'HmsY]jr*U`]/n$(?u%!4n%*-F9)#c%Nn`:D97h=#9+E9;Rs;IjFokhR?YLCEEd"q%j!-o36(pM5#7Sd8C@flB<.ls5AR_B
%_$@b>,(g1>(bT$E"_9/5$o.l_hctaU(<2AtnA1_%0rZ3I2RkEM%@^HW+ECq1I>M<I89VG4g"6G(Yt:FVD(LSUD2[]PW]d@ScCe<#
%D;+#b-\!6&6(Pj8W//iOSO&3,VhJjOpZPS<lE8-IKBQ<fZ6;0nLek#;Y=%K<JWNFQ^ZhL&QXpRJn@&j@-uEqLjfIldX$e5_>NSF*
%Bog2FV'huWfWnR&Y"mD]bCHu&Oj@REA0;LJljV'H2\R`g7FT(RRt4r9gE@sWW!s`-Bh#RUi5Vpi.X'_+)'.+MVAp3>/]q4KjtnY-
%J?hOFkVGG+<Eb8pnu>A%2U,*sjt,3T]GgCUV`IW5Kgi2=-p8,tMhRFr^*qs)Q$s5lDcN]Gp1dX1Cm)r8T%1oEJj*NMK/(528^+0A
%4Lnp5K/t&V6Q<i`/@T&ZlRV\k!?Sn.IOF%c#Yj_YA`K9i5W4FWYq7fT^j3*(rQ#1T*eN*7gmZX`bSe0+$=l"6a%f#1Yp>hA)"`\=
%ZJ8%-72s`K1A^q'q\h-1bY]r$(a<p2,i>>s1-'Gt'nO68HTW8o`l7WVYpcJVB0dnOb:'HXU.Q*7T]ORZ3`Ta"cI70TZ(Tk7F1Q]_
%\/&29,E";qn34(E'o'nj/b7''.ZIZcZ2NH$6/6(OU?nVQX'/8"[<"6a33!.V]0q"]/Ph8F39:Y.pHl,G6^Fo=O[#4JV5cLWm0UX(
%+V#d6U73:Jiq\34Zo,7W9LN$f'"Ao=qo%92)m'->$O1]Ngs4isBm;E>&iTE?`UjIHD%ZBdmH000V7g&9F+hOf?S5?n#J9U\D(K+^
%'hpF05<\E3e)E4&"nRm`pt;^e5I4,:n.6Vg0Tj`j'Gl(u*<,41-I@%='gC6J7PS^):PUp(^FV^j's&07O*G.B"^0C1`6PL`Mb$ij
%;XU#:1jp,C&2SG>Wcu1TjX&NlA!T;P<i+S5idXf4k%rjO=al3r(Zq=mo<nll/`s`KT"-asSfRAjVKH:h#_+Yk].qbg4Ucr`"B8>F
%/P<b7NLPmaA^3IA/q'G<.1Cjq^GPSE&3GLe;,%[QCMJea:MdS.]+FaEs3JI[bCBH_+92#uYQ+Ifs7Xe=nc(cM(XW)thuD;Xqs2/W
%r8k\:62Hptqs2#rjnW9`q>^EFJ,=`pO8o*\s5W#:YJ5M\hsdWF*WMa25.;IaX&o:QIcN@-S9I.M=1(0>m_9=acWYcW@WM5K:g1(K
%*EH;dED>hT:se3EpY`(Y_0Uep^kWOi=>89=$JPg)V6IEKof0g3a@o[D/f"bE94[NB>Z05D/hS46-Qs:254PrpE2b?uo#[t1bY#oJ
%,gDKfQ>T>=R#lM39_*L?6,A.QFP@\iipoFBlW?!(G"C&bGj)(6&;-XU4Qc2K+&CEUY]fgL+<`VA\u;;_/-G=]5C`qA-+6sR7fg+7
%8qdFP6?g(q*,`,]>gQa[M&r`0WE.(\&Al@@KW'p:j5e5]X(<3(LT;CQXG+o$M[cqliYP"UIB3'n3Ah+OKB[jIJ=IBqJ_Da`Os(O?
%+Ne"D(_$6dXDVSA(Y6k:[<@0f6u*BRU*B:bRtA43(T-&9)^"i,F]1XT<_5#5ESf*@eMdGX[?u@G#!+BC:Bf!&nE7gc"Z?8PhpP,a
%e9AId-DdW8R?)93aqHF5ZV/!:#Lc_ugSnHhQb,F'c?t/cF'c'Q=XK_CB#Rp)lo-`a]VU\`c-(biCIf/i@'^`uB\LcHeWU$ElcQP"
%g"9>KU07Z)AjoPto\gY_,0hXf&AC".O+9nUThj\&C5*&--/&dVCqaW=I`gDkKfO1I_ZT,P@70u/2Cdp(,FnBIB#c/`"LY=*?TgQ+
%j%b>+m./+3-;;f))%(`)'8d&!#""s_2+N596/teI;a<I^ZNY96e\5)]lnn-GN9YV3";\cPEbhfia?b,[g!S+3J*=_'kY&,ANFgqt
%.ko9N(6uo?M-U;4VGno3H?7[oSqm:CH!2c_^@<b%31E9U-_\'_T:3A2._?E/8rJkganU$I_%WcD6ghgt7Yl3F-AL[<TO*V)0/fGP
%s5hg:,IFSm/4\2b8&75T6Mh0^pu57%^)6UiHp1?d7F[i`fSJ-2W[kr4He22&N;Mf!o_P&MJ(]f6)4P/Pi8tnIO&8E.(U=5'0Xg&e
%pOpCK@Zi`<[\c@(*;48t55kE&Xf4d%WR6uaOLE"S&]olG_G7&oAE%tXp>0UL:#e[laHf%3=XHT:bN7lhB=o)T&&REMa5R\R_8muI
%W[J>J(Sa%.%L5r\W7!0"Lm]Zl$&O!VlGiP4OmUh[p3%AK2*CH4(#cVo,/gTND2lIoWIt^'129Yq>sRXr-GC_QR,a#Q<7nqA[S+GN
%gcIO_*Lm0k9&%uLj@Uobj;;INqb.<KO*rV=Qp,V/mu^kOlFY$.pH=)E*mS^:#%.';?oLm*CQf7I\I,L)J[0n6-Xbj3G/6OIUY^+s
%o[R>M+f43;,_F8bOjP*'Ol=7pF?lCqC^B-D&>mS$eZedR!Dt>_fceA>0-N_m$);l7$'mmU;M]a*Q-VUl9\uI.F\39LN;L%;jXnC9
%5C`%J+MuI1kCD>0VoKZC,d2\(aOTcspu<f[!g>(kQiip._Hmg'(k<,g0P-A,g$No)qT)Zlm!lZ$&Q.kr5:QXf#T"29EZF/Dg)&:N
%*nUY;GN\`,E"HCjSg)Be6T6r9_SZWilk1r6Zf<iA[&0tK/7krWA.iZej-9Oj^o%:\8`'uq#;cfT`s6#KU2m+A7`9ud)QIki?;#K3
%BKLpKB"&u]Re]=mkScS44/Te:0'S+bq0D.q<la_pU#5dCidCf@7;)m;Aoir\K#E]63$"sYY-U[U[-7`_qQ$rk%Wjc&-"F`W8$l#1
%]JF%e/!r)@]8LKd7a+[/3(4O"M5)QDf)sf##hQn&c)c=k!,40kmC(L0Vp_Pn:`NarcZ'nk#O0.&E'jQgVP*N5S=lVM6TB`t?tu[L
%<5L'qfXp5Qi<5"c+A$b8Zr;/,A7$l(_MR<"j=]i:$1/P7M(8l[A9J"Kq*I'7%jDQ1/qjs"-:8R9dL#_]cDDa3XRqdt9BjqZ$iC2V
%Ai@fJo(l\&PYW,;OPP\BJcUpod_,HQX!@EdTO&e7J;L&fiBojRlPA/K'N!=/9"[9gq,!u1?ZO11U,76]M(&@LfBZ3VC/^DnKnr(L
%";"B>&Of<n&+f)cg`d)f:LMg]Lo>oU]8G0_&QKaDK]OJRO?OSiV'_o:c>OlS6UUq^20[%1&5f1/PDJ37Y9XguS5:`A9;mG!'ia8_
%&dhe-aC)]C;!bCOh5,d&Vp'OO:^,:lAg&3`^,Q&Y/>7U@#f#95b_'s*]Y9^c,ntCm!N^E7-qjYqU@[M3X\RrDK_iE9!l/<Vd\)C5
%fO$NDW.Ol,mD`SZB0%(1OuX!QV;^0#5S:q2b*ND_cEXrR!JOK(TYhiQMA5M#VT&MUjV%VO'[Ai%'?\h1n8T!7">Io?&l4359AE*$
%'srUMmRfU8$f0sjie\A!&l8@5\<Kdj5XMHr+eL[C,9QJ*'?@^iaX9OZj/%,i_B''S&,DG5gU=F,T2A40+e=]d"VB%5P=;GuL<$cr
%l!6h-$k@sA6TVJP<%JROej$:^j-Ola^2u^ASYYuJLNl.lD)f'TSlc;$gA82=6_2MN_&J/Kio$bNgP&QMgj1pd-VeY_b"XiaF:[_A
%h'&:R8TG_SXmOFdSP["W-92mjWW1M#T_N]p6kEJm;;0!Q'"Hpm4;$5s`Co_hptZQYib;4!nY@h89CYD,0bg&DiX&12blj?N;dq'D
%V0#=)i%,\m$)t(M4+!T]0GA:=i]saCFsWb93lM5OP#%gB>oNR2]9H+8pIXcuT+[>K+6L7d=rk[;naq8"'\RUd?&C"?7j'ESnWXZV
%;1<pqo9i@o^1<6k5\^"<&lALKWEgjD0ZgQbj<gNd6Pma_&l>5DPCHopT3FPmk0q:"!<k)Jj[)5/YZJN*J4_5KlfW?q.&=^;F[\@p
%'OePahJ`b!5rf(4^0!#l'ZLYr#8FuT9OaE;@_DKY!>X:9pJO1D[+p?lg>ru5(;*AY=:hStA%Iat/>:kY8NmU+M<4QHGU]7=4R/7D
%q1MFJ`#RpQIp*l60*1`o!JP@;:!pI<5b[3E5U@hO,![\?2_@g@51JiPQeZQd-k0NY!fF`F`QJAu-Rjc:,bTZf=jQXFK[:e&`VoH"
%ko1d.4)pq;Db;eYdA&N)Ig5n-Vqo"Gh$53qbjpYaU)R>%S`4oGO275h"S>52XOSB?6\.oU$KrP[6Q<ag<RYMUYL1I:MVqLA0KKjS
%&DiN0G7Nj<OTBDH7n=.c8&B65+[&Y`fmFC["4>nn7n=.YG2=/]4eOVnq+306LKP0/jW(fs',^jLmf=I\V^X[)&.hp&d*+LH`8)SI
%ab]5%$eaTN&*kfBi+[Hhs7=C8dUb5om]J?"fsUEnMb6uYbh\=$^NhZP[;`d?YlHlTE"UW1mk?)OmU88AZ9kW.gfkiRFL:Z(0:;sF
%(l/a6L\F'enfCt&jVMYs_jIKYpQ-LG8#\rO>.1T?HZX10i_M5=mOYD6iOtGV3lUhgZ>)f&%U$2pp^UGLNq!Q][0Q>YXP*umX?&lH
%G$24Cp^UFa,(,0I3^rfR=`oVkSRe!Sp^U^i,('V;SmjZ,G-t/mM5-&N@f00SkTm<#ORFHu7[.h2$;\jOq'E5Y-a/OQhaq.6.,RU&
%NEG*7f]M4b=^]?#LVt+Y^-c@hB\uBj*RVT,@Z=dQ+gFM@Dd)4o?"0A!I4'ko$MU):ed2&A,h@eHSKuc8jL7d`&b4U%ed2$k''fhu
%*<L!Zr!n98!e,p?3X,EkJTV=p*<L!Zr!n98!e(@nSmj_c[uSh]_9mmUiqu^hkp3K&bjQg]7aQ'n#Z&X=q'E8Z,I!2qhaq.6T\i=I
%NR6SZeE55N3FKrWLV+PA^I)=ei85]]:;O\N?B*Up+g4B%ms9tCH?"'1s%_S='`C+O/&hN`dV8mb:X\MB!Bd0C"TT'IAb!N&>+OZ&
%LU\8m^QZ15ptm6t:@Z)_\2rW!LU\8m^I)7cptroAH]7,qeI`'JfQkDm:2GE;.@l.B#Q^NMeVF5YNo4Vs0Y`:kGD+Kq"F-)1,6iCU
%<[/6e5.:93B,4V=aW[]S/F\a$,8POFW`(HfQW57EGfZls$CmFWB,=UH=PubQSUuD?@5YoQ-YYHtJL>/S$4-(JC./)FBf-0OZoWmC
%%r!o<JVUTNiP7fa*T=e$=Im<[LTh]U^dD4`E8\QcVhi[8X!9<?nFMGVSbW0u@lfII&J7-^.glY9cJWD^1;BX8GGNb<,']8O,:%Ms
%<[0<.5.13.B+A$!as!rXB^h*b,;aYdX&E\NQWGCeGfZot)4VK<B9u\td,8&5*O3GE]Gf26PIqgm_3;Mm`<UU421gCk]GcGj?CdgC
%LV0qVi$#6mFRUQYNp,CEYE%i)+g+:Vn.8YG3dBZ$,Q;a<lNe.E$p?"O`]kYB-ZM!FKI:as,(tk1GZp]_07!42H$'H*T&eFX&>%t5
%L_HqPD*HgE"dY[!aK#n%4QP%K'HZi1'Ic0*PlcXeEFj^<BoP?j\GCZEE8-2WK@33nc#'sC(mr@J/`[Z:J5P,@qgLBOgT0N"L.$d[
%=BSfsds'U20.;8)\hJ@/[Puse7CEP;"Xn=<ScomcK.)!h'HP"2^CW=I(W;SY?=sV6"L*`aI8T*-%2.=JkafiF_%i)"'\3?d%2<4M
%G7'Fo"`hVCVhdWK5uidWgRBt2Lq\X87pmQPI)o`?C^pX!l4GW#&2aIbTq%Nj8[c\(PK%VcV["Mgbtus1(T#t9Pl!D!?\'bYm>J5`
%%LikmkFI*+*QK6s7^ZA;D$\BPl@dTpT/[0Cbg\]^T`,!)PuDMs8#JbF"g^73BOZdP`QJrh[0!TC8$^OAe(Ls.GHJBK?Y2pr6^l>A
%549e%oQMXdc\.9bJ250B_DVXp8Y_KCCGs]]N1JIe*-#FEOTM-S<\88ak+5ZLdu1%5Q:"ca1D#FL%W,l[O>"Qa>5(@93Q)I@p^Sa+
%^5K7%$6]XE;``#C,9.muhf>&-#W;U3+Zs9HIbjmb#hjm;TsG$A>.,iHo-&_t?JY[CGfZQ&Z+nu.CE&cMZ!N<\%8M[B_SN[5EcAM%
%=>!%hk#M&gM]baq5R-hW5HR]?QO$cOTF+CV]*f4(HQ9Y$ZV)EWFbpCSXNkKCb5&Q6>d6pEN?8W2U`!]m&jVg4g8\LN+QP!PFoDq<
%UdY5:YOG=8K$^_kD*WgY6IJ_!W;J2uO=1Z4?f4KYTdQ<fOYWlm^#XlAH3b[9lUB!^6OJY_:1?b$N)sHoXTH(o^5F/YJGBA\*5Y*2
%\+hT;&/nYqoeeek&@ahC@L,O80%hMkEQEK`E:BL]&3-ic[I1[X6>6[_g\3=r&4Zutq+1o:QSc1,C#>NuBCSV!X^hu(Sok.t;?ju2
%JJihJ6@F*n4J2E`Vh8<]_asi:m-Q?TnG>M_P=ZllZ_U5#<4_cF;a*bq;I"O8fCu2,5j24UWSbQFJq/_l\9Wi8lGoJ?0SY>g6<[8<
%g-qWVnI!u^SjcIg41%[G.7-MGLBt1=Q4";CdF$V-&4(gL.jgK+K)/`81N<.q"SEL`-HOG;"SF2J@+lYW#[j!IPS;N>B,)C]QSQWb
%;Wts2Un!iX?OW9!#id/)ooML*<^a.LH1.A+#P(Lt/`dP6.U0WO6NrL8c5;<V6JS1ma/_RrcZ25<-!M@p8E6V3/A`Bs[&>.+0\'I<
%2Hc9V'``'I6Pb6)?<-S8s)bOp2motQb9AbV5]$<a(3O=s!6oZ-U5E7\g-s/YMP^X$/j!T@k7@8*5%N'6*3r+BCmVF5UB<ICO@=R%
%3LOuP/-<D#gZ#%\!fDEJmQq[(O/.?55,<X_k6J460u=hhm(D"aTqp#*ImlAC*UJ^K;AN\gA?6iXW1\R9M\#F95HPFVQRl=^U5W+e
%V-V6<I[qG)/.Yn%*Z6]9%r"5Nq7N&1EQB>`?Vdt`F/UH`KUK8!].=]U4W]alGm#]`bR=@?#pM3-<9M\8&7kutP.M>pW/V-33E4A2
%2t(2]Z%f'MZ'-$YfE(prKh-/1.AZG.9.>PfTP4@HP!U_8E[N;h/f*-1LPHQFb\)_J;CDc\"4WMKb$BNtRt]KH=3RmS8g3[31HB[)
%*L)2mou25+Kn-IbR]8^^@1I8QcPunk3fRKEBI/AZ#rrB.oT2CQ]9;,+fVK.Rp#o\c4J_d(kOW#c`?Bpp^3:qR`&UAR1,6_H[OVkG
%Z2oInHH77-6?nmLpsTVFF6)[g'Q%eU6S?:M>=AMVp)lb7#;omVg`&2K1W!2>]FpA)J7]9!E,0QKA&j@RX@`nI&[`]X(4Pi*q?79>
%E8a2N7<3HN9fiY.#pE-u\Q>b;h4dB&D1%G5bl&dg!ba-J"Gn-T".HT.!U^1l*qPd*%W;WX@_k@L5ZL[Ofh`RQn\t^h^YXI9Cl$Se
%4@K.9GsK0[YdLB!dOZa?W0O0GZN+,Ag^RX&mu&?uG5Vd*/a0lQ1r8,V"4bq:@.kZ34q*e:'IW8Ak4mbH#B04e#Fo-;fNm:aZ+o/b
%a8o>V&[i`T:f*_qS7acQY.X3C.^Q&?jebgDJPC@Pl^WmY],NVf"'3`T7aket:Hgc3Fgf8%X3UHQdDBgr+/URdVI7A+S##f5^KALH
%[r#=1Mcf;61DfsN1V0iH0b&@.jdI<'&%UlN_[<N-nQdNhnHu5W:&%Kb/ZV0R!;c*7MG2=@arksTJHprYE7?gVMh\qPAIKG6*c99>
%M]h+0/GcHN/aM_FceY-OlfA@(/pA,^N>`Ds]R\2Wmq,,'NuiiqcgM)#(LcRR)<PdDHS$tK6^OJFe*o4QOZ#061$'C2F,[2<$],&\
%[afolJCAX(O@hl150RP)e)9mf]'&cn?*fk>\7W`KD'St%6%bt:H'8ojPL(.UMo=kLFpR):Z'Fp0cf[W'bT%P)hsda?nk')$9H'S1
%(W,t;#DDW2IQ(=`:;8RoH3TtINH!G`d`oh_7=BRX7AX,*^a)CXg<pb7B[\Ap5Ufb>q`Ci,40P*1!#U);jRJ"0.1s=4s35&#eTQO]
%eJd2;!Cpn9iM#n?Da_lpI?*,q$YZ;h/tO<hqjf:&ocOh-I?X)NN/p4HH4Opqs/CNlR[u0Y#]_hWD=>ftIk(QQ_S-s=FXHD%\/\^O
%d\WVr)t(P-A-lg<QEqXL\*+QQaO?4@bGCX4JTdmPV)Co2[.@ICL4\<%.*V$F_aSHn7lOi.&:M0CFt+<I`K:Yr/"*/NBgXinhfX8Z
%M%+<F(T7-uI_fmeAl!tD`DjoH1nSZt_&>gTNN;\;[*:Hj*6p)tHPF8Vc%bV_],HZO?4WV\^W2SDh#TNmm%=@P6'HGI^T9UnrO^aQ
%6<kcF3KFr"Xm8CuV*s,`_Obi^SY#eSqp/Z[3c85]'ZRY]?n*k2rCB=b-MZ330bo5E6leDD\pF?FBQ,J411igH3G5W@STD'kf=\Y"
%$ei+7rEopcZ_=n7n1rRW;Mnd@;+NR8jHb+8d%+EHK[k3Jhl?fc9[R/ne0SV7:oS8#(pN^+pqY`3&_nK#R\8'6mM2*&q4p"$N6H4'
%*'?&OE-C$m9Y]&OfXh`/#sU`;&0O""YDRT>MSkjqn^YTAQnQXB96Kp15>7.<;LUjE?[b43:J*3F.PXbBUq9RUM(?^@c"D7ZLO&or
%ogkpWGfUGJ`QXEm7ZhEc*gmIu9IHgq,U=9aSj=QtNC;Z9:pQaoo1hWs""nG@8!$5mJl8gL#k3D<'f&<$lH#a7lSnP99&7-MkO?bG
%^MT-@/EK/^!JhGe7=2DGY0'`PG_"]i0_l&[Vgm'1VH'p#A3elka/1\L>@]+IoG.AIX:K1X\f>$*a[hp.:N##=M9WFHoJ^-gJsNj0
%dbd7drI=k5IrkkXiG\_S+9(j'oUdf:mGIs?chR"+/elZc==Pt-?rhVr*W!N@H\GoWgs2:cht8R853[/=E7qbcIF$Y-$FSCKk7]!6
%__uBNqA(<?UVWnKoV;+n\jkq@B!(*u.UX\H@agNA0j</3MBs*($N#kg:'L&rZnB;r\en/$BfM:6i=Arg8QtYqi0_`+fTmL<PHhfZ
%Za4Y]lOrU1::_-nH)R:dM=G78,uP$&.&=WP1RtoKnO&B,]+-WQq6Y:HLH8Ldgs@R,Q<+tQHL?mj86g1\+:D6BAOcD6A3Er*:Y:Mm
%/6CTBdHX/:YRHW^mGuRZHa=G4S"L^<(q>6tML*c2X,F%^knaPpAA@D24C8k+,$btr#NTWCeVtXRBNj#D(,L?'jbXaglm7l?`'!\<
%L85]FC8>)jW;Y!+In<PCI5bH:j:W1a@S6SBLBG%nD0fHl(O-#/>as4G.uJVnR@duc:ukr)q/<YM\OcpD1QZh)!f$jD2f;*n[T0hu
%%2T9&VkIr3Wg6Jk[@#r(2WJWo0q[">R.Pq!F3$frWVJi3gktHmXV:(I<;OMqmEeC/"__T:[FGL>;9aHU/_Yc&G%!-Gesn9gcD)[s
%*U'R.$is7!UUi0hlTN*TWm/ERQcg@JoF-sKHuj]MOCI"h\*dL&cp133b9D4"XWQ(M2&J6Hlt/(?oa50)IO?m?F&bo;&ku>i5,nWd
%6:cr?D."Bg7XoR)1Cr`cc%@Ll),of`M5t*/<fBN#2t4cj>bj#P6kH3u7nTrb.<q\`,;1e"Y_Ml=.PO3*5at&rG!=,/0%9CBc$+5@
%N6gLsCQ\2<Lojk.;eN,+lfRc:KhP5U>0s'UH-")Z)^Aq`J2jc%=3WN+Me:M404`]&NC1>;V/P?2=-6_eq1p:j]KBMi>\'gsUj++T
%?rd(V_p2`eL&c<CKhP7%#WgmAFV9mk("F0Q2=p%<W!d3DYl*&-YRq\<BQ;S*mc<ElJ:)Wf=''d4"[i(06=V<FhTT`%l5$%L(3EY#
%m`#\Z0r.,oW6r-+C:S'7j//Aqd90bG_R!F"L/!4Zr7Hb!cKJ7F0=DI=V(0A[lK33-Al8*"`lcmgAJRC$!VP9nM#BP(7C$.LfrGOs
%T^JN[SK_HVL0oQ:NELL6m7,nmUbjIM$c71ORWr_FAq\Jk"SEq[i2P[Pl>*KW)O(_n=HJ=k_O[\"UXs)D]B4`L:pQP41MB?Y*L[q)
%+<4'eB\]gu+6FHt8I&?[c6e+F*qHLLOdmUkY:G%K;]6e/5k;=uB'Lq!k?N8JE9)-?f)5];0WZ8aUi5NMNl+ZB2%Y;S5^6!Y4kpt'
%gY6^.a&i'?3r9MI[e&2WU_DUF'\IPO0;$OgSn>UjUZceS=_u6n0J"Bo$dG_FIg7StUQ8bh%sSK=-K[FRWgp44\cMQ/LHaa-JhmEJ
%G;7-6As)nZ(8n^5j`3A>7B[GkG<Q((DgDP^1Z/j1DW0%T49A;CVYF(LkXc*e=s,<PMU:s>&#!([d$#7Qoh+V#ht;l+Wt^`+[I97(
%r%k$D23FOF>h<qX5jts9eIAB*6m)=_W:bY&'iKadh7"ilkF^!+@96]3PLJA(lABQ5ZfMu<+:X.VVil56>6uFsIrA2)(S>*('L#1E
%]tqD%pC6^[@a&;=YM"hkTE,bZ'HD1<TE*CT\ODabEG$i+XK*)g)9J:!'r#eUnuKm#e6g/XFgHH,(32W<^gW[4Lh,Wb@"200(9.fN
%n=*rASoTAn+Rp\F1iL@__QHD9LW'rlpb?);P=#ShHr@^OE"KhN$_1<2fFXEX.JdGYHeGlC_m[s3Vt]f12UJF0++P"9*:SV<@UTCE
%$Y[P9#"ifbX2>>A(=[0C2k[bKK@S.,O9%PBiEFro`/`9,3mR`.G(I83dB/R,P(0$?K[q1[BE#F%O(V=BM%0eEVbQZd`?Y&05gnek
%C\N1.HDa94FH,]R:ih,UGj*,rd=-'(DLds]2,\ofh=tm>9rb/96PRE@ZSrHa,)KF,,aH#,FB*JeU+"*]O'Tlms"EWlqNg9!"Xgs;
%f5`&8$J_jke#n#[qoF0I,)e/#GMXBga7/uBHC'e(-pNFPj,)UQpl(JQY)Y+iFONS8>DMg(p%]jJ+\$)s,IUJM.EVA%)5G+QPam[q
%6Z`-+]21:"<(_BKiMbOb.A,O^a`bL[Z-<agI(#5@-d0/T!YW^XN1I4kguC>t;Pc8W6">`Jn)C-*^A8m?H?orD[=ZbV][N/XIAqMd
%NAo+oI96#0.BBMfns>&i`rf],L,ri^_0`qE4;P-Ei[n?<ii@=]B4UKu\2nl.'nWSUVep/hr[fidDr+r]f13).ZGjXdM%]^RJl="F
%RRGelq%[KG?*NjVh\QgYiYbuOXm`VsSpno:M-@t!WW`\NNuTuU!,"H?^pj\0\TY8/(Y7dHUb82J!N@e=\1FmBZQSs#hYrVrLSPe;
%kWf-HMMM;TgbDs*<@B\%F#HB_2/:**TgjbIkQWo%/ej+TmSp[AR1!_d?[mR+1rM?nBDj4R(j'KqBP6</L.(aQHiOjC:[pV0n2Hr/
%91AQToJV.qT8d0\8PsCG6qi/`)?\^T:tPpSM6e9"5ZaFP]D[id6+Vn@6?nflC6Xh#K2PQ(lU4GJ(2X$S5VW2^kk"sT%5L9HS7$+q
%%NG4gT:SJT]OHf.mcmZViTA1%n\STq`MW964kYa;rI%SQ[#EcTlM7@aV`iiF<#O9X,A_Hs;rcLcdk>tD=8VT`mCq:FmTQ6*eN*g(
%dirfp]M=^AcfL-ij/`nF1l#5KpeXPd\>$UTF`EteRXp'>)#\CZ`Zu!T$L#_87fZRd"FuK@E0]n$A168>_bUoA!P`+SbnQlY6k<:g
%*_H17(u$R<4^?;&<UQa`<7/,'2%LC68e!*!qT7RSL4dGOaR<?&1='bks*:;nXTN$6>l#s_`Zdhm?M/./B$qu4HWTf>m&n?9[BK&3
%X&!ZDX"BC5R["dW9ra(@Jl#'GD:PCd]Vq$YnpC5V=qUVhN&r813bMM)_r:]"4>ZG:,i??EE*.,l:iD^uS<5U$T'@d,s'$d7Ot%+Y
%J:ZjPJNEi@M1m%q+`JCGZ_8@XR*]fr]g94_phFET'pJXPKf[i93:HSg?^KfGBJU/89iT1E45._N-Ck`tHNpm9J?YI,=3r#Kfh-IU
%>D'7*Yi51ogompO#J1l])n'moR]3Z=,bdh_mj[Rgl818!YC?K4k#?E:$4dQD";jiU'nA6kO4jbBp3N8FK>)*ommqblIim-04f,N*
%fJ$l8=jh=df5k5VH[>pgQ0E]lP3cGsC;LsaVausrm9YoJ"O[K?_e&6$C"5`^WMNiA4$rq(@)0:0b[HgMPtMpRr>_k@b`!N+0?8L[
%ahK:I^A-ZRS!2(3fO]T>5:s8Hj5V>*4aNl/Fn*J'?H'9iO4l48s5fF*&lNDl'mlN1F?S6p\3CYUG5_V\rC4^eqT_5D#]atP%q8E0
%jaq&>CPIG4j41\YRDlRC6YO8307:7<4er6W)!TB"XAPbq4>2J<c*>#05!Al2bO$0Zgg^nhCfO&*Ua"g0GA9MICL&UU2:I#fLM?:Z
%0:+6Pqt82/RN7GP>g@:Cm*EVF^+2+h%rJEpKGRG@k&'1MgE.pu4VeJ9.er>Y#-XL98jbi3JjY@HV"VQ'OpI%#?6?V8qO5lVgXb#u
%[HiHq5W0i6D&8;oDLdh@N0n;l0:,06p\a\%*tt-XrAu+kND.e[5<Y?'N?!2HlAL6^Qp=V&A@tuF_MO/5[Er)S3kP\SMb!.um<<H1
%Ei^s&+KgCd-;K-plKe"Rmdr-VPBmhG2PuuH0b9qdcSha05:`mVY0@LBeH2=D_qo2.o?Y1!CT<uZKdc]]L.pF&Q[?DPepWeQ)]Z7t
%Mp*M>j-$6:77@>7SiI76EGWF<nDjF&G=jc=dts_/XKc1*b\6T'hgZhgGdJ:%Hi#3(MB@I]?tchg:jV%$e*[$&F6W6.8bN_rL+Hg,
%8?uP!bc>!7DcNXjF:_PL)6Wmj`3JLU,2[k[DkB4:DIXsr-5oi\9e)$^o]ps"+&nO[TRA-G4WsD^8FkRflF15+c/\2FUZDW8V&pVY
%'PHI%\i'7p(\<!EYI1sg[+L%,;!)L5%rra-Q-S8H5d6<l>$=DKPZTS#rQPYSJLB_@'Dl!QK#QQuJbP_uqt5oe!lhMqK9gJt3H_jM
%Z>*s.pkHi#X86(%Ak`s.MXctN+[4cBhK`%#4#bFRFoLEFDoir0k%^Zg.DPPYI_OtCrk+:BXUJLjX7R,@LJ%XqQ.].o4&B_cCt(l*
%*$R"Z2%Ka4HFfb.p,&bseWbP;2AmKgDUFFRE]!^0992$@Grhh3K^.aAV`(d)Gpi-N_$eGJn,C-3Mk0\:*3Pq&ic#uX*cD"hJ0Z&e
%QFXkV^Jn6_!cJl8QCLW4&K[dO[\2qA4pID)NQ=C&%*BBqTX+"PF:#HYWfQNd=i'R^d:.]ncF1];ga<lLem;d&2'GNoW`hODbu5C"
%bqC9r!)hRITVEMV;a_c0@]"9K;7_@M+W!#BFt-tQMk,,+F%fdtDtN^J4;hp>*SYtM9:9lh3I-8NrNeQNJ(36;?20Da2f(tRJj1SZ
%!*Kcc7K93>S$4^_ZQ!)b)O731*eO<8?B'4`X!VZfQ,(1LPlHP=a#mR:K5?-X?E\(3l18rFqe0lgWb1W!Ae_pT(.!(sFYn%S'a7/+
%L,pZ>\b1ffS]K)c]Q6LRL;gB@gO9;&Ql(NnS,OLH5EKENI'kj-@o)8DR<SLQ3UB6tb&>OPFmr%AT%KVVoFR*@-W(Q<j04'j^7'7b
%;a^u-2]oSK:-p#Ob[bIcJ#/])(-FK2cLZ)3O7fBakn:1d1JdQ>fD$qPn9X6?%9q`4`=9Q'EGo"*kNf)8n:4b,6uV&Ai6ad75?NN(
%!*r/*9Q9Vp8l?2-GOk5"UYq&E]\K#4Z@Eq$&,P@]pM$P*!f(7"[N!E%PH/PK'$HnS9_C<M^Z?_iLVWGlc-e+3I`qQaJ6HKab@$J,
%TJCrC")$aCGJEQGX8j$u_]C^"O36IGs5_UjZC^kK)\ZJ]./+#7,NA]%#-XD7'1VEAG;JYKi_B#D?Z,9d(-qL6I+FuDpNa<Nja"N(
%"b1aaUj"5_;**C-XSEZ0=]*4U`rs:p?UqA+V2.%Gq`9u/%a[F=bGScUood)Eqs]p3=>+Q`n[jkB*EMcPqTDU'pNt\M^natc6r]#_
%2ba3`ZT4)k$oOf[$]spf,8?R#.Zf1ZSIXL/;Y'\HY*q6b+Z-DBN&O!-#=.\1XKb30JHnqb$J#DF^o@.2!B)56pO>t5RBQ4dYBoS5
%LWal]jgB5EX.;2Z\@+[od`Md,Rel^&5Q>bNWj&[Y6-GTCM=/a%3=19YM#&^\=Ot/d5^2^0]uk)o*pEtZDo!@2jA#@&NJ!WWqft3g
%CDQClQI9\k]7KEg\:Ih8>1R'cc>-b0L!?rP?B4nD?)n[9Y&4s`8SLHm^i6&G.ao880i@bq8%SJI(LE&8%?kN@K(sY,lV1_mL,FT8
%-Laq_B5_GO.rgc'"dc>oQZGcYErbUtbRq!CBM3L2'LIYM#EH-&U>4bP98oYMphcXij5-2&k%VK`4TF0K;FfWMjJ)1pC*ALBqu,EQ
%<ATJUn)kFT<<$1(!_u!rJ4LCle?l2T`1b#Y&kA;k8;BHS)Uot$Ke=g<EYTDN^4o@ncF]5+F4dLc(i)M9D?+XB7QYr9+PX`F]YC;\
%\Y@c]Jg%B9`f9Z0aqT:M.05LmjrA<@B--g(!]$K<ZKVY-CQa_Ydb1_L:[mXPl&^hZW-8sV.F`uR=L-UERpBi?*LFZm_D8Q347CQ$
%H)uW`[t2@t]=j^h.kJMD.,Q,rC`B!tSagh_m%)`/?4iJ,:go!("JdA6q'*Vro>*_T0OM)X_"$>*cdbHH4XV;`*;=OB$'7PTi*&sT
%g['4L<6+(E%'3^GpDErGUV0W'fLSD2m@]GEaX1c#@6`^US>pU\5$,UM/jVa<f(F2N!@@]>ehO_+lA/d`0_tZH/k<VH19d7$?_u,+
%?FofEhq(@$W\pi/>:L[!G;8A1*6'mu,Rk&cH^UuM[<(Z=l*B7UH7'U_&4;uLY#XG6H-CUC/D.#YoSA@Ia%`S68-";Z[mS*6O:PaY
%!$3"W#*o!e\/W18a1X]1\WX(qdT461;m$E..0,$@^U?o)Q@K#"geQ)<:muFZYPm"MT5Yi+g/X+$.ZEsi_[FsFNkh30k#2RWnM"Ee
%eZ`7mBPftob@//rNkbHNeSAiEr<WJ^ZtA&O>3Ahh0H)IU?f#HIe^a5nX7CQuTXC4:5l(h?Unr\AlC_GnX+e*>J(/=M.9^AoN7(Y:
%U/dbr4R2t#d#W7-L+O:$U,&D8-^qUNH3BU90b8Vpg8FLcs)`;!Cpt*cmeB"qPZZ)Hp]0e3&@ufGKM+Ihe1A7#BJ.-gU?Q^Rc[!-8
%c0j\jp9`DX<a+Eb@D)>UOUT_SmYc'7=b%Sb2Eu&n5\C1L`/Zc%;K[R>WqI'3&,HSCpSAcb?LC@T!k@)H\FE*?/l7^'p2?s)C\?uL
%c\4Vk^uChT##&O%[__:f:YH!pOUT'j:6,[QL'4"Q>P(&G-Ti5H`/,s(QhCZ:JXXZecGR"#D?cS?qLe&9m-=Gu%g-bhp(Io]$1%]C
%eoeahNkkjc(5L>?KLQ"jf"<)f9AZm&fhUetEn&^THTs'jY+NJnIC].fXe1sQ;m^q\p@iJ@LVk+&XN@m/H.tfZD=+`:^:*!e')<K`
%qjR@7b85#^W7S6&N>M!UlaQSDbhf##k@j6sq1_u5ReeZfF(biXCD5lc20@SnR`4`!<3O:;g(M,:1g^jpASGK;1@*Y)\7&^F9p)j:
%ZD@KC\-Klt&&38'k7?=f)o?G_gS&CUq8?oU5,\\_Ne"XMnE4e0;TEZ[aQd'k^QuVnAG'-/0;!b0ESRB`cd(r[\G"M/nEd6i5\lG.
%P56h)F)?C0Y)TZn]sb<7ejeS\3qhR]S$LfAf05@o2eDB#=o2lue1ldf`GkRd>q11[eAAU#\^WN=`$'U_FeRWa^=I4?kX''uBrtks
%WIlMB)Sh`YoW$fq!7ol@9!;@D`q@!O]uU)A%-eeOpX2fDS+KA=i.h]LdbomrB@.1'd`M["FB,H!iuCrS73h]<^IKm`mAqE42sblD
%&=EIMdbg/HHiu-`^/"[[ouh>n;L\pUH@?9G"_n\>lc3E3E%E*!H`Pbb#PE+Yo@F5T51Ck\gaa=OEWFLD%m>YEn:Cu_'tAgp:3Q^e
%J5)#bAnTN_EnJtp_7:"h:'aTbg'MonN^;q_nhP9_.`0f=AfQA<qdZ_)CSV.oQ)\O?R!2;[=m,i%N@>VGHF_4P:fFeZSS+O/3*OO;
%'l>SCIEce[#Yb5,2I>X:m)&huhV7p6o_De)o<*;NmUn8XBqFMYKO-BY9XS)89V_'ndts(<-k(nV(GZ9,>gA^NmgaOe;1MF0aOQg3
%gUnAHTDq>^qZGV_h7W:%AH^k=a[3"HlnsG_CJ[kb`+b?+,$&)),6pL#T3.r?Se!qr/-nUmOLtm@5u\*s:l1nDFZG.;9//P#),EAa
%QY\t!18om_cKm!:WHn+K7g1(5//2%"Hri7rQ2truA'%fIhK^!k2a,qIOABF-SS(#OT^ih1C+b#@)mfilE7qmL]a6p%C^sk0),JQ<
%^1JNQcAH;mR^di@Q'\e6]e3bTFFcE;ZUHh[YT3+m",O1J5qKj"mhc%4IMaq!H\M5n-rL4+q<^R5:Z.`.^.39t>ZQ*;,2,Jr+V.3t
%QDkX_)6\nTj'^NAaBA%5,GYmmZ-_Fa+C5NSp#Ouok?X1&qusUS.@X(eL=DL""T_<N^70P_Z:7I:m2$tO,:`PUpiM=MX)W&UIg;N\
%k*@.ncmOd=fFN/cL!Ptmk`sN/_-'DX]XKS)X&q8RWU17/dfin3,u=n*N$GIPS1aE;hn9HdF>+g(pCu6S-',X.8)l[Ve5+jj-F9iE
%Vlb6T[5CEr-;/bH93;da%r!J9_elZ*6_*0_/p+EX/2;j2>56d7S!>3p0a1CBpBPheFC4e1f@.>RY24S'CJ!7+YbbW17un'G4ICPI
%H;NXHEJFX!cS21L\rapPU42uZ52FcREJA-sV$X-#R_s^+j@%gE3UZQaDgV?;4&Xeo6h8LVkHAd\P57'[q%;?"V-`o%T5X_Sq0ksA
%>j@7A<g2$KD".JJ:&\KMW)T@9Ot]TRT<=Ho]N1Yt--ZL".-tStE"WiN]J^.NX-p.-\Q0Z91?ju:`67KCEq?lF+7c7gro53_'@o?1
%,VM+LpY3:Yq0_"TiPT'un;W?Qqi\]gLq?;/Xs7ZXOlYsN?VKQR_nTmogj5dp.j!q:3M.Yk*6/?Sri0V43L/Qck.*&_[RJa3$Ut'j
%L<b9ucP,HXkTp#3D!kEJ7djnUe5"QE0(o[K&sIpo;Vms[rI-KLg\9M8eE:9/jLUb/rO/]5[%EX?>mu(tFn93Hg"J>ho?$hGV?sG/
%lM^u\M$i_sW+=:9:fE?oT;FsbMN5+&EiHH4%<RX':Gs$`QhtOI:OA9X-hB*LFC99,BVu`R.8f&NF*lWa(#DqZ6:EN?O9mjG(c.sg
%"q%^:D+hhNX7,CYX\*TZn,P=eE>]3#L5n*Mqaig]I[;eBKV3`3b6dI0c=Y8;%bg9S`"^,WP$C`Z`ZduSV&TX<YgBPNn-QSH>@Ci+
%0'pb5Q<Q*lLoU.uBS9CZp\&XS:KYQ4N$)da]9:XXPf.P>X:HIN#W('[*;Z9h2)>f('&'e[31$DsGnkSD)*mUkg24\s+Amt)IFiO4
%i]`-@o4/M"";M=0K'LIArOHI"gTRYdmsc0h2h^KPC;SL"-A^>jM<3B5q?m,.qm%6laFo_jmllF'1bOR^4?4F?h9o=TLM]2ngWQ"0
%lS]^-\*<%oRi\o:GL%@!dZENtGoL.K]NGh]6lVdb9b^t0X:#78.Ij/UZCKW7SJZFeCa'M,TJ%h_mP\a\>V*+CP<T9(QuLT"Md=ej
%g/W-jrJnc<,rLEs$E]lOkBpa2E,RBGnoAg!\>$-o7dI1+"KCZ_#LM\j,IQ6u:LNu^Rp=#h"ZDSo>+?h$^JOZq@f,k=/WP"f9)b:9
%)FNWd\t$\:&$_;h#D9_F>hs]R3jmORQf#@4'>,C[S'/<O!\dHc65Y!3\a?t&ru#Q+:tkiMK4MjjiYFIc!LQ&;g8M3jcb/@ffiR3_
%4bnh?/a8`CeYN#&QmcMYp1-/6]'9ut-.G0&hIHlAM`M?+c\=3p!/Y_UXes/")a\rc-auLiij<VX`_@eKg&C[[=^S)7JB=)01GGV[
%R7&OZp(m:P46Eco,&V-8AYWsA!J'FW6"LrPStYb`$.U)pdcs#OI]OLi^!cHpqUQ2)imCrDDbCIWBe5E<hbGP"\*_Bb+<Gnc%M'G5
%3hD6.)EX"+a1cJGa&dGaN[H&#1%&*nRSjKSD"C&W)C7"?:$ic_<-4K`T+d3b>\%*!N)k>`Zn"AFJ4.VY^:&U=Yr9nYG0<T!B;YY<
%J_57#?Z$q)qVWJMFB&BG!8KcHHeZm`#PrK4loAG0[]WMmO:SU/jUcsJDWN4;I$+Y]a^-XX@`9YFcMY@^inC03AFOpfi8kV0S069r
%[Pms5YM&L.]=/]*WTF^+BU6SPWP+Ve9Cq,+eC_r'DlBr4qfpj^R>dQ'cf=jNSY+`!:PNt?oK_k+=NXqWqc;)qS_#CiAl)p/\S,fI
%$tKWNB9.e/!7"R(:;%Y>[ArPJAMn0/j_A)Bs4sd9+JTsu=!KI]*(i=-=m+<<<2`1=:roMBY>j('jnH3X]Ms>u.*?>%H:`PRA,7A.
%qs)uTid7MnX>QE"f!B[9f8nVUiVOlZc_]f9\9V[>c.]G4np.AY3hI#W]f(RN^1fI,hk[['HL8U7^Wt_8<Yh40<mDHfpm&!g%][J6
%V-6)R88\W1VPCbOb1Ai9)pZ^)NHrD]?!+8%o0QbdDrZPA/\Tp,^=bAge'_H)KsLsY8JhBC.m*1rm(g;[]JCq:I(aaH#ajL-Hh>!4
%cWA1p2$[Hf!qRr;I-\baInme\Jd`*#dT/]N]CWfVO&U`X$GZblX?(#^f&Bl<H,X56hN8I*s85S[AZ8_4B=\rRlRF94B`[Z+R<>TJ
%BDteC"(\i@3kPHgmTnLsA"=M@Y]rj?Pu*F5T\=#fhfKq6<D<%F'qhut7NuR`[\hFZ:o_cf<\t+;&En&7lXI$CbAm!ZJcb"Vr_i\H
%oR!AK,QJpNnb\WUF(8M)>b@AChG4iZQ=%X-Q[`:=mV'd0.YPhh'LQ*=\['E34tjsiZO&b#o?47MX>bCK39psWppKu>d@2a\U&9@I
%09?1YD6TFi&CBUR=;frl0$67si1Mj*o"Xif4Uh@D$RTDTbBkkoeu6H=g]aTA8)sJ1)P2Itp..lPhODR^s(#UrF>52hQEfS62)ic-
%6.I4R2&0=9dfGFH4>V9[rff+d[`+[Og[fPJh0V`1q=e66*[P?BVO+dX#SDsFo5_#"A&#^/J,07V:N)8QZW*T\9Qt5"$=P)ChnX,a
%qiT_?YS,M'e7,U=g'>"//7oE@9CLk&lMW@/B$<spnJKgIf:em<j;D%-[#c+K<H_e:]s[V9,@gt$d*UV9`62TX]7c(K]\K)oVZmLa
%P(-.(]RneUBAIl:GEttu]gQcB3X8eU"hEE%VkXUn&K=nkmW-29d_;l5lHX$`rr&2<VZ<ap2<[A?g>Fg>jal5\/hR[r`^Cc=6d,oV
%9/Q\:FF_P'h=1J'-#YTc4CYK;Tdm]EPYbWrW_-Xe`(c%!'t=U*S%q_q_.t>6d_J!1-es`MO-UdSn@iq[*e+,KW3]$#Lu4c';Mri_
%\,"pI93uG\X]oukrg\H:jlSkC61h8pp%,Qqkis(W9s2FQ?>]WDO[.7i!7ntN(:Nm'e+(,4gZ9ALO'"\0m=&tX<mILsnAY%EEWG,C
%2^((_XD'Fs`W@N#Tedsf*A,/!oR)'QcZQ8h,a#66`$D)06,XsVFF>=.&2^@b>jDHE#m%sT@`."S7dq(F&4hhr>FjQJ+=?f,^guA,
%!i6H8&<>T3U/@SB(&0dOS+_^F@>9L(+/@h"<1#uR_@"9^Q@Z%p^':2lL`RTDc@?A`]/nbu#fVWi"SR`KLbX6U@!Pd5*6h#bK.5"7
%[tMJ^E-0T!J,+r\"EfJQk0`,"clpq^;S1Co;Ap--m&E+sH;Ik"%.4h:Fh/]+GfFPN`r\9`/dRc`Vg^'7"=6A?k"#/r_suD\lM;kk
%4ibqA$TP>J%T/l/pRd6A%RHRo&n0!._'nt@]KcNKIrpU>#tSJnEBt3$r\^oZa[.*1"Gk?Y0PY7m#L3u2HT^Xh%C]cTaF\u<f9n-+
%9fM#mlU67@p2L*V("p?j,TKdUA`&l$r[J,REqOU!6jVM6)u"pn]DEZR3[=*R53C4Y`sDX..SSR57an(lZ"JsElVkAj)5Xk)@D8.*
%'LVN'jZ\lfpDC.DYR:Bb/6"^"I[T@4[shr0Qb0J3\73Jc9tHH!\g>j[*%1j6$[P<'Z"$)?5nIL4\"-gd-&::D*)JIH3&@U4$Q@<a
%!EheBk="m>LI++Hs6^F;&Of1n4\0drd/jk8)3EPBK.,Y^ghZE$neR9Rf^]5(69FYK3i^%US(/7W*A-:Q8tBqXB^BRH'cZd2qtQ?G
%!/V+i,=sH?mVdDg$AhJaroSQR%YqfJJsZ"G[4mBj*g*u]^aU,5?.S]E!jK#hT(E3UrXM9Y2i&d&R<\mFfap6-J^qKY#aBrQ@@\N+
%eJ5lW@e22UQo*)M"%eRBH-kJ,AR/M);,!Y$D,C*!@%MLn9]6eO":Yu2$:T3f^To"Dg1>72@(L'#O%102\42rT/-ZH7A^q>N1-jJY
%Bgm,q'S^95V=Rr@5aE^L06.-:^5RM0qo?;'lC(B/.C]X%pCWVu$DT]IietMos!@MOHr;kYWdPAY"?59Pn[dZq2i'-"72;2eIGal8
%e:_cPVA2:sQMp^`q#Ig^?L@*jh*k\PG[FiSLKk]L;eO0Mcd$cK.3U]Z92n+S+UHmA8;7G;*"7p*QiJh[KEju2/k6fM`5@Z)p#gm!
%98$uBDSab,:q@G!`DFJ@LSc`Q&(W`=-A;Z6>nH-Mr$ER$qn6NMf[f_'U`TUpYr()h#6cR2-m%KZljifL(TJ&oTlW=E"erId'lEPH
%J>-m/%Q80:g4`U8r=@&(TpKO.N,d_sP6A,UJc\VZ$OB%gnO,d??oag\B>)"bjP<=Q/p"<7Io?U^*Oo"`_gt<BgDekC8'th&n#k28
%][N8A(F\k)bKnK>I01S/.*]isj/X8QY<l-R4V(L&i:oLMqmb(!SjA=M&K@ikkFf;+!jFj3OI=P9mj5WsRBAkNDq_e+-R&(Qn*rt4
%I/_4]q"\dqZ$5)NO.WW5@pmNnni`S$P$IUDIZZ1k^A5*W=:10^eBHA)qRU-ZfD#-pjMBC6T-_E,7:o*nBp;AG97ccGg4\W.`)k.Y
%ZTU>SK`?+>%,U*W!=V>7j;XcSCapA)$ptgT:uIIKDkNF"_13TsV8)="Wqit1&-2si]&BupJad,J?-9Pis#4:-2e0U*J,Aa0s8B/$
%dI$[`^\NY7prh.8J%kiiJ,eh!j274\r!gdGK75@()l4TXM\!Z6#C&d]>[Y=&<BVBhFO\/h0`a8.RnD&98FX]c!22^_r6gZ\.W#RN
%/!]QAUfK*XYY#UWlt][i*XEnj)2O,c?/:!tVtRKdmt^B&Vmp"rkXW@h2uSgK9]lWTLOPU6W99.8(d9Xh-5aTJq1(&c4)mWN'Y[54
%(dN6?cm2T-Qo6(:#!^BG.QK]Cc'9t8>hI+L:pIVD-'F7CDVDDm5L2-4>#"a$).T,:h36#^fa<h/#F_iYCn*V!.noP/XBljL(U/p:
%0CVr&Y64+q>c*+[\NgL+&:fr%Qm0M)U+c4E(%HnLhqN1Z]@q0KHdd/4K?4VG#!=#+i&Shk<MRMc\`<no0rCbo&s=+m0c0K$$;e3G
%-WWb5d@5X!a;<+oE]Zr'=1Y@l0lm97'6DmofZ9RRieX>i0$lTX/km7SES-k_?lOn@)H-0.,<;se^q;):-^\PT4Hj,=l?h`2ms;[/
%N:%h7^3#VBTSHZFk'lBEG650f=%UCs"X"FA$R'+34U.Q0!'\!XK`eXup/Bi=pBtbI2Wg7639E+t5)$.l'paA05k<l<cSoG1[J5,U
%Nqu8mBmBVneUU!r8Mq7`1%G@F*7#_`%N]c\q\Y3h3PgJJ&OG'^8DR6\,RI_>H,(c50k+aq$@FOQD^0F?CJ!%<i.3KL\2hgS[?M^J
%;g_bDr0Q@:^34"YF8S8Y#4Mqj,OiCeZhIq<\tFN'Ciqu1\nC.;WF.-;C.^sInPbokr1kHPpIRU0F)1Uif?AICPo7=6EFaiG5,f;B
%q*).('VC[)s&]JMVf8'TC"mp@-aoS6)3PE`UC@l-/QO*-hZXMAaZqjW"eNUZM&T]<rD)!C)Z/2^"_YSV\nD/EgW>'N>@]J/oa1Sr
%09j)@\SrSeKkM_NTUm^7n5<_[&JXF*.*C6D[5o<^\fZ';$"%mm%>KWcLl3Z^m:qmFlB%A99]YB`AAql$kP>*=QKCdBQWWU@$g`bi
%'VC[)s&b;LBDf'M)<\ul92bAC,g]HYjXis6+G^2!WsKpZM;df4C0'VqnT#KDd`V?$6PD>=$9QK%KngBs:N3kjJ*MB&7u]Dg-th1H
%1f<ec)^J+4-\!D-K'K05Q.fAk6T'\q0gK=")$$;s+C:*)ZR`CC@KYR`bG[t_$_CeUAYYt,B?6.!<1,B0o4lq(gkYXY31"jBCn.PQ
%5AV=X^^t31ak,@;@H=mYUf4anGWG'8c4SM\?G<[PcXp'KZBb<M.L-W@n]AGOp""NQ-G2R+2D=4SQLZHsWL92E2]_Ol..,3_Ot]$M
%/A9(C4uGB9dDZOVUI,=rSNgPH=+juL2ge8CIe^1pIuKtpVJ[=EPp+9qMKo]D75]HKM?*>lbUE1][tZF#o4j7[_TiApRDYYe6e:ng
%"`rhR0<.ZNqrqa[^9*Wjj#Sb8h1`"&65anQV=<j,IN2s@9G0mF'=<O<?!E9CT?cX]RqS[n7pH=q9o8rE1+KfeP]:+ANU/5aB]Z'm
%GVm/"Scm'15g?9!`r[NiCeZ`7?.cKE6Y&Xj7SlJtm-haXJeY$-+CNT-,a]_=ZRb+-*tW;6rjV/a_@+n41rnnh=JHrbZ1F8ZAsP+"
%r0Vo?B.l'k$=MDgf[95T=bZXAP'0aIRS?9!o96oRO^uOI#Jde[lY;(D)G`\SK+KgIFHD$+$a9"CBpJ;`$&Q`/*CHkc2L5M*,#`Z6
%?lj58PrsTZm+l,(>oj[<3H,G&LTN??lGjiqCR,="m&bQb425-RIWR0%:b#..?<o81AmsIiA\JP.Y!Q3$;Bcib&%M2!NKfA2[q_cd
%WB'2#*@(eZKg';A27`psiNSAdmRTru&dnoN!$JO,<?L7rKtaA^h-A(f@')8'KLZNs2g@$Dg=H9Rr*\61Xc,DF(Am[0goV*q:?L)q
%qK]V+@gfpP.:.Z?GaC=7eo;c=nEYoLkNfW89o2iBG/M<P:1r8N+9Bi`8GIpJ*=YWj.fsH1QkFnDW="GJV,j?li7no[#oQMa20`YL
%?#6E/KN&IX"m;4s2;&5aa+qXZXL[Ad%qJl3Ml9]]A"+TO%`\^fc#^ian%7jRBq)SK#tY^:#WHonk?`#CP[MYlph_:6;@'R42G)!.
%?-I899YW-uqn%'d[1Z3OIG4epT@Y:#Z^HG:7kh/286\ecWW1&\-O*!^WX+h'&*^Ij#GK*>=s5%4[Am+`1fh(0<O/rC;]Gj,k(&)=
%L.7kr>c1>:9VP#UJT<B,6@2NA2`a?k-T)7i61iARb'(&C!/"Z2QjBk21pa+!Cd0nJ3R-)tj)S/.)dUk4,f3+1i`gB1*N6'UA2dmc
%E6In/i>5\)bZJeTDDq5TDE!DV2_Nb8$4UT5EU^6Y;d8\WYH.R.-Ye.X2d1A&I00H[>](!GD45ZL5*L,!T[+1.6Q,Pc10nTNB'CKq
%[oT=k'Qc6[(==GjG/6"%XJo-Se((`*84H.WW*6QegsRd__N0sGc_0HR6m`A-Y,(&poSICE<At*i2c&gT2;_d=nNH'n]B(M!rrgU3
%$fS_'g\o0m/OH&%q7>/Joh)SSYD2sk]A`^Xd5CY<Pu='.7D15<fq^C!Y%5,+$66%MUK@il8t]^lm]q3Hl=#AYQUUGhJpc3S[Y-3$
%Zn$2M7QN/`b3BU6kJ/^hb\`%S1/7.M2;aH)/mM3'p>^0rjtq5)WWJ=68uG).>_&PZkq5q;mXU:M/@.l4$=jnd5rQ4L*SDqT^C(_[
%bQR$%,Z+6,VRG:8?]sGuP%,.$p8hL_%t"[mIfPk8%El8HnN>1?a-Q.Zm5kdQWD;OKmf_=HW/_+=H+"A$Y9.K_i"g^S.8$`rnagM:
%5E$#a51c-j$ijaIksRjY08ihYZ"bfQ-IbO09/r-@WD,P.[]!*VBPBCBU[j%?!;&/Y'`r#))k/2J[$^1bbKoLR)IHaPaV:oiiHs+i
%9$^*`O]bX$;&aQ#:erT"1#@a.YY1o_K`dASeV:Q4;`q'KVO=PEp6Y:HD@bAAdE-$`Z$O\5[BEWnij+10R?"5_3aDpV)p<U9,IhHt
%F=/YVAVniq@j5F7lWWT:O*5_pP%iDi;j[^%gmFdMD=ftN*c$9h=-(2UE@)BCP_C)Z<"B?Vbh-#g01ts#`@l2*9(8/s^hE:Y;CoaD
%g(1P=oVi1Iebif;XtR1r_$sY"`ih;`F\;elrmR8thHf:CCsJIkM(E#EBF5Ed4\L_@h"NH_#*1+8,WaJ%6*NfM83i[gRfaEM82["&
%MersGBulo0`]UB_ji2<[d7<;?.3T5NWiOh8?`D>QpZ7GK@D6'lMhiZVWt0V''d[-,noEFTR.oKrTB*`C.VAR&7k5_6ft\Ci@2<aB
%Kft='iST[s+LQB*d>``8Q(@3%eI3'FkXZ$$]*$K(KiBGAq)iUgP]m.CX$.%';=>ZW]H<`CNjpCt5(aRF)q,LnQ4s:3h/8[emEF,O
%ChFY0>sR6(D,\3&BUcE;VM08K\%."CJc)5R5$,CnYr/M@SSboOCLUZ_#:+tg(NWi"p+K//Xq'*;O;2(bi)9EEN\;g0%J6P)#1d%`
%87DkKKZH\C61hCFP_[^:)\aWoi2F7S<]7oJn2&I@VBXJ7N=&kbQA>ggKS3+CNY0EmS.GV=1rZBS`.)dLr>[:P]<8(CEtR&q,;op'
%$je\"-i%'!XsEK^oU_E0raD<'3N+p0MiYt(IG(ArQa.9JIgUP43r;33Pp2\E2+^A)`\rP@ZgJW#_=G;r\#\b;_Ia,'H%7!!lC.k+
%2+g?UOPl0nF*q0:r1bM4e!+]bY*N^);_&6b3YcmIR%=\gg#p^MKX#cQ<+,_;279!Slq><i5sj//W7gF'"1ArZN`<;r+7ufeH0K($
%lb39D<:2,5k"!8ESuW*L:B`5##tU5lnnm^ofcnV+nF+?#;!)ct(qs1(Z3@*u-1i7_J60$c]hS_L=l'g"<cVf`g!@i]s"Hc_52_d^
%bWonTeH>7MUf*Im#o$Ag/8QjD!ol8;94S*FigVPBbiR%C(%ef\Cm\.hW$99;`<;g!e,E_]43uP]j`5@<[<\T6-h[[Wg]U#?a\`KY
%P7&^a=u)-*M_ZnMXc?aYdM+L>P+rh30u<NPs,sS[F6'Lcan#+;P&i5Kni:'Ao%P_[]"a]%=cWjtQ:*4LBHD(@EGI(k`Z^fZ5rgJ6
%F^9gHq+ue\M0qjW=G.EG'"YuHVSIT2KN-H_NY.ZrRjoTsJio3&+IGolZr+eLM.i?#5cpp!4D,KMg#+Huhg0d.m9:\)TN!^>=@0WE
%@ifREHP7>a>[M7\3)U)QkuY/S/.V!4Mt[H]]T=sB01X<'W4Q?Y4%*g%fP-0j[G6)*]C/pV;qVa"@V\'uC>>H;d6"PljlW"?\ePuA
%7jQ$M@C^YE3-da+NQq9O3.%hFo-.?]Ji+T6JsUo!FjfT0:S[p[p3sBX[snG(-Y@a-'P$Yf@p18L\6,<[Mh3[BoVhndT_/F4IC1K(
%^Tasrdmd!d9-UYfP?N)9J#$9l8])^<^0&(d(@^^o@.#lf>NJXSo6XZdqI<Z<0k8t(X4;215]A9_0+KQo5[l>^.B#l)K]q.Bcn1!W
%N36gG1'h#pqbjF5]7:G>87pn/A4='"YaFBqVgiE4GBNOYp3g^S9mgr8+6;C@b#1Xe0XcNdlD9CMRlqFshJ^YtTmfYj+IUYb!&82d
%gt@,]@.,?/P#V<!G)ld*ZCrP'WQZHPk4l<Rq(GdZT2UJ0D%r8OUDVOuU#6$qYtj*h3k?Vb-^"/9*;0p'K@gd2;1og&o:lFk7W<lQ
%gAIn^:+9C%?]%nZRN$r+lMJB;XG->B/1q".oLW7,F<=?F)$\"h](<p=!LeQFirO'7D*!]l1!T3%3U[K%6Hh6oNO`6KZR3!ng.S)"
%YM/@$djUUf9J/lXAc(!0(Xt'Up+%k6DX:"2J.@%_n]UFM"T+jqr/#-Bl^e#$;!s^i5<T;Gn6A*tHmYA+*,u!:`?gMa_ZpC"6aus%
%K6fEC+2c9+g!^Ii8\^O=1Fg!m])]LX+\EO@A\-=9o8%l5_)e4SbAA:#22gZSRsgr$%#]/2CuF>ODc,.JYanB+qEkkS;#d\6#Q&W%
%PXNb8^E/%S_>1TK*C[-.pp?Rd#><Wnb/Pc0b;3^hL_$;m5YS/++VGg35a#adpbdsmc$X$&jF[(coe3ZtV+c+O_;I!_dp);40<ogf
%kO(Zq/0B8PG-O)Tm2UF<iCS00]Uc!p"!oq<9[O]j%<RYrd^HSuBaf`I1!o*O]&a`m<bk_k5X\!q</LafnS$e`JFF@5h0(+4,C2A3
%46)[1.F@M.DGNVlM$@au,IN=[]gqHb$"dE:9mA'sm_o'TG;a:&&!WPm4T0mm\;/&8np'KCS&@"HDf4>>!s6TC<eX[tGuVQV\j,-)
%L"47Z$5\7iA#X;[]pKZ>LiBF+`*8;D./"\Wju![[+1tQH+E)q(H8Y'8madr\nT&-][*s%L0+YX#%<#(ups.lBAckAeL](^BFr/>I
%&[`osfn?;!`*[GRp3Pt]EITum5MWdWLn[SPTu-sEji-kjTMS]M0CYHD;4@Rkp"'27'dB07S"U4pBk*t1Z47LfLn=5ph%hqg,.<)Q
%(,b=[@0[Wu*Gqd^JKVQ1D#8L8:WnTEY^^kg13[>6hQs/SP^tHEqZB_O,]FT*>9kZ<(<6>VlO)O\'_6ONfMElE/**5f_cA\_6d;+f
%(82K*.B`FAQSs(a#B(mEZIB:>cD`,jd5PCgU='JlCRWVL8Q\.W?/QV$1-3T7o*r-hDfJUt&?D9ZKFG5kpHoNBhV^mp[@_0K"NPml
%iQ(b=1p("VnS(#R?^u-qG>.Ya5$Z843;BHO''OB]0ilZ`DO7^\q)aGGkLHed'JG-NAk6Y<!%[6[,:TNuR";eO,g`fU5VoE=LQLYh
%!T'`e#n_4,jT6n+2BX0,XofRoD:SamLd+3p6qZgCQ5r-sYqj49HWWu2BfYPkIX.ds>9f<3[65J)jOOa`5??NlP`1cqHG#K0NKS\r
%HSZ;l`fIK9Xf.\Wl]<$";E#4+AY:=J_Y*hm]DP<dgeX0Y:P$2==3h'm#_[ha<TlJ$f(!QE[b_.).02E"QfJ&g4M,jZe3Vi3Bum_%
%03ZW?cA^roha6"c5HX"iFK(n!j8NJ?l[6K$\!_fs.V]62mSr7c1p+Etl:FUj_<n&DB4^9<RhtjllgjXTYHC:t;01mORJphi\UNS"
%9QPSbcMXI!lSN1b4]ff_IBEGIm@DF\--("[pB'ss^!Xj8#^O09m?S.tBY[s,CP-:0A-:YP62CYt^%;+Go#u2WS`/POOD;qt/3"'0
%b0%kcN/Yq%&O?o_K_M92Xhuje2cjo0VWGU-O/Ldn4I)D([7d\;,_j#F_od9<XD@(gA<,i2rDtHFP<!rm8<qZi?e8fsIf1SYaelYS
%_f*htbB1U2bt+Ut&,&\J4#_)OcF0eLNZJu)/46\,k11U*]a30C^CNH)p\s6M.VYg1nfH+MI&\/j2$86;RlJgV%'t)V$j.bi<SuQb
%b\"'^WD-FW5oh1$^,mb/H07-/[P1%]41SkhY8qqU):%\lkk%S1oGT%,G^$GdIs(@3^7/30.#NGOL@)Bp=S;%N#g,/FF^`XP<D-[7
%B@MhPYr9N.oS+4F(437)IH,e5POEb1qTTjne$S_c^7Gl`LQB:6UGD/`Q1as,3-pXXo5$0->5ghkb$X.o"NTmns7DLps5,e^^VVl$
%3_V?.Jn%7(#MrYQ?nljOpJP!?O"u,_;&D!8ZM%e1H3KJ#]OWg8[7Hd;(^UM#NlV:%pIU3<CHU0(BcDt.WQaULJ;0?Vb"KjJAUF'%
%e_A3\V%17ZZ1pUR+;714Kb?NOPW'3q*#ud2<H#@;$pE@Ur^9&Q<4j@ZHa&)IpK</erQr^t2Gid3LiH$0E<9*Z,cIqYnp703[ujN[
%n:!lLD6V_ZMn$-)r@F7D%DL"*?9)(e'I\;orJ#[VP-/`?\S_05.WH;*gl(mHc0Fji`@j;B3/*;j]Y>;[;"<Gd)&?1nLne2/W?pE$
%p1Wh\;bb6=h*r8i"uQbsH8R7Ir.aA;<RW/B4+-,"ds;^rJOjPa#YcVV#AH3?qO$%6N+m,;]n/XKk9h1B=euFTVX!/,C7FdH6qQY`
%:'l5B/h4t(iR,b+Ps(%7NAVJoffo,\CAkOA%D[TjXVZ7;!Zc[/fX7;S&-tAi91K5e`<>H"U!^\(X4iccPXT>7OHFY4/Q+48G&*We
%3Yi<Uo)'O]2!^)aBmU@Z!*akVp>U,7S$e=5J<$XOd^alZ$7eW[.[=6#Cfu>Fmb(q3@HS(\W.,,HSC1U>;@)X^EW=1+R'&2Nb"J_t
%Y'oJM=NaKr5[[R%,R5\SebZ)UaUHinSW[F<l!kT%MYgmq>oJ,J<V:rG_-3!]SqV,0/Q.:SWHlj7Wad:XDPu!Fk,F\)W3H8a!*-Nt
%E['1d20H3h3,mEuck!,umm#$<p9=rk<ICn*.cOoFNiHh^T'S@,nV#CC9oj*L4:.+,$C`L!/TdI,0Pf3'Ms:O5(>=(U</cQ,%@%R\
%7S6-b`Jam.(rW.3P$1`VA;^&#k^\9D21QE-ma.OV7&B]^=tYCYjKp`)UA@<_AXeZMcPd/NGJ[)(9!%Z>O^?jpT]dDX]"b#&N,u`I
%RcI(X!g/d3U4a/tW62S[]%R2G"''Q=?4n:/Yej$r1W*%;,slI7e@KYi9BqYRW^K&DJ_-XU_0,H$Sg@>aU_Ph<bnM/=*g;qRUY`Q]
%2?AZ&9!_3.H7!_$l4CdYWhWID4-cKL*tdE>6BV-,BfLSXCCeg+Yi;J.0$0?S>Lk+6InJVhY/TaAj^m]W+l"VYZgD5T5fhBM6:3R.
%,&+APY@t1oLZNNQe@aj0Se>nI@OSkV7<cBS'"M4-4"8&BP#g+5Ro:[sl#H8D]Do)>Qg_,2_rFhDZ&+9-.GH]U$uJ?>MVGGcZC4L)
%d$d;$_ancXDiE,N(I4K,3L.-_b\e/m3=i%=faPZ$%;R9B*_ZhR^R7hiMd>f-K)"f`JU:D/Zq.oWR4FsL^:O,Zgb:VQ-;Ms<fIai-
%i!A.NeMT=3-#W!O3\ShoP4SifJU>).P_,$$NrH(WU>l^5:sk)OoNirg86=['\i8@j'dL-F#AR,:*=0geF;'BQb3;_A9gZG)=:-@M
%<)U0hq8o>!@ZMJSPn!%^]="ea#Y:2?"?!2._]X8Bd[<p-Dk#f@Bs%7HJ_oTnfW^+Cf;jqj/?I.,OLeFTiX8=)*ZL/1c`=SQI:cB`
%Hm-?8p:D6TYOkY_4h#A>Negp%P4.TIN-=X[T\Gkn:#\#kHGk'5aIVU/<;u_TKEa!Y"#I!f>na3,7g<("gK[7NNj:CLplln4';g[e
%e5CU!KM&+(qj\Vtf:'[6K.0D&qX^e]/-DONoXD?6h0JT^*OP1pogJ?t`<$k,igAsCUYuZ?]!I6XE?m-!lYjEZ=Dg,PZ,-X6ghcID
%e)nnOS5rk2<;u*Gi[JuQUr-7L5=lU1]plW-KPg3:BcM6d-7tr?$SV8c>B'M\LrnDS/S!L^gXaKgM25Qu6u)GQ/QKqa-"_(X[eR^_
%%<l7pmmklH#CdAjCW!+\/sIm7?&(aF%?\e42`&,!SoRE81JE!\[ih&'Vg5<YfhF>HfsB(^%FE/ahW'Xq_o4Mk-egLbdrl41Me,hN
%X>f+JVFnn/`N0/E'35DoLs_ssWeTb@S838kR0i_DUBi=3ihAVX_OQire<:_lDpOFh2D;#d`S"Kq*I0(\p@q=)0nRQ=bpGEW?j.6J
%.GIEs/VHt$n<@s5;?j,#"n9k)E`2%-AWQ'PA6r(#B`ud@([$4:8_mTf[Fj5?0^i"8o<+lBS2gM=qg6dQ>hmN(6f/803P0`!7O0dc
%?CEP@CrO)n:6=RWDsT0X*CPFb3H+o>L/&n,P>^/bikJbS^1V5ffVXnXUs>%P6#g)W45)h9e%pMthV&Yn5!c4!nB8bU@,WBgS<J!Z
%C&>,ih)[slI'EZDH/,rn3,^G>fZd&q/JegnRN"Gp,l-6BX(''idITQp]2kfDU'@0*pN%1nH0ZjrIT@Os83p+h[*E?EgVlRRIVh*k
%I<4P&ES[UnD)EX[Ca`gQ:_WK5OJ3DO'cE?5I_VMm87*ji.",n\]hCSqMjM`Nak^^RM$]KM(K+-?gI^)*l*ZnXWBB#)*]oQ-X'@]Q
%NcV5T50l\*IC:59T23_A=a>)4nR6Ta1S+6NSXn*nm.A0?[cWrtN'mYkc.^NsQcJ\1BJt1KGO00dcbW5aoIl$kh`smjR\_0(M4#+D
%eg=;dl@]0KR;Yu^<lC.:I]aT'7!Wb$&$NLXaeU;\qA<GN,n%W=KTFfr.I6fOZ<HRjHpkDXX#L>#PAa[Vc.ceD[\GEYJ'aM3gB7@W
%gi=.r%NCZknmBE[N>F7eP3l9#kE;"rb?2>\^!WeVH-9UQ.$+pbkHjE53CMI+;lQWU%f8RAR<%b.Dt^5V6FR$dp2"oA1sB6C5'pFV
%RC'mZ9Y&tA8fin2BkI%TL4dTmp.@/h3bCpM(Y!c=U(3I*:#47H4KB5JL9*Bo:<KPUZH_Nu`ebWUPE:Qh,.hSgl>`:1nR>tG1D?O3
%g;:oIX0W4n1(8rB;qW)S\6B:2(+\@'ERZLuTXo_=]uutX%`bCrAc,)-CBUSc,*hDdpdjYJqu(2OcJ(4qNLG5DH6jY*C.E;n>T/r!
%c;XB]Yi4/-<:?]pQ,B/u2.=%)e=(Igc].!1k:3=5FiJO'1U^5Qd8aR7s%Pe\DHXq]MWoP;DKS"\qDk!O]pJne"dDWG2fPYC0$s:#
%rb;>5r_*V=o7sV$G)SBb9F%<.7BtjWe0.87"#?S+=V,)6C[&&=3VL5'NG0rc)oY]76^h^o$*d<Li&\$?-@jTD7[LcfmS9'h>ZB)/
%&iAnPCP\[JEGaN\+QWKtT0oCHRXBuE-c'.&Z&N2R8/ga?QGjSr3JY'3a=>EVo$aio[(WoRLaV6^/>(C1*"02$EGfH]eDqVj[^Hnq
%n`f>1*V\OWFPNMMF/2rYPZ-#DUVr]k-Ka6(8/UipRnm*Mni60;drB=$*(&+IXrs)t#Xq+N9FFa>Ko_AkaDB<%3d[F%b_*6g=-'+&
%I'hXfE3_@j?:nXJFCq7?Sj'Pc`BS#Ve;I".)Wu?fiFVm2\[>O4H^`Mgm!JiZGPV/ISt+eq+3F4p#G(A7dn"IT#Z6[KT[,SlWc1>1
%Ppsk@BS(i/ZrAkb"N+t,i,7ejAr#AVEDp3RHdaGAN:bHVqk((;Plr$.f!]S?mE2rnqYk?u>D+';^#]X9THN-3)UCn?_ffMRbfPd-
%ShBL-PY]<t1Gek8*aWkF#\I!<<ko<\:1t7nLH&G4FeT1\;)B\?\q<uFopnTrjrVhh4YYj&jU0M.:H15$'OLKk?fM="01(Um<INbZ
%lMeiH0!f+A*WABR3UA?AYWaJi#Ge(EA1;o4(fTX3->H4L*EJjm0;mAHnmO#of;IHgqhd5"3(T%6""![8:J3F,i5r44Hj^FQTVYuc
%TG*LKY<aK4f.QK@gDsu5oC2HdVfpsTOKG)#q=:+QoOQU``6M"[:IDm`#:jRcI<!h$$o[/:QP9'mk9LJS6l:c$%F9K/iYkB[0a6$#
%(U4k)!k]4aAtEghTR>Pu-79ZNnmpCF741,kk4qph+&a=5<T()jBo*DiO;SM]X-S%m,C_26kj\F]ULlrSfT29!WrDf4T25,jgpb5>
%?R_<^20Z&)*,9FGek[hoC0KT-7#X92;\W**\KMcT[@Oe$4;AJr0!,(F([B1`Dn;@'h4L*SmNVrAFE3-TTG+l:Zg,o_Nt@j0ds/Sj
%jn2JJl7.pPB"^>?SJ-YS2H[G[o?Y&56Z-n_S@nCFWHBlng:(\:o\"hfcgG?!2m5-SnhXO\4B9kHHGU+D2IEmXSs!kF8\hIY6<9eK
%o$7W3".cTcfOU,hTnS6R'UL2A5eps5')/dR5bKs)cmr1#m1efI`&J6>lO0'QQ:Z2HiPQqHIF"cX?N.eUnJh^H#t:p8pS89dT?Z=S
%d>GRdCA4'h+n-hG)^8A#QP>qdlaL3_Y!5d51d@cZHq5("BUQl&TW2t5l3;(ERttPm,['Nf*_r<8fDNmCmCh2s6H$R<0,&$4)Z"nY
%8SYiZ-_!n7`9;I-4S.4oC!g8j_T?LlmID`HE@[0RpF&o>Lb`-.rV1E&B"\!]_fSC#!-*qJ(atQj7&r8d*n;&A+u*dOgYA)*qe7sa
%AWWAB"7bCpT?`6V$0WC.W--c>+5TePNn@/*kl&)oK`3cGUchItRHTF,B#cWucA3Q:5Y6-42ZSs5"K#d8LnXRd"Gl9SUI.od+'&A(
%+C2Qg+!5+f@a(`+U/)m=2mPV5:sJ,a5\M-3FKK`ZR$`\#`HQhQMn^cg1L+m$UOSZqM]n_<M#7,O[)s)0e2T*$O9/_pReW3=d/kGI
%eR)e\[\/h"YK4L7X6qt0di$PobJ/GI"oGnb]/*fn!eC.d[9kB#(RjSc3?)E6@cf"C#KK&N;'J$k.AM#T&IMb3\=UU5/p(K%"E3'A
%<G1:=AU)_7U_6,K)-PYg`?$9="4IUf(&6IF>oiqb'c'_>Mc.[SA+4A)C@?EZDa$/gR:O$?mODWY6mQ8-;lt*9k@&e.P01-EVdM'[
%DbOVg@hq.(.#m#2efb8.=DikpB=Wt417l@#cQRM48.c>'JCGi\5qr!>"Y>Wr27t6WETM'/;bGnqABh#QlZS(.PFL-cL^>j<1IB.u
%8d!SK/:]T^I!=()N]oJR4i#%&PEdjnUg9u$aJ-`jZ'5p;Q$d2@.'5_T[s.!9b'YfZ7H(DJSK#Ad&m;Z=T"Hk5;6[>/-im9lG?I1`
%7`!@O(_hM.0M`gg9FRhLe["BG`1V.;\/VETMffof[:N2^*S?Qa0S[OARZqYo#[YQLP"r5&7!VQp)GqT;E$-LlA51q.CP^PYlbUY:
%fpF6EAIKX@X-pkgBS$#EB(W=@o_8'*0Hq-gHIjPW\3ssDVU0XFpX[M.@o)b2jc0B9EmJgFXpdYFRO*)2ZY&q[`<;Ma>mG7qO'6MO
%%X_6N$oiP>T4NrjS&?LoKHGGg*,-"7W^J*?=BI2U%-)Q+Fj%"tPcS:.,Y`9%D+9WK:OPNLo@U8o9KLho@9G)eo3UU@Q:aQ]f]g@5
%;&#9Q9K8ka2+im082.$W&(hI4ec@g_DgDs^TU#^?$&R,RN#PJS`.<"siSs%mOOOBu2I''>=SRm6H)3:3PK=Jf3#YKt!f/"]3_>pO
%@[)\@OTX,p)n(!?ie3L4K)_`^i:-5ZG@_=s&qjE76q<5QnuTjd9F/<qYntCVKm%g<I;ntWB:G:jL-!=F0$2N#iZl=,7p1(dOG->8
%h^f5+V'SZs00,5Rd&AW=d47ZE4n"70m</^K<Rb?^5t]If1b?L\W``Jqp:^ibZ/Y'Y2Gn^:>+Sp=<_n@#h(dg6ns#_T7q4La$O#Sa
%UVZ%X\7=b<Oq8P&3L!Z)MjI5FGWi9U]?]E"P!hjN`>(rQS`H[rlaqsu?gm=Z>;smBG22i"(F"C]*e&H<>EC*uOKi95ada--'PY:c
%SZ]">XFi,9/7grDO(Ru2@9DJsn4!_+PFr$#(g'uD3([,%Q!nSm?A8?ej"VIm6]L`<%T+O7-<]kW=\`ZLW])Bs"pG<XCGEL5i`'EM
%,$a:DLD@T5g&ecf^^\N$"(K\l_pFZr,$+uPm'IR?&ZT#3j=(9$NjU@r\kN%Bl78tM#GS_Cnl'S3WTTnq;=;2pDP>V#DCla8*Z!Ti
%%pGa-huL0SQZTQ!.41Z[]E[(E!GGE;-lNN95YDrqq7=9g/GGo0=D,(i!_CH:KS+4b'HF?6Ku1-\g=NIU@:H*]bWDlr2GAH1PS"eQ
%\MiE2D&E_AJOe0m:"0oCF-)o+ZGh]Y!#rm.%XS"P.j9j:bkaXo!B;0SB'IPgD<e\LJF!/o9`@B$4IT-GP17s&<2mu]XD1BSi<i0!
%?\<-.bP#W'>Yu8%;lDBBS#`h>LjcS)ggOaNTO=Ej?gb=<ecHZ&Y-jW[/!qta6D0tROogNZe/\PG=3:iDf^:,)Pc:74=O9\gd'L%h
%:CL"S$*q3@Y_oLHac%/)b<bcU:E3sKB'JR9_S/QbQ-aeu4h[8_>d-r0kXsMP08;)dm*1dJ`8RFJYj:AmBp>bu=jYAe3/sY34V[.\
%QoEb2%Hr[I*lp<+;2c.CMi.Z.77R##r`J=mbT*OjA:NY!aeZgOJcUC1gSt,$4:UTd^N]5UFG3V)7LrN2O!]DnF&!a?WEhr7knqm%
%]"2J"g[GFqWM)\tU+:;AS=g?^e9s9ui`G7*0R,:=d.+c?lQ)VX?[qa&/t7K+V<^NB2PTliYt_*AGEe'\T9,#L-"FP2(gF9eMC-h/
%!Y0!"RN+_D'1#d,C\c/:V"WRf<l>+9Y=WbRl./Ce8oLZnmi+<<P@R[uN%1`)F'^ln!,bi%=P;l=L^ns`4[DY<^r"Dh4#nYgA3mFp
%*N-;7b)35ll=cg5o(b>i-Sqb`8BE%[?i6J='LUnCmcuMr$2GL5r7;hmR8WTEOF1O9VRV!W:/l8#L\1*4A]5-?M&/PW1\A!V=?BQg
%FAc"`&usN#p?Ebc9Ea(nF(/)ollC4pn;sAr9XScu<_+HQFf(*GCs?mR2*'`_=\*:6^p.9NJS]p^M'P#j3#FX`,7rn&IZ0Ar0Lh3E
%K2[Ca!QPEDR/i9gQK%FNI4bT`0;nTq(L^P_X9%Gn)q6RsI9&mo8@C+h6=Z2>#*tuK&8,)KDA@\,6_`k?bSYYPP!`Y/[,gGVr.qAJ
%K"s&?TrSgg<#/*88sma/l6n#oh^U2b;1mf4Q:1Xk.5kIM0Vbno(b(nB^e.+8$YlJmcO%pehhn*H3oIJ9[jamI`OL>h5p)HQnSEW^
%WqgsaY%k]KN[MI"6<F.<'e1,#<n.^,).8:0;5Rn4OsOV[WOakF-;k?sWEt-`E)[Os\u`JR1p4/A0%tQ5)Ped4a6<mZ>!ac02Jt@I
%F"p#D\F[Go^W:Q-<<A%3q?o@IN3Wn6g3+6GWJ@<0h7[1VabucRH(TTQ?Mgt3K4HTsZYnTgd,?R38QNV\&ZV<WgF37FkpLPC!97Ud
%j#rqBq9q[SNg"_%Ed1=hhVi:BT4"*#$%.bWLq<`%1CI@!=Rcau'$fh:PDg4("k*kh6GdH!Bfabm/4J%Y[cSpc6"WTOANEe7J?!pg
%M_Ikh3KI/pa_\5g)s?Rr3o"DH(E_o2[Lc+[]*gkSMD&1kB_5au3!>Fpp6%Fa<;ThYPTqNQ?cQ/Q1tGdJ;).RG4/,SjLQEj-e?L$-
%di^<TiYf6sEB^&\Th;]M*^i,6MAW9eK>mH.=RaBZDa)2@'0p'\T;Z#:V3L^`:&W_=VEFDZJAS>-F&th>PWK>a9UPu99a[YE(p'^X
%EQFVg=J)9A#fr]s=iD<75.f4Ar(p;XMCY6:TajUt8ge&G-bE6]P+UI6XrWFC)"O!'J(?ffa;0oCA4FJki;Ti^4/-6$iUNh<oQmB1
%B4HC2qHp]-#Yd1G!1](1Ig=Th#"?A30Wh'(^FW!cV@3];7dN&94OAOKShSU2e[LDm#YNW2g:=>-k]f%D\\"HWs'bRH"qG,6'MSbg
%#;.h1+,?gYT$>m[Vo)0!m3OE`o47T'<2MB<S-nh)-%5-UhQV\>U4*$"Y52@Pas(:4h*SnUa+cd%H4Z,[(%KB(mF/t&R-N)JGZ4+I
%6'MsLij&inq;q.*$_ElpADg8qNWs_@W.i%f;Ub#c(Ik7&WZ"R04!n02R7-GGY^?c9KP%hD_d"q`7aR"S=5A:@gcIsJ6TV4gN:Jf]
%0K`V2EpZYHr>2H;h,Gcso-=R`HE">mE>jS'&7:RO#H=2p%QhEF$Iu-fSL4qRP3b6^lB_/t?]KE,jS/dF%E22,ha*(?"UM]$.MIkX
%hKb`5BuHYfG'"iT.`a>DB."Qc^@'s.&NsYHZh*T?7&g=\728NrZj6o`@Gr9RQK-(V>6gj:Zl"D.Zo++#XB(8a!B?8Uq5FU4/SISk
%>6U#_Jg)Ve%]-\Eq;l'JSup@HmRd0T4uu[G?=3+2<tpjn$M1KWoLbsfa=^LTB+om887bYokoA@@"i$3TL=i^U,RLss.JX((g`s6W
%*&R^g[#N`V?.T8a3i`DcC(l)L^maKp@ibC6KL]CUo)4sbOFri[4l*j+!e6'$@a/dM62hQ]=(FkPWSBeVFl$(/Eo"N0ZXq[VYKg*\
%iUi!ehB^.rk4DP4gg.ttm;NNks#:2NNG/9gn?pH=)0kMa/.+m6M%A&,%1GN?2j?=k\`<<GCW2Te"2I#p9B[pBX%JSX8*,Wm4[#I<
%*/=$?0mfO/J?F:@$o"?O\u@?<^!5^>Yocmgk`S*X(.PZ9I)hh/;kLuJT<<Xm@A6PqUYZ8Z01C)1>urV/qml\LiQ701)e9rl\+Wu,
%B?Pd0dKc7@m4$`ZBBfL[>at#>=oLWUk(SuF9nn_=1$MZ:p_]34;"ROkdb.J@$Ls2l.P7lLTY<!+5[;N[K0l[E>$=RfZZW6#.&^Cf
%R6&($ns5?3hQZ`u<`U^)5*H!,W:g*$aT@*]4]ap&U(FSqbF,CP"JNh$8pfDB?ZVUoe*4*G0Q"sl@aCXh[?Qn*Yj:/"Y\S`<gu[X>
%h%+;sE0ZV_BDQ,hrJ_*Ff>;d^@7d"9c7"*(Nma`>LS.u,+*%Z@=e>!_B=qbn'`g").FE>)ptF[UHraBV2bP[e+G5pS8J1<"#t1fk
%`!)+0=>oD_ii=ePiK;i01!.tdFSTb:ke-So^);?@>Qstois_N_cS\B&CpXAL5d;"FJD'Y>h0\KJjt.\%P7TA5`rq27<78(APnj$P
%>aTtBSgrW:SA_ai2+X*2Li-Dhg=)l]SaLLA[j7M/6Qj&$gL+$B1(%BqCr1qP.g.mclX1@+.8?4A6plsr;,e=0JE$e,P.;VE6[iU/
%I!k2Mp$#V=`>iT'PrDW6]j/Ke'>uEYEK_(.Z`hBd*1j@=jN1Ss:A-C$S!V/+J%#XYgOH1%qYP42nF4^&^AmWW]1)M>5CN.Dp](0I
%2uimLrjuP;lAshPoAB$*^A7J,MYXpbO7g9UrqP=Hn,MuThn?f%rnm_I5>ZUgo"]0moD=%8qd9BgrrDpOKKf~>
%AI9_PrivateDataEnd
